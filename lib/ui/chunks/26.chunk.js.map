{"version":3,"sources":["webpack:///./src/ui/src/components/PageReplacementModal/FileListPanel/FileListPanel.scss?c175","webpack:///./src/ui/src/components/PageReplacementModal/FileListPanel/FileListPanel.scss","webpack:///./src/ui/src/components/PageReplacementModal/FileSelectedPanel/FileSelectedPanel.scss?40bd","webpack:///./src/ui/src/components/PageReplacementModal/FileSelectedPanel/FileSelectedPanel.scss","webpack:///./src/ui/src/components/PageReplacementModal/FileListPanel/index.js","webpack:///./src/ui/src/components/PageReplacementModal/FileListPanel/FileListPanel.js","webpack:///./src/ui/src/components/PageReplacementModal/FileSelectedPanel/FileSelectedPanel.js","webpack:///./src/ui/src/components/PageReplacementModal/FileSelectedPanel/FileSelectedPanelContainer.js","webpack:///./src/ui/src/components/PageReplacementModal/FileSelectedPanel/index.js","webpack:///./src/ui/src/components/PageReplacementModal/PageReplacementModal.js","webpack:///./src/ui/src/components/PageReplacementModal/PageReplacementModalContainer.js","webpack:///./src/ui/src/components/PageReplacementModal/PageReplacementModalRedux.js","webpack:///./src/ui/src/components/PageReplacementModal/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","FileListPanel","defaultValue","onFileSelect","list","id","elements","map","item","isSelected","modalClass","classNames","selected","thumbnail","hasOwnProperty","src","url","toDataURL","img","className","getFileThumbnail","tabIndex","key","onClick","find","onRowClick","onKeyDown","event","onRowKeyDown","filename","FileSelectedPanel","React","forwardRef","ref","closeThisModal","clearLoadedFile","pageIndicesToReplace","sourceDocument","replacePagesHandler","documentInViewer","closeModalWarning","t","useTranslation","useState","index","currentDocSelectedPageNumbers","setCurrentDocSelectedPageNumbers","selectedThumbnails","setSelectedThumbnails","isLoading","setIsLoading","sourceDocumentName","setSourceDocumentName","currentDocumentName","setCurrentDocumentName","sourceDocumentPageCount","setSourceDocumentPageCount","pageNumberError","setPageNumberError","isTablet","isTabletSize","isMobile","isMobileSize","useEffect","pageCount","getPageCount","selectedPages","getTruncatedName","documentName","slice","getFilename","getPageNumbersFromSelectedThumbnails","selectedPageNumbers","pageNumber","parseInt","onCloseHandler","loadedDocumentPageCount","onMouseDown","e","stopPropagation","ModalWrapper","title","closeButtonDataElement","onCloseClick","swipeToClose","closeHandler","backButtonDataElement","onBackClick","PageNumberInput","onBlurHandler","pageNumbers","onError","selectedPagesMap","reduce","PageThumbnailsGrid","onThumbnailSelected","undefined","onfileLoadedHandler","isFileSelected","disabled","Button","pagesToReplaceIntoDocument","label","pageIndex","isReplaceButtonDisabled","displayName","FileSelectedPanelContainer","props","core","getDocument","replacePages","isValidUrlRegex","RegExp","loadAsPDF","l","window","sampleL","PageReplacementModal","closeModal","selectableFiles","isOpen","selectedThumbnailPageIndexes","selectedTab","source","setSource","selectedDoc","setSelectedDoc","setIsFileSelected","selectedTabInternal","setSelectedTabInternal","dispatch","useDispatch","el","getRootNode","querySelector","value","exitPageReplacementWarning","Modal","open","closed","srcString","handleSelection","onSelect","createDocument","fileProcessedHandler","file","instance","Core","Document","isSelectBtnDisabled","test","isFilePanelEnabled","clearDocument","data-element","Tabs","dataElement","selection","FileInputPanel","FilePickerPanel","fileInputId","onFileProcessed","noFile","PageReplacementModalContainer","closePageReplacement","rest","useCallback","newProps","PageReplacementModalRedux","useSelector","state","selectors","getPageReplacementFileList","isElementOpen","DataElements","PAGE_REPLACEMENT_MODAL","getSelectedThumbnailPageIndexes","getSelectedTab","actions","closeElement"],"mappings":"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","file":"chunks/26.chunk.js","sourcesContent":["var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./FileListPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                if (webComponents.length > 0) {\r\n                  const clonedStyleTags = [];\r\n                  for (let i = 0; i < webComponents.length; i++) {\r\n                    const webComponent = webComponents[i];\r\n                    if (i === 0) {\r\n                      webComponent.shadowRoot.appendChild(styleTag);\r\n                      styleTag.onload = function () {\r\n                        if (clonedStyleTags.length > 0) {\r\n                          clonedStyleTags.forEach((styleNode) => {\r\n                            // eslint-disable-next-line no-unsanitized/property\r\n                            styleNode.innerHTML = styleTag.innerHTML;\r\n                          });\r\n                        }\r\n                      };\r\n                    } else {\r\n                      const styleNode = styleTag.cloneNode(true);\r\n                      webComponent.shadowRoot.appendChild(styleNode);\r\n                      clonedStyleTags.push(styleNode);\r\n                    }\r\n                  }\r\n                } else {\r\n                  document.head.appendChild(styleTag);\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.FileListPanel{box-sizing:border-box;display:flex;flex-direction:column;align-items:center;width:100%;height:100%;overflow:auto;padding-top:20px;padding-bottom:20px;background-color:var(--document-background-color);border-radius:4px}.FileListPanel ul{display:flex;flex-wrap:wrap;justify-content:center;align-content:flex-start;list-style:none;margin:0;padding:16px;height:30em;width:100%}.FileListPanel ul li.selected{border:1px solid #48a4e0}.FileListPanel ul li{background:#f8f9fa;border:1px solid #e7edf3;box-sizing:border-box;border-radius:6px;width:100%;height:60px;margin:4px 0;padding:8px 10px;display:flex;flex-direction:row;cursor:pointer}.FileListPanel ul li:hover{border:1px solid #48a4e0}.FileListPanel ul li .li-div{background:#fff;width:42px;height:100%;float:left;border-radius:4px;position:relative}.FileListPanel ul li .li-div-img{position:absolute;top:50%;left:50%;transform:translateY(-50%) translateX(-50%);width:28px}.FileListPanel ul li .li-div-img.with-border{height:34px;border:1px solid #e7edf3}.FileListPanel ul li .li-div-txt{margin-left:10px;line-height:40px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./FileSelectedPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                if (webComponents.length > 0) {\r\n                  const clonedStyleTags = [];\r\n                  for (let i = 0; i < webComponents.length; i++) {\r\n                    const webComponent = webComponents[i];\r\n                    if (i === 0) {\r\n                      webComponent.shadowRoot.appendChild(styleTag);\r\n                      styleTag.onload = function () {\r\n                        if (clonedStyleTags.length > 0) {\r\n                          clonedStyleTags.forEach((styleNode) => {\r\n                            // eslint-disable-next-line no-unsanitized/property\r\n                            styleNode.innerHTML = styleTag.innerHTML;\r\n                          });\r\n                        }\r\n                      };\r\n                    } else {\r\n                      const styleNode = styleTag.cloneNode(true);\r\n                      webComponent.shadowRoot.appendChild(styleNode);\r\n                      clonedStyleTags.push(styleNode);\r\n                    }\r\n                  }\r\n                } else {\r\n                  document.head.appendChild(styleTag);\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.fileSelectedPanel.container{width:791px}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel.container{width:494px}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel.container .page-number-input{width:92px}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel.container{width:494px}.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel.container .page-number-input{width:92px}}.fileSelectedPanel .modal-container .wrapper .header-container{padding-bottom:16px!important}.fileSelectedPanel .header .left-header{display:flex;align-items:center;grid-gap:4px;gap:4px}.fileSelectedPanel .header .Button{justify-content:center}.fileSelectedPanel .header .Button:hover{background:var(--view-header-button-hover);border-radius:4px}.fileSelectedPanel .page-number-error{margin-top:8px;font-size:13px;color:var(--color-message-error);width:100px}.fileSelectedPanel .page-replacement-text{padding-right:8px}.fileSelectedPanel .modal-body{padding:16px}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .modal-body .thumb-card{width:132px}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .modal-body .thumb-card{width:132px}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .modal-body .thumb-card{width:101px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .modal-body .thumb-card{width:101px}}@media(max-width:430px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .modal-body .thumb-card{width:101px}}@container (max-width: 430px){.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .modal-body .thumb-card{width:101px}}.fileSelectedPanel .modal-body .modal-body-container.isLoading{display:flex;justify-content:center;align-items:center}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .modal-body .modal-body-container{padding:12px 0 12px 12px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .modal-body .modal-body-container{padding:12px 0 12px 12px}}.fileSelectedPanel .replace-page-input-container{margin-bottom:16px;display:flex;align-items:baseline}.fileSelectedPanel .replace-page-input-container :first-child{padding-left:0}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .replace-page-input-container{justify-content:space-between}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .replace-page-input-container :first-child{padding-right:8px;padding-left:0}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .replace-page-input-container{justify-content:space-between}.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .replace-page-input-container :first-child{padding-right:8px;padding-left:0}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .replace-page-input-container{flex-direction:column;grid-gap:8px;gap:8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .replace-page-input-container{flex-direction:column;grid-gap:8px;gap:8px}}.fileSelectedPanel .replace-page-input{padding-left:8px;padding-right:8px}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .replace-page-input{padding-right:0;padding-left:4px}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .fileSelectedPanel .replace-page-input .page-replace-doc-name{word-break:break-all}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .replace-page-input{padding-right:0;padding-left:4px}.App.is-web-component:not(.is-in-desktop-only-mode) .fileSelectedPanel .replace-page-input .page-replace-doc-name{word-break:break-all}}.fileSelectedPanel .page-replace-doc-name{font-weight:700}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import FileListPanel from './FileListPanel';\r\n\r\nexport default FileListPanel;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './FileListPanel.scss';\r\n\r\nconst FileListPanel = ({ defaultValue, onFileSelect, list = [] }) => {\r\n  const { id } = defaultValue || {};\r\n\r\n  const onRowClick = (id) => {\r\n    onFileSelect(list.find((item) => item.id === id));\r\n  };\r\n\r\n  const onRowKeyDown = (event, id) => {\r\n    if (event.key === 'Enter') {\r\n      onFileSelect(list.find((item) => item.id === id));\r\n    }\r\n  };\r\n\r\n  const getFileThumbnail = (item) => {\r\n    if (item.hasOwnProperty('thumbnail')) {\r\n      let src = null;\r\n      const thumbnail = item.thumbnail;\r\n      if (thumbnail.url) {\r\n        src = thumbnail.url;\r\n      } else if (thumbnail.toDataURL) {\r\n        src = thumbnail.toDataURL();\r\n      }\r\n      // If thumbnail doesnt have a url or is canvas then we just show a blank square\r\n      const img = <img src={src} className=\"li-div-img\" />;\r\n      return (<div className=\"li-div\">{img}</div>);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const elements = list.map((item, i) => {\r\n    const isSelected = id === item.id;\r\n    const modalClass = classNames({\r\n      selected: isSelected\r\n    });\r\n\r\n    const thumbnail = getFileThumbnail(item);\r\n\r\n    return (\r\n      <li tabIndex=\"0\" key={i} onClick={() => onRowClick(item.id)} onKeyDown={(event) => onRowKeyDown(event, item.id)} className={modalClass}>\r\n        {thumbnail}\r\n        <div className=\"li-div-txt\" >{item.filename}</div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"FileListPanel\">\r\n      <ul>\r\n        {elements}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileListPanel;\r\n","import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport Button from 'components/Button';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PageNumberInput from '../PageNumberInput';\r\nimport '../PageReplacementModal.scss';\r\nimport './FileSelectedPanel.scss';\r\nimport PageThumbnailsGrid from 'src/components/PageThumbnailsGrid';\r\nimport { isMobileSize, isTabletSize } from 'helpers/getDeviceSize';\r\nimport ModalWrapper from 'components/ModalWrapper';\r\n\r\nconst MAX_NAME_LENGTH_BEFORE_TRUNCATION = 25;\r\nconst TRUNCATION_LENGTH = 10;\r\nconst TABLET_TRUNCATION_LENGTH = 4;\r\n\r\n// Need to forward the ref so the FocusTrap works correctly\r\nconst FileSelectedPanel = React.forwardRef((\r\n  {\r\n    closeThisModal,\r\n    clearLoadedFile,\r\n    pageIndicesToReplace,\r\n    sourceDocument,\r\n    replacePagesHandler,\r\n    documentInViewer,\r\n    closeModalWarning,\r\n  }, ref) => {\r\n  const [t] = useTranslation();\r\n\r\n  const [currentDocSelectedPageNumbers, setCurrentDocSelectedPageNumbers] = useState(pageIndicesToReplace.map((index) => index + 1));\r\n  const [selectedThumbnails, setSelectedThumbnails] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [sourceDocumentName, setSourceDocumentName] = useState(null);\r\n  const [currentDocumentName, setCurrentDocumentName] = useState(null);\r\n  const [sourceDocumentPageCount, setSourceDocumentPageCount] = useState(0);\r\n  const [pageNumberError, setPageNumberError] = useState('');\r\n\r\n  const isTablet = isTabletSize();\r\n\r\n  const isMobile = isMobileSize();\r\n\r\n  useEffect(() => {\r\n    if (sourceDocument) {\r\n      const pageCount = sourceDocument.getPageCount();\r\n      const selectedPages = {};\r\n      for (let i = 1; i <= pageCount; i++) {\r\n        selectedPages[i] = true;\r\n      }\r\n      setSelectedThumbnails(selectedPages);\r\n    }\r\n  }, [sourceDocument]);\r\n\r\n  useEffect(() => {\r\n    function getTruncatedName(documentName) {\r\n      let truncatedName;\r\n      if (documentName.length > MAX_NAME_LENGTH_BEFORE_TRUNCATION) {\r\n        if (isTablet && !isMobile) {\r\n          truncatedName = `\"${documentName.slice(0, TABLET_TRUNCATION_LENGTH)}...${documentName.slice(documentName.length)}\"`;\r\n        } else {\r\n          truncatedName = `\"${documentName.slice(0, TRUNCATION_LENGTH)}...${documentName.slice(documentName.length - TRUNCATION_LENGTH)}\"`;\r\n        }\r\n      } else {\r\n        truncatedName = `\"${documentName}\"`;\r\n      }\r\n\r\n      return truncatedName;\r\n    }\r\n\r\n    if (sourceDocument) {\r\n      const pageCount = sourceDocument.getPageCount();\r\n      setSourceDocumentPageCount(pageCount);\r\n      setSourceDocumentName(getTruncatedName(sourceDocument.getFilename()));\r\n      setCurrentDocumentName(getTruncatedName(documentInViewer.getFilename()));\r\n    }\r\n  }, [sourceDocument]);\r\n\r\n  const replacePages = () => {\r\n    const pagesToReplaceIntoDocument = getPageNumbersFromSelectedThumbnails();\r\n    replacePagesHandler(sourceDocument, currentDocSelectedPageNumbers, pagesToReplaceIntoDocument);\r\n    closeThisModal();\r\n  };\r\n\r\n  const deselectAllThumbnails = () => {\r\n    setSelectedThumbnails({});\r\n  };\r\n\r\n  const getPageNumbersFromSelectedThumbnails = () => {\r\n    const selectedPageNumbers = [];\r\n\r\n    for (const pageNumber in selectedThumbnails) {\r\n      if (selectedThumbnails[pageNumber]) {\r\n        selectedPageNumbers.push(parseInt(pageNumber));\r\n      }\r\n    }\r\n    return selectedPageNumbers;\r\n  };\r\n\r\n  const onThumbnailSelected = (pageNumber) => {\r\n    if (selectedThumbnails[pageNumber] === undefined) {\r\n      selectedThumbnails[pageNumber] = true;\r\n    } else {\r\n      selectedThumbnails[pageNumber] = !selectedThumbnails[pageNumber];\r\n    }\r\n    setSelectedThumbnails({ ...selectedThumbnails });\r\n  };\r\n\r\n  const isReplaceButtonDisabled = () => {\r\n    if (currentDocSelectedPageNumbers.length < 1 || pageNumberError) {\r\n      return true;\r\n    }\r\n    for (const pageIndex in selectedThumbnails) {\r\n      if (selectedThumbnails[pageIndex]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onSourceDocumentNumberInputChange = (selectedPageNumbers) => {\r\n    const selectedPagesMap = selectedPageNumbers.reduce((map, pageNumber) => ({ ...map, [pageNumber]: true }), {});\r\n    setSelectedThumbnails({ ...selectedPagesMap });\r\n  };\r\n\r\n  const handlePageNumbersChanged = (pageNumbers) => {\r\n    setPageNumberError(null);\r\n    setCurrentDocSelectedPageNumbers(pageNumbers);\r\n  };\r\n\r\n  const handlePageNumberError = (pageNumber) => {\r\n    if (pageNumber) {\r\n      setPageNumberError(`${t('message.errorPageNumber')} ${loadedDocumentPageCount}`);\r\n    }\r\n  };\r\n\r\n  const onCloseHandler = () => {\r\n    closeModalWarning();\r\n  };\r\n\r\n  const loadedDocumentPageCount = documentInViewer.getPageCount();\r\n\r\n  return (\r\n    <div className=\"fileSelectedPanel container\" onMouseDown={(e) => e.stopPropagation()} ref={ref}>\r\n      <ModalWrapper\r\n        title={t('component.pageReplaceModalTitle')}\r\n        closeButtonDataElement={'pageReplacementModalClose'}\r\n        onCloseClick={onCloseHandler}\r\n        swipeToClose\r\n        closeHandler={onCloseHandler}\r\n        backButtonDataElement={'insertFromFileBackButton'}\r\n        onBackClick={clearLoadedFile}\r\n      >\r\n        <div className=\"swipe-indicator\" />\r\n        <div className=\"page-replacement-divider\" />\r\n        <div className=\"modal-body\">\r\n          <div className=\"replace-page-input-container\">\r\n            <div className=\"replace-page-input\">{t('option.pageReplacementModal.pageReplaceInputLabel')}</div>\r\n            <div className=\"replace-page-input-current-doc-containers\">\r\n              <PageNumberInput\r\n                selectedPageNumbers={currentDocSelectedPageNumbers}\r\n                pageCount={loadedDocumentPageCount}\r\n                onBlurHandler={handlePageNumbersChanged}\r\n                onError={handlePageNumberError}\r\n              />\r\n              {pageNumberError && <div className=\"page-number-error\">{pageNumberError}</div>}\r\n            </div>\r\n            <div className=\"replace-page-input\"><span className=\"page-replace-doc-name\">{currentDocumentName}</span></div>\r\n            <span className=\"page-replacement-text\">{t('option.pageReplacementModal.pageReplaceInputFromSource')}</span>\r\n            <PageNumberInput\r\n              selectedPageNumbers={getPageNumbersFromSelectedThumbnails()}\r\n              pageCount={sourceDocumentPageCount}\r\n              onBlurHandler={onSourceDocumentNumberInputChange}\r\n            />\r\n            <div className=\"replace-page-input\"><span className=\"page-replace-doc-name\">{sourceDocumentName}</span></div>\r\n          </div>\r\n          <div className={classNames('modal-body-container', { isLoading })}>\r\n            <PageThumbnailsGrid\r\n              document={sourceDocument}\r\n              onThumbnailSelected={onThumbnailSelected}\r\n              selectedThumbnails={selectedThumbnails}\r\n              onfileLoadedHandler={setIsLoading}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"page-replacement-divider\" />\r\n        <div className={classNames('footer', { isFileSelected: !isLoading })}>\r\n          <button className={classNames('deselect-thumbnails', { disabled: isLoading })} onClick={deselectAllThumbnails} disabled={isLoading}>\r\n            {t('action.deselectAll')}\r\n          </button>\r\n          <Button\r\n            className=\"modal-btn replace-btn\"\r\n            onClick={() => replacePages()}\r\n            label={t('action.replace')}\r\n            disabled={isReplaceButtonDisabled()}\r\n          />\r\n        </div>\r\n      </ModalWrapper>\r\n    </div >\r\n  );\r\n});\r\n\r\nFileSelectedPanel.displayName = 'FileSelectedPanel';\r\n\r\nexport default FileSelectedPanel;\r\n","import React from 'react';\r\nimport FileSelectedPanel from './FileSelectedPanel';\r\nimport { replacePages } from '../../../helpers/pageManipulationFunctions';\r\nimport core from 'core';\r\n\r\n// Need to forward the ref to keep the focus trap working correctly\r\nconst FileSelectedPanelContainer = React.forwardRef((props, ref) => {\r\n  const documentInViewer = core.getDocument();\r\n\r\n  return (\r\n    <FileSelectedPanel\r\n      {...props}\r\n      documentInViewer={documentInViewer}\r\n      replacePagesHandler={replacePages}\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n\r\nFileSelectedPanelContainer.displayName = 'FileSelectedPanelContainer';\r\n\r\nexport default FileSelectedPanelContainer;\r\n","import FileSelectedPanel from './FileSelectedPanelContainer';\r\n\r\nexport default FileSelectedPanel;","import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport core from 'core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FileListPanel from './FileListPanel';\r\nimport FileInputPanel from './FileInputPanel';\r\nimport FilePickerPanel from './FilePickerPanel';\r\nimport { Tabs, Tab, TabPanel } from 'components/Tabs';\r\nimport Button from 'components/Button';\r\nimport FileSelectedPanel from './FileSelectedPanel';\r\nimport { exitPageReplacementWarning } from 'helpers/pageManipulationFunctions';\r\nimport { useDispatch } from 'react-redux';\r\nimport getRootNode from 'helpers/getRootNode';\r\nimport ModalWrapper from '../ModalWrapper';\r\n\r\nimport './PageReplacementModal.scss';\r\n\r\nconst isValidUrlRegex = new RegExp(/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/, 'm');\r\nconst options = { loadAsPDF: true, l: window.sampleL /* license key here */ };\r\n\r\nconst PageReplacementModal = ({\r\n  closeModal,\r\n  selectableFiles,\r\n  isOpen,\r\n  selectedThumbnailPageIndexes,\r\n  selectedTab,\r\n}) => {\r\n  const [t] = useTranslation();\r\n  const [source, setSource] = useState({});\r\n  const [selectedDoc, setSelectedDoc] = useState(null);\r\n  const [isFileSelected, setIsFileSelected] = useState(false);\r\n  const [selectedTabInternal, setSelectedTabInternal] = useState(null);\r\n\r\n  const fileInputId = 'pageReplacementFileInputId';\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isOpen && selectedTabInternal !== selectedTab) {\r\n      setSelectedTabInternal(selectedTab);\r\n    }\r\n  }, [isOpen, selectedTabInternal, selectedTab]);\r\n\r\n  const closeThisModal = () => {\r\n    setSelectedDoc(null);\r\n    setIsFileSelected(false);\r\n    const el = getRootNode().querySelector(`#${fileInputId}`);\r\n    if (el) {\r\n      el.value = null;\r\n    }\r\n    closeModal();\r\n    setSelectedTabInternal(null);\r\n    setSource({});\r\n  };\r\n\r\n  const closeModalWarning = () => exitPageReplacementWarning(closeThisModal, dispatch);\r\n\r\n  const modalClass = classNames({\r\n    Modal: true,\r\n    PageReplacementModal: true,\r\n    open: isOpen,\r\n    closed: !isOpen,\r\n  });\r\n\r\n  const srcString = source[selectedTabInternal];\r\n  const handleSelection = async () => {\r\n    setIsFileSelected(true);\r\n    let document;\r\n    if (srcString && selectedTabInternal === 'customFileListPanelButton') {\r\n      if (srcString.onSelect) {\r\n        document = await srcString.onSelect();\r\n        setSelectedDoc(document);\r\n      }\r\n    } else if (srcString) {\r\n      document = await core.createDocument(srcString, options);\r\n      setSelectedDoc(document);\r\n    }\r\n  };\r\n\r\n  // File picker can merge docs, in which case the callback gets\r\n  // executed with a Document not a file\r\n  const fileProcessedHandler = async (file) => {\r\n    let document;\r\n    // eslint-disable-next-line no-undef\r\n    if (file instanceof instance.Core.Document) {\r\n      document = file;\r\n    } else {\r\n      document = await core.createDocument(file, options);\r\n    }\r\n    setSelectedDoc(document);\r\n    setIsFileSelected(true);\r\n  };\r\n\r\n  let isSelectBtnDisabled = srcString === undefined;\r\n\r\n  if (selectedTabInternal === 'urlInputPanelButton' && !isValidUrlRegex.test(srcString)) {\r\n    isSelectBtnDisabled = true;\r\n  }\r\n\r\n  const clearDocument = () => {\r\n    setSelectedDoc(null);\r\n    setIsFileSelected(false);\r\n  };\r\n\r\n  const renderFileSelectedPanel = () => {\r\n    return (\r\n      <FileSelectedPanel\r\n        closeThisModal={closeThisModal}\r\n        clearLoadedFile={clearDocument}\r\n        pageIndicesToReplace={selectedThumbnailPageIndexes}\r\n        sourceDocument={selectedDoc}\r\n        closeModalWarning={closeModalWarning}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderSelectionTabs = () => {\r\n    const isFilePanelEnabled = selectableFiles && selectableFiles.length > 0;\r\n\r\n    return (\r\n      <div className=\"container tabs\" onMouseDown={(e) => e.stopPropagation()}>\r\n        <ModalWrapper\r\n          isOpen={isOpen}\r\n          title={t('component.pageReplaceModalTitle')}\r\n          closeButtonDataElement={'pageReplacementModalClose'}\r\n          onCloseClick={closeThisModal}\r\n          swipeToClose\r\n          closeHandler={closeThisModal}\r\n        >\r\n          <div className=\"swipe-indicator\" />\r\n          <Tabs className=\"page-replacement-tabs\" id=\"pageReplacementModal\">\r\n            <div className=\"tabs-header-container\">\r\n              <div className=\"tab-list\">\r\n                {isFilePanelEnabled &&\r\n                  <>\r\n                    <Tab dataElement=\"customFileListPanelButton\">\r\n                      <button className=\"tab-options-button\">\r\n                        {t('option.pageReplacementModal.yourFiles')}\r\n                      </button>\r\n                    </Tab>\r\n                    <div className=\"tab-options-divider\" />\r\n                  </>\r\n                }\r\n                <Tab dataElement=\"urlInputPanelButton\">\r\n                  <button className=\"tab-options-button\">\r\n                    {t('link.url')}\r\n                  </button>\r\n                </Tab>\r\n                <div className=\"tab-options-divider\" />\r\n                <Tab dataElement=\"filePickerPanelButton\">\r\n                  <button className=\"tab-options-button\">\r\n                    {t('option.pageReplacementModal.localFile')}\r\n                  </button>\r\n                </Tab>\r\n              </div>\r\n            </div>\r\n            <div className=\"page-replacement-divider\" />\r\n            <TabPanel dataElement=\"customFileListPanel\">\r\n              <div className=\"panel-body\">\r\n                <FileListPanel\r\n                  onFileSelect={(selection) => {\r\n                    setSource({ [selectedTabInternal]: selection });\r\n                  }}\r\n                  list={selectableFiles}\r\n                  defaultValue={srcString}\r\n                />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel dataElement=\"urlInputPanel\">\r\n              <div className=\"panel-body\">\r\n                <FileInputPanel\r\n                  onFileSelect={(url) => {\r\n                    setSource({ [selectedTabInternal]: url });\r\n                  }}\r\n                  defaultValue={source['urlInputPanelButton']}\r\n                />\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel dataElement=\"filePickerPanel\">\r\n              <div className=\"panel-body upload\">\r\n                <FilePickerPanel\r\n                  fileInputId={fileInputId}\r\n                  onFileProcessed={(file) => fileProcessedHandler(file)}\r\n                />\r\n              </div>\r\n            </TabPanel>\r\n          </Tabs>\r\n          <div className=\"page-replacement-divider\" />\r\n          <div className=\"footer\">\r\n            <Button\r\n              className={classNames('modal-btn', { noFile: isSelectBtnDisabled })}\r\n              onClick={() => (isSelectBtnDisabled ? null : handleSelection())}\r\n              label={t('action.select')}\r\n              disabled={isSelectBtnDisabled}\r\n            />\r\n          </div>\r\n        </ModalWrapper>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return isOpen ? (\r\n    <div\r\n      className={modalClass}\r\n      data-element=\"pageReplacementModal\"\r\n      onMouseDown={isFileSelected ? closeModalWarning : closeThisModal}\r\n      id=\"pageReplacementModal\"\r\n    >\r\n      {isFileSelected ? renderFileSelectedPanel() : renderSelectionTabs()}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default PageReplacementModal;\r\n","import React, { useCallback } from 'react';\r\nimport PageReplacementModal from './PageReplacementModal';\r\n\r\nfunction PageReplacementModalContainer(props) {\r\n  const { closePageReplacement, ...rest } = props;\r\n\r\n  const closeModal = useCallback(() => {\r\n    closePageReplacement();\r\n  }, [closePageReplacement]);\r\n\r\n  const newProps = {\r\n    ...rest,\r\n    closeModal,\r\n  };\r\n\r\n  return <PageReplacementModal {...newProps} />;\r\n}\r\n\r\nexport default PageReplacementModalContainer;","import React from 'react';\r\nimport selectors from 'selectors';\r\nimport actions from 'actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageReplacementModalContainer from './PageReplacementModalContainer';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nfunction PageReplacementModalRedux(props) {\r\n  const dispatch = useDispatch();\r\n  const closePageReplacement = () => {\r\n    dispatch(actions.closeElement(DataElements.PAGE_REPLACEMENT_MODAL));\r\n  };\r\n\r\n  const selectableFiles = useSelector((state) => selectors.getPageReplacementFileList(state));\r\n\r\n  const [isOpen] = useSelector((state) => [\r\n    selectors.isElementOpen(state, DataElements.PAGE_REPLACEMENT_MODAL),\r\n  ]);\r\n\r\n  const selectedThumbnailPageIndexes = useSelector((state) => selectors.getSelectedThumbnailPageIndexes(state)\r\n  );\r\n\r\n  const selectedTab = useSelector((state) => selectors.getSelectedTab(state, DataElements.PAGE_REPLACEMENT_MODAL)\r\n  );\r\n\r\n  const newProps = {\r\n    ...props,\r\n    closePageReplacement,\r\n    selectableFiles,\r\n    isOpen,\r\n    selectedThumbnailPageIndexes,\r\n    selectedTab,\r\n  };\r\n\r\n  return <PageReplacementModalContainer {...newProps} />;\r\n}\r\n\r\nexport default PageReplacementModalRedux;","import PageReplacementModalRedux from './PageReplacementModalRedux';\r\n\r\nexport default PageReplacementModalRedux;"],"sourceRoot":""}