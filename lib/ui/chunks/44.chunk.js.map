{"version":3,"sources":["webpack:///./src/ui/src/components/ScaleModal/ScaleModal.scss?828f","webpack:///./src/ui/src/components/ScaleModal/ScaleModal.scss","webpack:///./src/ui/src/components/ScaleModal/ScaleCustom.js","webpack:///./src/ui/src/components/ScaleModal/ScaleModal.js","webpack:///./src/ui/src/components/ScaleModal/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","Scale","window","Core","ScaleCustomProps","scale","PropTypes","array","onScaleChange","func","precision","number","ScaleCustom","measurementUnits","useSelector","state","selectors","getMeasurementUnits","shallowEqual","useState","pageValueDisplay","setPageValueDisplay","worldValueDisplay","setWorldValueDisplay","isFractionalPrecision","setIsFractionalPrecision","pageWarningMessage","setPageWarningMessage","worldWarningMessage","setWorldWarningMessage","scaleValueBlurFlag","setScaleValueBlurFlag","pageValueInput","useRef","worldValueInput","t","useTranslation","filterFractionalUnits","units","filter","unit","fractionalUnits","includes","unitFromOptions","from","unitToOptions","to","useEffect","onScaleUnitChange","formatDecimal","value","toFixed","toString","current","activeElement","getFormattedValue","ifFractionalPrecision","hintValues","isWorldValueValid","onInputValueChange","isPageValueValid","pageScale","newScale","worldScale","_onScaleChange","pageValueClass","classNames","worldValueClass","getPrecision","isPageValue","getNewScale","updateScaleValue","scaleValue","inputValue","trim","scaleUnit","inFractionalRegex","test","result","parseInFractional","ftInFractionalRegex","parseFtInFractional","floatRegex","parseFloat","ftInDecimalRegex","parseFtInDecimal","undefined","newUnit","isPageUnit","newPageScale","newWorldScale","convertUnit","getInputPlaceholder","onInputBlur","flag","className","type","min","data-element","onChange","e","target","placeholder","ref","onBlur","Tooltip","Dropdown","dataElement","items","onClickItem","currentSelectionKey","propTypes","scaleOptions","ScaleModal","annotations","selectedTool","dispatch","useDispatch","isElementDisabled","DataElements","SCALE_MODAL","isElementOpen","isElementHidden","getCurrentToolbarGroup","getSelectedScale","getActiveToolName","getIsAddingNewScale","getMeasurementScalePreset","getCalibrationInfo","getIsMultipleScalesMode","isDisabled","isOpen","isHidden","currentToolbarGroup","selectedScale","activeToolName","isAddingNewScale","measurementScalePreset","tempScale","isFractionalUnit","isMultipleScalesMode","precisionOptions","PrecisionType","DECIMAL","precisionOption","setPrecisionOption","scaleOption","setScaleOption","PresetMeasurementSystems","METRIC","presetScale","setPresetScale","customScale","setCustomScale","hasScaleChanged","setHasScaleChanged","totalScalesCount","Object","keys","core","getScales","precisionType","presetMeasurementSystem","getScaleRatioAsArray","getScalePrecision","isFractional","precisionItem","getPrecisionType","find","item","setTimeout","useDidUpdate","presetPrecisionOption","scalePresetPrecision","closeModal","newPrecisionOption","actions","updateCalibrationInfo","isCalibration","initialScale","closeElement","getCurrentScale","getPrecisionsValue","temp","precisionValue","Math","round","isCustomOption","modalClass","open","closed","IMPERIAL","FRACTIONAL","isCurrentScaleValid","isValid","isFractionalUnitsToggleDisabled","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","FocusTrap","locked","Button","title","img","onClick","Choice","radio","name","checked","label","center","onMouseDown","setToolMode","previousToolName","defaultUnit","setIsElementHidden","map","_item","isSwitch","leftLabel","id","disabled","DataElementWrapper","originalScales","replaceScales","applyTo","createAndApplyScale"],"mappings":"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","file":"chunks/44.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./ScaleModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                if (webComponents.length > 0) {\r\n                  const clonedStyleTags = [];\r\n                  for (let i = 0; i < webComponents.length; i++) {\r\n                    const webComponent = webComponents[i];\r\n                    if (i === 0) {\r\n                      webComponent.shadowRoot.appendChild(styleTag);\r\n                      styleTag.onload = function () {\r\n                        if (clonedStyleTags.length > 0) {\r\n                          clonedStyleTags.forEach((styleNode) => {\r\n                            // eslint-disable-next-line no-unsanitized/property\r\n                            styleNode.innerHTML = styleTag.innerHTML;\r\n                          });\r\n                        }\r\n                      };\r\n                    } else {\r\n                      const styleNode = styleTag.cloneNode(true);\r\n                      webComponent.shadowRoot.appendChild(styleNode);\r\n                      clonedStyleTags.push(styleNode);\r\n                    }\r\n                  }\r\n                } else {\r\n                  document.head.appendChild(styleTag);\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.ScaleModal{visibility:visible}.closed.ScaleModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ScaleModal{position:fixed;left:0;bottom:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.ScaleModal .modal-container .wrapper .modal-content{padding:10px}.ScaleModal .footer{display:flex;flex-direction:row;justify-content:flex-end;width:100%;margin-top:13px}.ScaleModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.ScaleModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.ScaleModal .footer .modal-button.cancel{color:var(--secondary-button-text);border:1px solid var(--secondary-button-text)}.ScaleModal .footer .modal-button.cancel:hover{background-color:var(--document-background-color);color:var(--secondary-button-hover);border:1px solid var(--secondary-button-hover)}.ScaleModal .footer .modal-button.confirm{margin-left:4px;color:var(--primary-button-text);font-weight:600;background:var(--primary-button)}.ScaleModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover)}.ScaleModal .footer .modal-button.confirm.disabled{background:var(--primary-button)!important;opacity:.5}.ScaleModal .footer .modal-button.secondary-btn-custom{border-radius:4px;border:1px solid var(--primary-button);color:var(--primary-button);padding:2px 20px 4px;cursor:pointer;background-color:#fff}.ScaleModal .footer .modal-button.secondary-btn-custom:hover{color:var(--secondary-button-hover)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .footer .modal-button{padding:23px 8px}}.ScaleModal .swipe-indicator{background:var(--divider);border-radius:2px;height:4px;width:38px;position:absolute;top:12px;margin-left:auto;margin-right:auto;left:0;right:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .swipe-indicator{display:none}}.ScaleModal .container{box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background);overflow-y:auto;max-height:100%}@media(max-height:500px){.App:not(.is-web-component) .ScaleModal .container,.ScaleModal .App:not(.is-web-component) .container{overflow:auto;max-height:100%}}@container (max-height: 500px){.App.is-web-component .ScaleModal .container,.ScaleModal .App.is-web-component .container{overflow:auto;max-height:100%}}.ScaleModal .container{display:flex;flex-direction:column;width:480px;padding:0;border-radius:4px;box-shadow:0 0 3px var(--document-box-shadow);overflow:visible}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container{width:100%;position:fixed;border-radius:0;left:0;bottom:0}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container{width:100%;position:fixed;border-radius:0;left:0;bottom:0}}.ScaleModal .container .header-container{box-shadow:inset 0 -1px 0 var(--modal-stroke-and-border);padding:20px 16px 16px}.ScaleModal .container .header{margin:0;display:flex;align-items:center;width:100%;height:24px}.ScaleModal .container .header p{font-size:16px;font-weight:700;width:89.286%;margin:0 16px 0 0}.ScaleModal .container .header .scaleModalCloseButton{position:static;height:32px;width:32px}.ScaleModal .container .header .scaleModalCloseButton:hover{background:var(--view-header-button-hover);border-radius:4px}.ScaleModal .container .header .scaleModalCloseButton.selected{background:var(--view-header-button-active);cursor:default}.ScaleModal .container .content-container{padding:24px 16px 16px}.ScaleModal .container .content-container .ui__choice__label{font-weight:700;font-size:13px;line-height:16px;display:flex;align-items:center}.ScaleModal .container .content-container .scaleSetting .custom-option-wrapper{display:flex;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .scaleSetting .custom-option-wrapper .calibrate-btn{font-weight:400;line-height:16px;display:flex;align-items:center;text-align:center;color:#3183c8;background-color:transparent;border:none;cursor:pointer}.ScaleModal .container .content-container .scaleSetting .selector{margin-top:16px;width:100%;height:32px;margin-bottom:18px}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown{height:100%;width:100%!important;text-align:left}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown .arrow{flex:0 1 auto}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown__items{width:100%}.ScaleModal .container .content-container .scaleSetting .block{height:36px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container{margin-top:16px;margin-bottom:16px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .scale-ratio-display{display:flex;flex-direction:row;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper{display:flex;flex-direction:row}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{border-radius:4px;border:1px solid var(--border);width:94px;height:32px;margin-right:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{width:79px;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{width:79px;height:32px}}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input.invalid-value{border-color:red}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:100px;height:32px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper .Dropdown{height:100%;text-align:left}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper .Dropdown__items{width:100%}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:4rem;height:2rem}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:4rem;height:2rem}}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .warning-messages{height:16px;font-weight:400;color:red;margin-top:4px;position:relative;display:flex}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .warning-messages .world-value-warning{position:absolute;left:246px}.ScaleModal .container .content-container .precision-container{display:flex;font-size:13px;font-weight:400;margin-top:16px;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .precision-container .precision-selector{display:flex;justify-content:space-between;align-items:center;width:288px;height:32px}.ScaleModal .container .content-container .precision-container .precision-selector .precision-title{height:1rem;font-weight:400;font-size:13px;line-height:16px}.ScaleModal .container .content-container .precision-container .precision-selector .selector{width:223px;height:32px;z-index:0}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown{height:100%;width:100%!important;text-align:left}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown .arrow{flex:0 1 auto}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown__items{width:100%}.ScaleModal .container .content-container .precision-container .ui__choice__label{font-weight:400}.ScaleModal .container .content-container .precision-container .ui__choice--disabled .ui__choice__label{color:#cfd4da}.ScaleModal .container .footer{display:flex;padding:16px;align-items:center;justify-content:flex-end;width:100%;box-shadow:inset 0 1px 0 var(--modal-stroke-and-border);margin:0}.ScaleModal .container .footer .scale-update{height:32px;min-width:72px;display:flex;align-items:center;justify-content:center;color:var(--blue-5);background-color:transparent;border:1px solid var(--blue-5);box-sizing:border-box;border-radius:4px;cursor:pointer;margin-right:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .footer .scale-update{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .footer .scale-update{font-size:13px}}.ScaleModal .container .footer .scale-update:enabled:hover{background:var(--outline-hover)}.ScaleModal .container .footer .scale-update:disabled{opacity:.5;cursor:not-allowed}.ScaleModal .container .footer .scale-create{border:none;background-color:transparent;background:var(--primary-button);border-radius:4px;padding:0 8px;height:32px;min-width:72px;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}:host(:not([data-tabbing=true])) .ScaleModal .container .footer .scale-create,html:not([data-tabbing=true]) .ScaleModal .container .footer .scale-create{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .footer .scale-create{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .footer .scale-create{font-size:13px}}.ScaleModal .container .footer .scale-create:enabled:hover{background:var(--primary-button-hover)}.ScaleModal .container .footer .scale-create:disabled{opacity:.5;cursor:not-allowed}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport selectors from 'selectors';\r\nimport Tooltip from '../Tooltip';\r\nimport Dropdown from '../Dropdown';\r\nimport {\r\n  ifFractionalPrecision,\r\n  hintValues,\r\n  convertUnit,\r\n  fractionalUnits,\r\n  floatRegex,\r\n  inFractionalRegex,\r\n  ftInFractionalRegex,\r\n  ftInDecimalRegex,\r\n  parseFtInDecimal,\r\n  parseInFractional,\r\n  parseFtInFractional\r\n} from 'constants/measurementScale';\r\nimport classNames from 'classnames';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst ScaleCustomProps = {\r\n  scale: PropTypes.array,\r\n  onScaleChange: PropTypes.func,\r\n  precision: PropTypes.number\r\n};\r\n\r\nfunction ScaleCustom({ scale, onScaleChange, precision }) {\r\n  const [measurementUnits] = useSelector((state) => [selectors.getMeasurementUnits(state)], shallowEqual);\r\n  const [pageValueDisplay, setPageValueDisplay] = useState('');\r\n  const [worldValueDisplay, setWorldValueDisplay] = useState('');\r\n  const [isFractionalPrecision, setIsFractionalPrecision] = useState(false);\r\n  const [pageWarningMessage, setPageWarningMessage] = useState('');\r\n  const [worldWarningMessage, setWorldWarningMessage] = useState('');\r\n  const [scaleValueBlurFlag, setScaleValueBlurFlag] = useState(false);\r\n\r\n  const pageValueInput = useRef(null);\r\n  const worldValueInput = useRef(null);\r\n\r\n  const [t] = useTranslation();\r\n\r\n  const filterFractionalUnits = (units) => units.filter((unit) => fractionalUnits.includes(unit));\r\n  const unitFromOptions = isFractionalPrecision ? filterFractionalUnits(measurementUnits.from) : measurementUnits.from;\r\n  const unitToOptions = isFractionalPrecision ? filterFractionalUnits(measurementUnits.to) : measurementUnits.to;\r\n\r\n  // If our scale has a unit that is not in the current 'from' measurement units, change it\r\n  // to the first unit in the list.\r\n  useEffect(() => {\r\n    if (!unitFromOptions.includes(scale[0][1])) {\r\n      onScaleUnitChange(unitFromOptions[0], true);\r\n    }\r\n  }, [scale[0][1]]);\r\n\r\n  // If our scale has a unit that is not in the current 'to' measurement units, change it\r\n  // to the first unit in the list. We want to wait until the 'from' unit is valid before\r\n  // setting the 'to' unit. Otherwise, we will reset the 'from' unit.\r\n  useEffect(() => {\r\n    if (unitFromOptions.includes(scale[0][1]) && !unitToOptions.includes(scale[1][1])) {\r\n      onScaleUnitChange(unitToOptions[0], false);\r\n    }\r\n  }, [scale[0][1], scale[1][1]]);\r\n\r\n  useEffect(() => {\r\n    const formatDecimal = (value) => {\r\n      return value?.toFixed((1 / precision).toString().length - 1);\r\n    };\r\n\r\n    if (scale[0][0] && pageValueInput?.current !== document.activeElement) {\r\n      if (!isFractionalPrecision) {\r\n        setPageValueDisplay(formatDecimal(scale[0][0]) || '');\r\n      } else {\r\n        setPageValueDisplay(Scale.getFormattedValue(scale[0][0], scale[0][1], precision, false, true) || '');\r\n      }\r\n    }\r\n    if (scale[1][0] && !(worldValueInput && worldValueInput.current === document.activeElement)) {\r\n      if (!isFractionalPrecision && scale[1][1] !== 'ft-in') {\r\n        setWorldValueDisplay(formatDecimal(scale[1][0]) || '');\r\n      } else {\r\n        setWorldValueDisplay(Scale.getFormattedValue(scale[1][0], scale[1][1], precision, false, true) || '');\r\n      }\r\n    }\r\n  }, [scale, precision, worldValueInput, pageValueInput, isFractionalPrecision, scaleValueBlurFlag]);\r\n\r\n  useEffect(() => {\r\n    setIsFractionalPrecision(ifFractionalPrecision(precision));\r\n  }, [precision]);\r\n\r\n  useEffect(() => {\r\n    if (isFractionalPrecision) {\r\n      setPageWarningMessage(hintValues[scale[0][1]]);\r\n      setWorldWarningMessage(hintValues[scale[1][1]]);\r\n    } else if (scale[1][1] === 'ft-in') {\r\n      setPageWarningMessage('');\r\n      setWorldWarningMessage(hintValues['ft-in decimal']);\r\n    } else {\r\n      setPageWarningMessage('');\r\n      setWorldWarningMessage('');\r\n    }\r\n  }, [scale, isFractionalPrecision]);\r\n\r\n  // Re-validate invalid world value input when world unit changes\r\n  useEffect(() => {\r\n    !isWorldValueValid && onInputValueChange(worldValueInput.current.value, false);\r\n  }, [scale[1][1]]);\r\n\r\n  // Re-validate invalid scale value input when isFractionalPrecision value changes\r\n  useEffect(() => {\r\n    if (!isPageValueValid && !isWorldValueValid) {\r\n      let pageScale = {\r\n        value: scale[0][0],\r\n        unit: scale[0][1]\r\n      };\r\n      onInputValueChange(pageValueInput.current.value, true, (newScale) => {\r\n        pageScale = newScale.pageScale;\r\n      });\r\n      let worldScale = {\r\n        value: scale[1][0],\r\n        unit: scale[1][1]\r\n      };\r\n      onInputValueChange(worldValueInput.current.value, false, (newScale) => {\r\n        worldScale = newScale.worldScale;\r\n      });\r\n\r\n      _onScaleChange(new Scale({ pageScale, worldScale }));\r\n    } else {\r\n      !isPageValueValid && onInputValueChange(pageValueInput.current.value, true);\r\n      !isWorldValueValid && onInputValueChange(worldValueInput.current.value, false);\r\n    }\r\n  }, [isFractionalPrecision]);\r\n\r\n  const isPageValueValid = !!scale[0][0];\r\n  const isWorldValueValid = !!scale[1][0];\r\n\r\n  const pageValueClass = classNames('scale-input', {\r\n    'invalid-value': !isPageValueValid\r\n  });\r\n  const worldValueClass = classNames('scale-input', {\r\n    'invalid-value': !isWorldValueValid\r\n  });\r\n\r\n  // If scale value is smaller than the current precision, replace it with precision value to prevent 0 value.\r\n  const _onScaleChange = (newScale) => {\r\n    const getPrecision = (unit) => (unit === 'ft-in' ? precision / 12 : precision);\r\n\r\n    if (newScale.pageScale.value && newScale.pageScale.value < precision) {\r\n      newScale.pageScale.value = getPrecision(newScale.pageScale.unit);\r\n    }\r\n    if (newScale.worldScale.value && newScale.worldScale.value < precision) {\r\n      newScale.worldScale.value = getPrecision(newScale.worldScale.unit);\r\n    }\r\n    onScaleChange(newScale);\r\n  };\r\n\r\n  const onInputValueChange = (value, isPageValue, getNewScale) => {\r\n    const updateScaleValue = (scaleValue) => {\r\n      if ((isPageValue && scaleValue !== scale[0][0]) || (!isPageValue && scaleValue !== scale[1][0])) {\r\n        const newScale = new Scale({\r\n          pageScale: { value: isPageValue ? scaleValue : scale[0][0], unit: scale[0][1] },\r\n          worldScale: { value: !isPageValue ? scaleValue : scale[1][0], unit: scale[1][1] }\r\n        });\r\n        if (getNewScale) {\r\n          getNewScale(newScale);\r\n        } else {\r\n          _onScaleChange(newScale);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (isPageValue) {\r\n      setPageValueDisplay(value);\r\n    } else {\r\n      setWorldValueDisplay(value);\r\n    }\r\n    const inputValue = value.trim();\r\n    if (!isFractionalPrecision) {\r\n      if (!isPageValue && scale[1][1] === 'ft-in') {\r\n        if (ftInDecimalRegex.test(inputValue)) {\r\n          const result = parseFtInDecimal(inputValue);\r\n          if (result > 0) {\r\n            updateScaleValue(result);\r\n            return;\r\n          }\r\n        }\r\n      } else if (floatRegex.test(inputValue)) {\r\n        const scaleValue = parseFloat(inputValue) || 0;\r\n        updateScaleValue(scaleValue);\r\n        return;\r\n      }\r\n    } else {\r\n      const scaleUnit = isPageValue ? scale[0][1] : scale[1][1];\r\n      if (scaleUnit === 'in') {\r\n        if (inFractionalRegex.test(inputValue)) {\r\n          const result = parseInFractional(inputValue);\r\n          if (result > 0) {\r\n            updateScaleValue(result);\r\n            return;\r\n          }\r\n        }\r\n      } else if (scaleUnit === 'ft-in') {\r\n        if (ftInFractionalRegex.test(inputValue)) {\r\n          const result = parseFtInFractional(inputValue);\r\n          if (result > 0) {\r\n            updateScaleValue(result);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    updateScaleValue(undefined);\r\n  };\r\n\r\n  const onScaleUnitChange = (newUnit, isPageUnit) => {\r\n    let newPageScale;\r\n    if (isPageUnit && newUnit !== scale[0][1]) {\r\n      newPageScale = {\r\n        value: scale[0][0] ? convertUnit(scale[0][0], scale[0][1], newUnit) : scale[0][0],\r\n        unit: newUnit\r\n      };\r\n    } else {\r\n      newPageScale = { value: scale[0][0], unit: scale[0][1] };\r\n    }\r\n    let newWorldScale;\r\n    if (!isPageUnit && newUnit !== scale[1][1]) {\r\n      newWorldScale = {\r\n        value: scale[1][0] ? convertUnit(scale[1][0], scale[1][1], newUnit) : scale[1][0],\r\n        unit: newUnit\r\n      };\r\n    } else {\r\n      newWorldScale = { value: scale[1][0], unit: scale[1][1] };\r\n    }\r\n\r\n    _onScaleChange(new Scale({ pageScale: newPageScale, worldScale: newWorldScale }));\r\n  };\r\n\r\n  const getInputPlaceholder = (isPageValue) => {\r\n    const unit = isPageValue ? scale[0][1] : scale[1][1];\r\n    return isFractionalPrecision ? hintValues[unit] : (unit === 'ft-in' ? hintValues['ft-in decimal'] : '');\r\n  };\r\n\r\n  const onInputBlur = () => {\r\n    setScaleValueBlurFlag((flag) => !flag);\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-scale-container\">\r\n      <div className=\"scale-ratio-input-container\">\r\n        <div className=\"scale-ratio-display\">\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              type={isFractionalPrecision ? 'text' : 'number'}\r\n              min=\"0\"\r\n              className={pageValueClass}\r\n              value={pageValueDisplay}\r\n              data-element=\"customPageScaleValue\"\r\n              onChange={(e) => onInputValueChange(e.target.value, true)}\r\n              placeholder={getInputPlaceholder(true)}\r\n              ref={pageValueInput}\r\n              onBlur={onInputBlur}\r\n            />\r\n            <Tooltip content={'option.measurement.scaleModal.paperUnits'}>\r\n              <div className=\"unit-input\">\r\n                <Dropdown\r\n                  dataElement=\"customPageScaleUnit\"\r\n                  items={unitFromOptions}\r\n                  onClickItem={(value) => onScaleUnitChange(value, true)}\r\n                  currentSelectionKey={scale[0][1]}\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          </div>\r\n          {' = '}\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              type={(isFractionalPrecision || scale[1][1] === 'ft-in') ? 'text' : 'number'}\r\n              min='0'\r\n              className={worldValueClass}\r\n              value={worldValueDisplay}\r\n              data-element=\"customDisplayScaleValue\"\r\n              onChange={(e) => onInputValueChange(e.target.value, false)}\r\n              placeholder={getInputPlaceholder(false)}\r\n              ref={worldValueInput}\r\n              onBlur={onInputBlur}\r\n            />\r\n            <Tooltip content={'option.measurement.scaleModal.displayUnits'}>\r\n              <div className=\"unit-input\">\r\n                <Dropdown\r\n                  items={unitToOptions}\r\n                  dataElement=\"customDisplayScaleUnit\"\r\n                  onClickItem={(value) => onScaleUnitChange(value, false)}\r\n                  currentSelectionKey={scale[1][1]}\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"warning-messages\">\r\n        {!isPageValueValid && (\r\n          <div>\r\n            {`${t('option.measurement.scaleModal.incorrectSyntax')} ${pageWarningMessage}`}\r\n          </div>\r\n        )}\r\n        {!isWorldValueValid && (\r\n          <div className=\"world-value-warning\">\r\n            {`${t('option.measurement.scaleModal.incorrectSyntax')} ${worldWarningMessage}`}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nScaleCustom.propTypes = ScaleCustomProps;\r\n\r\nexport default ScaleCustom;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Swipeable } from 'react-swipeable';\r\nimport { Choice, FocusTrap } from '@pdftron/webviewer-react-toolkit';\r\nimport classNames from 'classnames';\r\nimport {\r\n  precisionOptions,\r\n  PrecisionType,\r\n  scalePresetPrecision,\r\n  PresetMeasurementSystems,\r\n  fractionalUnits,\r\n  ifFractionalPrecision,\r\n  initialScale\r\n} from 'constants/measurementScale';\r\nimport core from 'core';\r\nimport actions from 'actions';\r\nimport selectors from 'selectors';\r\nimport ScaleCustom from './ScaleCustom';\r\nimport DataElements from 'constants/dataElement';\r\nimport useDidUpdate from 'hooks/useDidUpdate';\r\nimport Button from 'components/Button';\r\nimport Dropdown from 'components/Dropdown';\r\nimport Tooltip from 'components/Tooltip';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\n\r\nimport './ScaleModal.scss';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nexport const scaleOptions = {\r\n  CUSTOM: 'custom',\r\n  PRESET: 'preset'\r\n};\r\n\r\nconst ScaleModal = ({ annotations, selectedTool }) => {\r\n  const dispatch = useDispatch();\r\n  const [t] = useTranslation();\r\n\r\n  const [\r\n    isDisabled,\r\n    isOpen,\r\n    isHidden,\r\n    currentToolbarGroup,\r\n    selectedScale,\r\n    activeToolName,\r\n    isAddingNewScale,\r\n    measurementScalePreset,\r\n    { tempScale, isFractionalUnit },\r\n    isMultipleScalesMode\r\n  ] = useSelector((state) => [\r\n    selectors.isElementDisabled(state, DataElements.SCALE_MODAL),\r\n    selectors.isElementOpen(state, DataElements.SCALE_MODAL),\r\n    selectors.isElementHidden(state, DataElements.SCALE_MODAL),\r\n    selectors.getCurrentToolbarGroup(state),\r\n    selectors.getSelectedScale(state),\r\n    selectors.getActiveToolName(state),\r\n    selectors.getIsAddingNewScale(state),\r\n    selectors.getMeasurementScalePreset(state),\r\n    selectors.getCalibrationInfo(state),\r\n    selectors.getIsMultipleScalesMode(state)\r\n  ]);\r\n\r\n  const [isFractionalPrecision, setIsFractionalPrecision] = useState(false);\r\n  const [precisionOption, setPrecisionOption] = useState(precisionOptions[PrecisionType.DECIMAL][0]);\r\n  const [scaleOption, setScaleOption] = useState(scaleOptions.CUSTOM);\r\n  const [presetScale, setPresetScale] = useState(measurementScalePreset[PresetMeasurementSystems.METRIC][0]);\r\n  const [customScale, setCustomScale] = useState(new Scale(''));\r\n  const [hasScaleChanged, setHasScaleChanged] = useState(false);\r\n\r\n  const totalScalesCount = Object.keys(core.getScales()).length;\r\n\r\n  useEffect(() => {\r\n    if (!precisionOptions[precisionType].includes(precisionOption)) {\r\n      setPrecisionOption(precisionOptions[precisionType][0]);\r\n    }\r\n    setPresetScale(measurementScalePreset[presetMeasurementSystem][0]);\r\n  }, [isFractionalPrecision]);\r\n\r\n  useEffect(() => {\r\n    setScaleOption(scaleOptions.CUSTOM);\r\n    setCustomScale(new Scale(selectedScale.getScaleRatioAsArray()));\r\n\r\n    const precision = core.getScalePrecision(selectedScale);\r\n    if (!precision) {\r\n      return;\r\n    }\r\n    const isFractional = ifFractionalPrecision(precision);\r\n    setIsFractionalPrecision(isFractional);\r\n\r\n    const precisionItems = precisionOptions[getPrecisionType(isFractional)];\r\n    const precisionItem = precisionItems.find((item) => item[1] === precision);\r\n    setPrecisionOption(precisionItem);\r\n\r\n    // Update/Create button should be disabled until the user makes a change\r\n    setTimeout(() => {\r\n      setHasScaleChanged(false);\r\n    });\r\n  }, [selectedScale]);\r\n\r\n  useDidUpdate(() => {\r\n    if (scaleOption === scaleOptions.CUSTOM) {\r\n      setCustomScale(presetScale[1]);\r\n    } else {\r\n      const presetPrecisionOption = scalePresetPrecision[presetScale[0]];\r\n      if (presetPrecisionOption && presetPrecisionOption !== precisionOption) {\r\n        setPrecisionOption(presetPrecisionOption);\r\n      }\r\n    }\r\n  }, [scaleOption]);\r\n\r\n  useDidUpdate(() => {\r\n    if (currentToolbarGroup === 'toolbarGroup-Measure') {\r\n      closeModal();\r\n    }\r\n  }, [currentToolbarGroup]);\r\n\r\n  useEffect(() => {\r\n    const newPrecisionOption = scalePresetPrecision[presetScale[0]];\r\n    if (newPrecisionOption && scaleOption === scaleOptions.PRESET) {\r\n      setPrecisionOption(newPrecisionOption);\r\n    }\r\n  }, [presetScale]);\r\n\r\n  useEffect(() => {\r\n    if (!isHidden && tempScale) {\r\n      // Triggered when calibration is applied\r\n      setCustomScale(new Scale(tempScale));\r\n      dispatch(actions.updateCalibrationInfo({ isCalibration: false }));\r\n      setIsFractionalPrecision(isFractionalUnit);\r\n    }\r\n  }, [isHidden]);\r\n\r\n  useEffect(() => {\r\n    setHasScaleChanged(true);\r\n  }, [precisionOption, customScale, presetScale, scaleOption]);\r\n\r\n  useEffect(() => {\r\n    // Reset component state when adding new scale\r\n    if (isOpen && isAddingNewScale && !tempScale) {\r\n      setScaleOption(scaleOptions.CUSTOM);\r\n      setCustomScale(initialScale);\r\n      setIsFractionalPrecision(false);\r\n      setPrecisionOption(precisionOptions[PrecisionType.DECIMAL][0]);\r\n    }\r\n  }, [isOpen, isAddingNewScale]);\r\n\r\n  const closeModal = () => {\r\n    dispatch(actions.closeElement(DataElements.SCALE_MODAL));\r\n  };\r\n\r\n  const createAndApplyScale = (scale, applyTo) => {\r\n    core.createAndApplyScale(scale, applyTo);\r\n    closeModal();\r\n  };\r\n\r\n  const replaceScales = (originalScales, scale) => {\r\n    core.replaceScales(originalScales, scale);\r\n    closeModal();\r\n  };\r\n\r\n  const toggleFractionalPrecision = () => {\r\n    setIsFractionalPrecision((isFractionalPrecision) => !isFractionalPrecision);\r\n  };\r\n\r\n  const openCalibrationTool = () => {\r\n    core.setToolMode('AnnotationCreateCalibrationMeasurement');\r\n    const unit = isCustomOption ? (customScale.worldScale?.unit || '') : presetScale[1].worldScale.unit;\r\n    dispatch(actions.updateCalibrationInfo({ isCalibration: true, previousToolName: activeToolName, defaultUnit: unit }));\r\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, true));\r\n  };\r\n\r\n  const getCurrentScale = () => {\r\n    const getPrecisionsValue = (value, unit) => {\r\n      let temp = value;\r\n      let precisionValue = precisionOption[1];\r\n\r\n      if (!isFractionalPrecision) {\r\n        if (unit !== 'ft-in') {\r\n          temp = temp.toFixed((1 / precisionValue).toString().length - 1);\r\n        }\r\n      } else {\r\n        if (unit === 'ft-in') {\r\n          precisionValue /= 12;\r\n        }\r\n        temp = Math.round(temp / precisionValue) * precisionValue;\r\n      }\r\n\r\n      return temp * 1;\r\n    };\r\n\r\n    if (isCustomOption) {\r\n      const scale = customScale.getScaleRatioAsArray();\r\n      scale[0][0] = getPrecisionsValue(scale[0][0], scale[0][1]);\r\n      scale[1][0] = getPrecisionsValue(scale[1][0], scale[1][1]);\r\n      return scale;\r\n    }\r\n    return presetScale[1].toString();\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    replaceScales(\r\n      [selectedScale],\r\n      new Scale(getCurrentScale(), precisionOption[1])\r\n    );\r\n  };\r\n\r\n  const onCreate = () => {\r\n    createAndApplyScale(\r\n      new Scale(getCurrentScale(), precisionOption[1]),\r\n      [...annotations, selectedTool]\r\n    );\r\n  };\r\n\r\n  const modalClass = classNames('Modal', 'ScaleModal', {\r\n    open: !isHidden,\r\n    closed: isHidden\r\n  });\r\n  const isCustomOption = scaleOption === scaleOptions.CUSTOM;\r\n  const presetMeasurementSystem = isFractionalPrecision ? PresetMeasurementSystems.IMPERIAL : PresetMeasurementSystems.METRIC;\r\n  const getPrecisionType = (isFractional) => (isFractional ? PrecisionType.FRACTIONAL : PrecisionType.DECIMAL);\r\n  const precisionType = getPrecisionType(isFractionalPrecision);\r\n  const isCurrentScaleValid = !isCustomOption || customScale.isValid();\r\n  const isFractionalUnitsToggleDisabled = isCustomOption && !(fractionalUnits.includes(customScale.pageScale?.unit) && fractionalUnits.includes(customScale.worldScale?.unit));\r\n\r\n  return !isDisabled && (\r\n    <Swipeable onSwipedUp={closeModal} onSwipedDown={closeModal} preventDefaultTouchmoveEvent>\r\n      <FocusTrap locked={!isHidden}>\r\n        <div className={modalClass} data-element={DataElements.SCALE_MODAL}>\r\n          <div className=\"container\">\r\n            <div className=\"header-container\">\r\n              <div className=\"header\">\r\n                <p>{t('option.measurementOption.scale')}</p>\r\n                <Button\r\n                  className=\"scaleModalCloseButton\"\r\n                  title=\"action.close\"\r\n                  img=\"ic_close_black_24px\"\r\n                  onClick={closeModal}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"content-container\">\r\n              <div className=\"scaleSetting\">\r\n                <div className=\"custom-option-wrapper\">\r\n                  <div className=\"custom-scale-option\">\r\n                    <Choice\r\n                      data-element=\"customScaleOption\"\r\n                      radio\r\n                      name=\"setting\"\r\n                      onChange={() => setScaleOption(scaleOptions.CUSTOM)}\r\n                      checked={isCustomOption}\r\n                      label={`${t('option.measurement.scaleModal.custom')}:`}\r\n                      center\r\n                    />\r\n                  </div>\r\n                  {isCustomOption && (\r\n                    <button data-element=\"calibrate\" className=\"calibrate-btn\" onMouseDown={openCalibrationTool}>\r\n                      {t('option.measurement.scaleModal.calibrate')}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                {isCustomOption ? (\r\n                  <ScaleCustom\r\n                    scale={customScale.getScaleRatioAsArray()}\r\n                    onScaleChange={setCustomScale}\r\n                    precision={precisionOption[1]}\r\n                  />\r\n                ) : (\r\n                  <div className=\"block\" />\r\n                )}\r\n                <Choice\r\n                  data-element=\"presetScaleOption\"\r\n                  radio\r\n                  onChange={() => setScaleOption(scaleOptions.PRESET)}\r\n                  name=\"setting\"\r\n                  checked={!isCustomOption}\r\n                  label={`${t('option.measurement.scaleModal.preset')}:`}\r\n                  center\r\n                />\r\n                {!isCustomOption && (\r\n                  <div className=\"scaleModal__preset-container\">\r\n                    <div className=\"selector\">\r\n                      <Dropdown\r\n                        dataElement=\"presetScales\"\r\n                        items={measurementScalePreset[presetMeasurementSystem].map((item) => item[0])}\r\n                        currentSelectionKey={presetScale[0]}\r\n                        onClickItem={(_item, i) => setPresetScale(measurementScalePreset[presetMeasurementSystem][i])}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"precision-container\">\r\n                <div className=\"precision-selector\">\r\n                  <div className=\"precision-title\">{t('option.shared.precision')}:</div>\r\n                  <div className=\"selector\">\r\n                    <Dropdown\r\n                      dataElement=\"scalePrecisions\"\r\n                      items={precisionOptions[precisionType].map((item) => item[0])}\r\n                      currentSelectionKey={precisionOption[0]}\r\n                      onClickItem={(_item, i) => setPrecisionOption(precisionOptions[precisionType][i])}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Tooltip content={t('option.measurement.scaleModal.fractionUnitsTooltip')}>\r\n                  <div>\r\n                    <Choice\r\n                      isSwitch\r\n                      leftLabel\r\n                      id=\"scale-modal-fractional-units\"\r\n                      label={t('option.measurement.scaleModal.fractionalUnits')}\r\n                      checked={isFractionalPrecision}\r\n                      onChange={toggleFractionalPrecision}\r\n                      disabled={isFractionalUnitsToggleDisabled}\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n              <DataElementWrapper\r\n                type={'button'}\r\n                onClick={onUpdate}\r\n                className=\"scale-update\"\r\n                dataElement=\"updateScale\"\r\n                disabled={isAddingNewScale || !isCurrentScaleValid || !hasScaleChanged}\r\n              >\r\n                {t('action.update')}\r\n              </DataElementWrapper>\r\n              <button\r\n                onClick={onCreate}\r\n                className=\"scale-create\"\r\n                data-element=\"createScale\"\r\n                disabled={!isCurrentScaleValid || (!isMultipleScalesMode && totalScalesCount) || (!isAddingNewScale && !hasScaleChanged)}\r\n              >\r\n                {t('action.create')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </FocusTrap>\r\n    </Swipeable>\r\n  );\r\n};\r\n\r\nexport default ScaleModal;\r\n","import ScaleModal from './ScaleModal';\r\n\r\nexport default ScaleModal;"],"sourceRoot":""}