{"version":3,"sources":["webpack:///./src/ui/src/components/PageManipulationOverlay/CustomPageManipulationOperations/CustomPageManipulationOperations.js","webpack:///./src/ui/src/components/PageManipulationOverlay/CustomPageManipulationOperations/index.js","webpack:///./src/ui/src/components/PageManipulationOverlay/PageManipulationOverlay.js","webpack:///./src/ui/src/components/PageManipulationOverlay/PageManipulationOverlayContainer.js","webpack:///./src/ui/src/components/PageManipulationOverlay/index.js"],"names":["CustomPageManipulationOperations","props","dataElement","pageNumbers","header","operations","DataElementWrapper","className","map","operation","key","onClick","img","Button","title","role","renderIcon","InitialPageManipulationOverlay","children","pageManipulationOverlayItems","childrenArray","React","Children","toArray","item","index","type","component","find","child","cloneElement","PageManipulationOverlay","dispatch","useDispatch","closeOverlay","useCallback","actions","setPageManipulationOverlayAlternativePosition","closeElements","DataElements","PAGE_MANIPULATION_OVERLAY","useEffect","core","addEventListener","removeEventListener","PageAdditionalControls","PageRotationControls","PageManipulationControls","PageManipulationOverlayContainer","useSelector","state","selectors","getSelectedThumbnailPageIndexes","getCurrentPage","getPageManipulationOverlayItems","shallowEqual","selectedPageIndexes","currentPage","length","i","FlyoutMenu","menu","trigger","PAGE_MANIPULATION_OVERLAY_BUTTON"],"mappings":"8RA4CeA,IC1CAA,EDEf,SAA0CC,GACxC,IAAQC,EAAiDD,EAAjDC,YAAaC,EAAoCF,EAApCE,YAAaC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,WAc1C,OACE,oCACE,kBAACC,EAAA,EAAkB,CACjBJ,YAAaA,EACbK,UAAU,QAETH,GAEFC,EAAWG,KAAI,SAACC,GACf,OACE,kBAACH,EAAA,EAAkB,CACjBI,IAAKD,EAAUP,YACfK,UAAU,MACVL,YAAaO,EAAUP,YACvBS,QAAS,kBAAMF,EAAUE,QAAQR,KA1B3C,SAAoBM,GAClB,GAAIA,EAAUG,IACZ,OACE,kBAACC,EAAA,EAAM,CACLC,MAAOL,EAAUK,MACjBF,IAAKH,EAAUG,IACfG,KAAK,WAsBFC,CAAWP,GACZ,yBAAKF,UAAU,SAASE,EAAUK,a,iPEzB9C,SAASG,EAA+B,GAAyD,IAAvDC,EAAQ,EAARA,SAAUf,EAAW,EAAXA,YAAagB,EAA4B,EAA5BA,6BACzDC,EAAgBC,IAAMC,SAASC,QAAQL,GAE7C,OAAOC,EAA6BX,KAAI,SAACgB,EAAMC,GAC7C,IAAQvB,EAAsBsB,EAAtBtB,YAAawB,EAASF,EAATE,KACjBC,EAAYP,EAAcQ,MAAK,SAACC,GAAK,OAAKA,EAAM5B,MAAMC,cAAgBA,KACpEQ,EAAMR,GAAe,GAAJ,OAAOwB,EAAI,YAAID,GAYtC,OAVKE,IACU,YAATD,IACFC,EAAY,yBAAKpB,UAAU,aAGhB,wBAATmB,IACFC,EAAY,kBAAC,EAAgC,GAACjB,IAAKR,EAAaC,YAAaA,GAAiBqB,MAI3FG,EACHN,IAAMS,aAAaH,EAAW,CAC9BjB,QAEA,QA+BOqB,MA1Bf,SAAiC9B,GAC/B,IAAQE,EAA8CF,EAA9CE,YAAagB,EAAiClB,EAAjCkB,6BAEfa,EAAWC,cAEXC,EAAeC,uBAAY,WAC/BH,EAASI,IAAQC,8CAA8C,OAC/DL,EAASI,IAAQE,cAAc,CAACC,IAAaC,+BAC5C,CAACR,IASJ,OAPAS,qBAAU,WAER,OADAC,IAAKC,iBAAiB,iBAAkBT,GACjC,WACLQ,IAAKE,oBAAoB,iBAAkBV,MAE5C,IAGD,kBAACjB,EAA8B,CAACd,YAAaA,EAAagB,6BAA8BA,GACtF,kBAAC0B,EAAA,EAAsB,CAAC1C,YAAaA,EAAaD,YAAY,2BAC9D,kBAAC4C,EAAA,EAAoB,CAAC3C,YAAaA,EAAaD,YAAY,yBAC5D,kBAAC6C,EAAA,EAAwB,CAAC5C,YAAaA,EAAaD,YAAY,+B,+iCCzBvD8C,MA3Bf,WACE,IAQgB,IAJZC,aAAY,SAACC,GAAK,MAAK,CACzBC,IAAUC,gCAAgCF,GAC1CC,IAAUE,eAAeH,GACzBC,IAAUG,gCAAgCJ,MACzCK,KAAa,GAPdC,EAAmB,KACnBC,EAAW,KACXtC,EAA4B,KAQxBhB,EAAcqD,EAAoBE,OAAS,EAAIF,EAAoBhD,KAAI,SAACmD,GAAC,OAAKA,EAAI,KAAK,CAACF,GAE9F,OACE,kBAACG,EAAA,EAAU,CACTC,KAAMtB,IAAaC,0BACnBsB,QAASvB,IAAawB,kCAEtB,kBAAC,EAAuB,CACtB5D,YAAaA,EACbgB,6BAA8BA,MC1BvBY","file":"chunks/57.chunk.js","sourcesContent":["import React from 'react';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport Button from 'components/Button';\r\n\r\nfunction CustomPageManipulationOperations(props) {\r\n  const { dataElement, pageNumbers, header, operations } = props;\r\n\r\n  function renderIcon(operation) {\r\n    if (operation.img) {\r\n      return (\r\n        <Button\r\n          title={operation.title}\r\n          img={operation.img}\r\n          role=\"option\"\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DataElementWrapper\r\n        dataElement={dataElement}\r\n        className=\"type\"\r\n      >\r\n        {header}\r\n      </DataElementWrapper>\r\n      {operations.map((operation) => {\r\n        return (\r\n          <DataElementWrapper\r\n            key={operation.dataElement}\r\n            className=\"row\"\r\n            dataElement={operation.dataElement}\r\n            onClick={() => operation.onClick(pageNumbers)}\r\n          >\r\n            {renderIcon(operation)}\r\n            <div className=\"title\">{operation.title}</div>\r\n          </DataElementWrapper>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomPageManipulationOperations;","import CustomPageManipulationOperations from './CustomPageManipulationOperations';\r\n\r\nexport default CustomPageManipulationOperations;","import actions from 'actions';\r\nimport React, { useEffect, useCallback } from 'react';\r\nimport PageRotationControls from './PageRotationControls';\r\nimport PageManipulationControls from './PageManipulationControls';\r\nimport PageAdditionalControls from 'components/PageManipulationOverlay/PageAdditionalControls';\r\nimport CustomPageManipulationOperations from './CustomPageManipulationOperations';\r\nimport core from 'core';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport DataElements from 'src/constants/dataElement';\r\n\r\nfunction InitialPageManipulationOverlay({ children, pageNumbers, pageManipulationOverlayItems }) {\r\n  const childrenArray = React.Children.toArray(children);\r\n\r\n  return pageManipulationOverlayItems.map((item, index) => {\r\n    const { dataElement, type } = item;\r\n    let component = childrenArray.find((child) => child.props.dataElement === dataElement);\r\n    const key = dataElement || `${type}-${index}`;\r\n\r\n    if (!component) {\r\n      if (type === 'divider') {\r\n        component = <div className=\"divider\" />;\r\n      }\r\n\r\n      if (type === 'customPageOperation') {\r\n        component = <CustomPageManipulationOperations key={dataElement} pageNumbers={pageNumbers} {...item} />;\r\n      }\r\n    }\r\n\r\n    return component\r\n      ? React.cloneElement(component, {\r\n        key,\r\n      })\r\n      : null;\r\n  });\r\n}\r\n\r\n\r\nfunction PageManipulationOverlay(props) {\r\n  const { pageNumbers, pageManipulationOverlayItems } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const closeOverlay = useCallback(() => {\r\n    dispatch(actions.setPageManipulationOverlayAlternativePosition(null));\r\n    dispatch(actions.closeElements([DataElements.PAGE_MANIPULATION_OVERLAY]));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    core.addEventListener('documentLoaded', closeOverlay);\r\n    return () => {\r\n      core.removeEventListener('documentLoaded', closeOverlay);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <InitialPageManipulationOverlay pageNumbers={pageNumbers} pageManipulationOverlayItems={pageManipulationOverlayItems}>\r\n      <PageAdditionalControls pageNumbers={pageNumbers} dataElement=\"pageAdditionalControls\" />\r\n      <PageRotationControls pageNumbers={pageNumbers} dataElement=\"pageRotationControls\" />\r\n      <PageManipulationControls pageNumbers={pageNumbers} dataElement=\"pageManipulationControls\" />\r\n    </InitialPageManipulationOverlay>\r\n  );\r\n}\r\n\r\nexport default PageManipulationOverlay;","import React from 'react';\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\nimport PageManipulationOverlay from './PageManipulationOverlay';\r\nimport FlyoutMenu from '../FlyoutMenu/FlyoutMenu';\r\nimport selectors from 'selectors';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nfunction PageManipulationOverlayContainer() {\r\n  const [\r\n    selectedPageIndexes,\r\n    currentPage,\r\n    pageManipulationOverlayItems,\r\n  ] = useSelector((state) => [\r\n    selectors.getSelectedThumbnailPageIndexes(state),\r\n    selectors.getCurrentPage(state),\r\n    selectors.getPageManipulationOverlayItems(state),\r\n  ], shallowEqual);\r\n\r\n  // If we start drilling this prop, maybe create a context\r\n  const pageNumbers = selectedPageIndexes.length > 0 ? selectedPageIndexes.map((i) => i + 1) : [currentPage];\r\n\r\n  return (\r\n    <FlyoutMenu\r\n      menu={DataElements.PAGE_MANIPULATION_OVERLAY}\r\n      trigger={DataElements.PAGE_MANIPULATION_OVERLAY_BUTTON}\r\n    >\r\n      <PageManipulationOverlay\r\n        pageNumbers={pageNumbers}\r\n        pageManipulationOverlayItems={pageManipulationOverlayItems}\r\n      />\r\n    </ FlyoutMenu>\r\n  );\r\n}\r\n\r\nexport default PageManipulationOverlayContainer;","import PageManipulationOverlay from './PageManipulationOverlayContainer';\r\n\r\nexport default PageManipulationOverlay;"],"sourceRoot":""}