{"version":3,"sources":["webpack:///./src/ui/src/components/ColorPickerOverlay/ColorPickerOverlay.scss?886a","webpack:///./src/ui/src/components/ColorPickerOverlay/ColorPickerOverlay.scss","webpack:///./src/ui/src/components/Header/OfficeHeader.scss?e686","webpack:///./src/ui/src/components/Header/OfficeHeader.scss","webpack:///./src/ui/src/components/OfficeEditorImageFilePickerHandler/OfficeEditorImageFilePickerHandler.js","webpack:///./src/ui/src/components/OfficeEditorImageFilePickerHandler/index.js","webpack:///./src/ui/src/components/ColorPickerOverlay/ColorPickerOverlay.js","webpack:///./src/ui/src/components/ColorPickerOverlay/index.js","webpack:///./src/ui/src/helpers/openOfficeEditorFilePicker.js","webpack:///./src/ui/src/constants/officeEditor.js","webpack:///./src/ui/src/components/Header/OfficeEditorToolsHeader.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","ACCEPTED_FORMATS","map","format","join","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","result","onerror","OfficeEditorImageFilePickerHandler","dispatch","useDispatch","openDocument","e","target","files","base64","core","getOfficeEditor","insertImageAtCursor","actions","showWarningMessage","title","message","picker","getRootNode","querySelector","value","className","id","type","accept","onChange","ColorPickerOverlay","color","onStyleChange","portalElementId","useState","left","right","top","position","setPosition","overlayRef","useRef","isOpen","useSelector","state","selectors","isElementOpen","useOnClickOutside","menuButton","contains","closeElements","useLayoutEffect","onResize","overlayPosition","getOverlayPositionBasedOn","window","addEventListener","removeEventListener","createPortal","DataElementWrapper","data-element","classNames","Popup","open","closed","style","ref","ColorPalette","property","useMobileMinMaxWidth","ColorPalettePicker","enableEdit","getElementById","click","LINE_SPACING_OPTIONS","JUSTIFICATION_OPTIONS","LIST_OPTIONS","availableStylePresetMap","fontSize","availablePointSizes","focusContent","isSafari","isIOS","getViewerElement","focus","TextStyles","cursorProperties","isBold","isItalic","isUnderline","ActionButton","isActive","onClick","isTextSelected","toggleSelectedTextStyle","setCursorStyle","bold","dataElement","img","italic","underline","underlineStyle","JustificationOptions","justification","updateParagraphStyle","getDocumentViewer","clearSelection","ListOptions","listType","toggleListSelection","OfficeEditorToolsHeader","DataElement","OFFICE_EDITOR_TOOLS_HEADER","getOfficeEditorCursorProperties","getOfficeEditorSelectionProperties","getAvailableFontFaces","getActiveTheme","getCSSFontValues","isElementDisabled","OFFICE_EDITOR_TOOLS_HEADER_INSERT_IMAGE","shallowEqual","selectionProperties","availableFontFaces","activeTheme","cssFontValues","isInsertImageDisabled","containerWidth","setContainerWidth","initialHeaderWidth","setInitialHeaderWidth","visibleGroupCount","setVisibleGroupCount","showMoreTools","setShowMoreTools","useEffect","onCursorPropertiesUpdated","setOfficeEditorCursorProperties","onSelectionPropertiesUpdated","setOfficeEditorSelectionProperties","getDocument","fontFace","includes","addOfficeEditorAvailableFontFace","actualContainerWidth","pointSize","pointSizeSelectionKey","undefined","toString","lineHeight","lineHeightMultiplier","lineSpacing","Object","values","reduce","a","b","aDiff","Math","abs","bDiff","calculateLineSpacing","fontPointSize","isLightMode","Theme","LIGHT","wvFontColor","Core","Annotations","Color","r","g","useColorIconBorder","convertCursorToStylePreset","paragraphTextStyle","currentColor","stylePreset","rgbaToHex","slice","keys","bounds","width","measureRef","Dropdown","items","onOpened","onClickItem","item","parseInt","fontColor","newTextStyle","R","G","B","textStyle","setTimeout","getCustomItemStyle","padding","applyCustomStyleToButton","currentSelectionKey","updateSelectionStyle","maxHeight","customDataValidator","font","hasInput","isNaN","isSearchEnabled","ToggleElementButton","element","iconClassName","_","lineSpacingOption","displayButton","openOfficeEditorFilePicker"],"mappings":"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","file":"chunks/25.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./ColorPickerOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                if (webComponents.length > 0) {\r\n                  const clonedStyleTags = [];\r\n                  for (let i = 0; i < webComponents.length; i++) {\r\n                    const webComponent = webComponents[i];\r\n                    if (i === 0) {\r\n                      webComponent.shadowRoot.appendChild(styleTag);\r\n                      styleTag.onload = function () {\r\n                        if (clonedStyleTags.length > 0) {\r\n                          clonedStyleTags.forEach((styleNode) => {\r\n                            // eslint-disable-next-line no-unsanitized/property\r\n                            styleNode.innerHTML = styleTag.innerHTML;\r\n                          });\r\n                        }\r\n                      };\r\n                    } else {\r\n                      const styleNode = styleTag.cloneNode(true);\r\n                      webComponent.shadowRoot.appendChild(styleNode);\r\n                      clonedStyleTags.push(styleNode);\r\n                    }\r\n                  }\r\n                } else {\r\n                  document.head.appendChild(styleTag);\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.ColorPickerOverlay{visibility:visible}.closed.ColorPickerOverlay{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ColorPickerOverlay{position:absolute;z-index:70;justify-content:center;align-items:center}.ColorPickerOverlay:empty{padding:0}.ColorPickerOverlay .buttons{display:flex}.ColorPickerOverlay .Button{margin:4px;width:32px;height:32px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ColorPickerOverlay .Button{width:42px;height:42px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ColorPickerOverlay .Button{width:42px;height:42px}}.ColorPickerOverlay .Button:hover{background:var(--popup-button-hover)}.ColorPickerOverlay .Button .Icon{width:18px;height:18px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ColorPickerOverlay .Button .Icon{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ColorPickerOverlay .Button .Icon{width:24px;height:24px}}.is-vertical.ColorPickerOverlay .Button.main-menu-button{width:100%;border-radius:0;justify-content:flex-start;padding-left:var(--padding-small);padding-right:var(--padding-small);margin:0 0 var(--padding-tiny) 0}.is-vertical.ColorPickerOverlay .Button.main-menu-button:first-child{margin-top:var(--padding-tiny)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .is-vertical.ColorPickerOverlay .Button.main-menu-button{width:100%;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .is-vertical.ColorPickerOverlay .Button.main-menu-button{width:100%;height:32px}}.is-vertical.ColorPickerOverlay .Button.main-menu-button .Icon{margin-right:10px}.is-vertical.ColorPickerOverlay .Button.main-menu-button span{white-space:nowrap}@-webkit-keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@-webkit-keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.ColorPickerOverlay{border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background);display:flex;flex-direction:column;padding:16px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./OfficeHeader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                if (webComponents.length > 0) {\r\n                  const clonedStyleTags = [];\r\n                  for (let i = 0; i < webComponents.length; i++) {\r\n                    const webComponent = webComponents[i];\r\n                    if (i === 0) {\r\n                      webComponent.shadowRoot.appendChild(styleTag);\r\n                      styleTag.onload = function () {\r\n                        if (clonedStyleTags.length > 0) {\r\n                          clonedStyleTags.forEach((styleNode) => {\r\n                            // eslint-disable-next-line no-unsanitized/property\r\n                            styleNode.innerHTML = styleTag.innerHTML;\r\n                          });\r\n                        }\r\n                      };\r\n                    } else {\r\n                      const styleNode = styleTag.cloneNode(true);\r\n                      webComponent.shadowRoot.appendChild(styleNode);\r\n                      clonedStyleTags.push(styleNode);\r\n                    }\r\n                  }\r\n                } else {\r\n                  document.head.appendChild(styleTag);\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.MainHeader.OfficeEditorTools{padding:0 8px;align-items:center;flex-direction:row}.MainHeader.OfficeEditorTools .HeaderItems{width:auto}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown{margin-left:8px}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown.small-dropdown{width:80px!important}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown.large-dropdown{width:160px!important}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown .picked-option{text-align:left}.MainHeader.OfficeEditorTools .HeaderItems .line-spacing-dropdown .Dropdown__items{top:40px}.MainHeader.OfficeEditorTools .HeaderItems .action-button-wrapper{display:flex;align-items:center;position:relative}.MainHeader.OfficeEditorTools .HeaderItems .action-button-wrapper .more-tools{position:absolute;top:46px;right:6px;width:auto;padding:0}.MainHeader.OfficeEditorTools .Button .Icon svg{vertical-align:middle}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\r\nimport actions from 'actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport getRootNode from 'helpers/getRootNode';\r\nimport core from 'core';\r\n\r\nimport '../FilePickerHandler/FilePickerHandler.scss';\r\n\r\n// TODO: Can we accept any other image formats?\r\nconst ACCEPTED_FORMATS = ['jpg', 'jpeg', 'png', 'bmp'].map(\r\n  (format) => `.${format}`,\r\n).join(', ');\r\n\r\nconst toBase64 = (file) => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(file);\r\n  reader.onload = () => resolve(reader.result);\r\n  reader.onerror = reject;\r\n});\r\n\r\nconst FilePickerHandler = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const openDocument = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      try {\r\n        const base64 = await toBase64(file);\r\n        await core.getOfficeEditor().insertImageAtCursor(base64);\r\n      } catch (error) {\r\n        dispatch(actions.showWarningMessage({\r\n          title: 'Error',\r\n          message: error.message,\r\n        }));\r\n      }\r\n      const picker = getRootNode().querySelector('#office-editor-file-picker');\r\n      if (picker) {\r\n        picker.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"FilePickerHandler\">\r\n      <input\r\n        id=\"office-editor-file-picker\"\r\n        type=\"file\"\r\n        accept={ACCEPTED_FORMATS}\r\n        onChange={openDocument}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilePickerHandler;\r\n","import OfficeEditorImageFilePickerHandler from './OfficeEditorImageFilePickerHandler';\r\n\r\nexport default OfficeEditorImageFilePickerHandler;\r\n","import React, { useState, useLayoutEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createPortal } from 'react-dom';\r\nimport selectors from 'selectors';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport ColorPalette from 'components/ColorPalette';\r\nimport ColorPalettePicker from 'components/ColorPalettePicker';\r\nimport actions from 'actions';\r\n\r\nimport useOnClickOutside from 'hooks/useOnClickOutside';\r\nimport getOverlayPositionBasedOn from 'helpers/getOverlayPositionBasedOn';\r\nimport classNames from 'classnames';\r\nimport getRootNode from 'helpers/getRootNode';\r\n\r\nimport './ColorPickerOverlay.scss';\r\n\r\nconst ColorPickerOverlay = ({\r\n  color,\r\n  onStyleChange,\r\n  portalElementId = 'app',\r\n}) => {\r\n  const [position, setPosition] = useState(() => ({ left: '555px', right: 'auto', top: 'auto' }));\r\n  const overlayRef = useRef(null);\r\n  const [\r\n    isOpen,\r\n  ] = useSelector((state) => [\r\n    selectors.isElementOpen(state, 'colorPickerOverlay'),\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickOutside = (e) => {\r\n    const menuButton = document.querySelector('[data-element=\"textColorButton\"]');\r\n    const clickedMenuButton = menuButton?.contains(e.target);\r\n    if (!clickedMenuButton) {\r\n      dispatch(actions.closeElements(['colorPickerOverlay']));\r\n    }\r\n  };\r\n  useOnClickOutside(overlayRef, onClickOutside);\r\n\r\n  useLayoutEffect(() => {\r\n    if (isOpen) {\r\n      const onResize = () => {\r\n        const overlayPosition = getOverlayPositionBasedOn('textColorButton', overlayRef);\r\n        setPosition(overlayPosition);\r\n      };\r\n      onResize();\r\n\r\n      window.addEventListener('resize', onResize);\r\n      return () => window.removeEventListener('resize', onResize);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return createPortal(\r\n    <DataElementWrapper\r\n      data-element='colorPickerOverlay'\r\n      className={classNames({\r\n        ColorPickerOverlay: true,\r\n        Popup: true,\r\n        open: isOpen,\r\n        closed: !isOpen\r\n      })}\r\n      style={position}\r\n      ref={overlayRef}\r\n    >\r\n      <ColorPalette\r\n        color={color}\r\n        property='TextColor'\r\n        onStyleChange={onStyleChange}\r\n        useMobileMinMaxWidth\r\n      />\r\n      <ColorPalettePicker\r\n        color={color}\r\n        onStyleChange={onStyleChange}\r\n        enableEdit\r\n      />\r\n    </DataElementWrapper>,\r\n    getRootNode().getElementById(portalElementId),\r\n  );\r\n};\r\n\r\nexport default ColorPickerOverlay;","import ColorPickerOverlay from './ColorPickerOverlay';\r\n\r\nexport default ColorPickerOverlay;","import getRootNode from 'helpers/getRootNode';\r\n\r\nexport default () => {\r\n  getRootNode().querySelector('#office-editor-file-picker')?.click();\r\n};\r\n","export const LINE_SPACING_OPTIONS = {\r\n  'Single': 1,\r\n  '1.15': 1.15,\r\n  '1.5': 1.5,\r\n  'Double': 2,\r\n};\r\n\r\nexport const JUSTIFICATION_OPTIONS = {\r\n  Left: 'left',\r\n  Center: 'center',\r\n  Right: 'right',\r\n  Both: 'both'\r\n};\r\n\r\nexport const LIST_OPTIONS = {\r\n  Ordered: 'ordered',\r\n  Unordered: 'unordered',\r\n};\r\n\r\nexport const DEFAULT_POINT_SIZE = 11;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport Dropdown from 'components/Dropdown';\r\nimport ActionButton from 'components/ActionButton';\r\nimport ToggleElementButton from 'components/ToggleElementButton';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport OfficeEditorImageFilePickerHandler from 'components/OfficeEditorImageFilePickerHandler';\r\nimport DataElement from 'constants/dataElement';\r\nimport actions from 'actions';\r\nimport core from 'core';\r\nimport selectors from 'selectors';\r\nimport ColorPickerOverlay from 'components/ColorPickerOverlay';\r\nimport { rgbaToHex } from 'src/helpers/color';\r\nimport openOfficeEditorFilePicker from 'helpers/openOfficeEditorFilePicker';\r\nimport Theme from 'src/constants/theme';\r\nimport {\r\n  LINE_SPACING_OPTIONS,\r\n  JUSTIFICATION_OPTIONS,\r\n  LIST_OPTIONS,\r\n  DEFAULT_POINT_SIZE,\r\n} from 'src/constants/officeEditor';\r\nimport Measure from 'react-measure';\r\n\r\nimport { isSafari, isIOS } from 'helpers/device';\r\n\r\nimport './Header.scss';\r\nimport './OfficeHeader.scss';\r\n\r\nconst availableStylePresetMap = {\r\n  'Normal Text': {\r\n    fontSize: '11pt',\r\n    color: '#000000',\r\n  },\r\n  'Title': {\r\n    fontSize: '26pt',\r\n    color: '#000000',\r\n  },\r\n  'Subtitle': {\r\n    fontSize: '15pt',\r\n    color: '#666666',\r\n  },\r\n  'Heading 1': {\r\n    fontSize: '20pt',\r\n    color: '#000000',\r\n  },\r\n  'Heading 2': {\r\n    fontSize: '16pt',\r\n    color: '#000000',\r\n  },\r\n  'Heading 3': {\r\n    fontSize: '14pt',\r\n    color: '#434343',\r\n  },\r\n  'Heading 4': {\r\n    fontSize: '12pt',\r\n    color: '#666666',\r\n  },\r\n  'Heading 5': {\r\n    fontSize: '11pt',\r\n    color: '#666666',\r\n  },\r\n};\r\nconst availablePointSizes = ['8', '9', '10', '11', '12', '14', '18', '24', '30', '36', '48', '60', '72'];\r\nconst listOptionsWidth = 121;\r\nconst justificationOptionsWidth = 209;\r\nconst moreButtonWidth = 77;\r\n\r\nconst convertCoreColorToWebViewerColor = (color) => {\r\n  if (!color) {\r\n    return new window.Core.Annotations.Color(0, 0, 0, 1);\r\n  }\r\n\r\n  return new window.Core.Annotations.Color(\r\n    color.r,\r\n    color.g,\r\n    color.b,\r\n    1,\r\n  );\r\n};\r\n\r\nconst focusContent = () => {\r\n  // On safari, focusing the viewer element makes the screen jump up.\r\n  // So the toolbars disappear.\r\n  if (isSafari || isIOS) {\r\n    return;\r\n  }\r\n  // focus so that after clicking you can still input text\r\n  core.getViewerElement().focus();\r\n};\r\n\r\nconst TextStyles = ({ cursorProperties, isBold, isItalic, isUnderline }) => {\r\n  return (\r\n    <>\r\n      <OfficeEditorImageFilePickerHandler />\r\n      <ActionButton\r\n        isActive={isBold}\r\n        onClick={() => {\r\n          if (core.getOfficeEditor().isTextSelected()) {\r\n            core.getOfficeEditor().toggleSelectedTextStyle('bold');\r\n          } else {\r\n            core.getOfficeEditor().setCursorStyle({ bold: !cursorProperties.bold });\r\n          }\r\n          focusContent();\r\n        }}\r\n        dataElement='office-editor-bold'\r\n        title='officeEditor.bold'\r\n        img='icon-text-bold'\r\n      />\r\n      <ActionButton\r\n        isActive={isItalic}\r\n        onClick={() => {\r\n          if (core.getOfficeEditor().isTextSelected()) {\r\n            core.getOfficeEditor().toggleSelectedTextStyle('italic');\r\n          } else {\r\n            core.getOfficeEditor().setCursorStyle({ italic: !cursorProperties.italic });\r\n          }\r\n          focusContent();\r\n        }}\r\n        dataElement='office-editor-italic'\r\n        title='officeEditor.italic'\r\n        img='icon-text-italic'\r\n      />\r\n      <ActionButton\r\n        isActive={isUnderline}\r\n        onClick={() => {\r\n          if (core.getOfficeEditor().isTextSelected()) {\r\n            core.getOfficeEditor().toggleSelectedTextStyle('underline');\r\n          } else {\r\n            core.getOfficeEditor().setCursorStyle({\r\n              underline: cursorProperties.underlineStyle === 'none'\r\n            });\r\n          }\r\n          focusContent();\r\n        }}\r\n        dataElement='office-editor-underline'\r\n        title='officeEditor.underline'\r\n        img='icon-text-underline'\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst JustificationOptions = ({ justification }) => {\r\n  return (\r\n    <>\r\n      <ActionButton\r\n        isActive={justification === JUSTIFICATION_OPTIONS.Left}\r\n        dataElement='office-editor-left-align'\r\n        title='officeEditor.leftAlign'\r\n        img='icon-menu-left-align'\r\n        onClick={() => {\r\n          core.getOfficeEditor().updateParagraphStyle({\r\n            justification: 'left'\r\n          });\r\n          core.getOfficeEditor().setCursorStyle({\r\n            justification: 'left'\r\n          });\r\n\r\n          focusContent();\r\n          core.getDocumentViewer().clearSelection();\r\n        }}\r\n      />\r\n      <ActionButton\r\n        isActive={justification === JUSTIFICATION_OPTIONS.Center}\r\n        dataElement='office-editor-center-align'\r\n        title='officeEditor.centerAlign'\r\n        img='icon-menu-centre-align'\r\n        onClick={() => {\r\n          core.getOfficeEditor().updateParagraphStyle({\r\n            justification: 'center'\r\n          });\r\n          core.getOfficeEditor().setCursorStyle({\r\n            justification: 'center'\r\n          });\r\n\r\n          focusContent();\r\n          core.getDocumentViewer().clearSelection();\r\n        }}\r\n      />\r\n      <ActionButton\r\n        isActive={justification === JUSTIFICATION_OPTIONS.Right}\r\n        dataElement='office-editor-right-align'\r\n        title='officeEditor.rightAlign'\r\n        img='icon-menu-right-align'\r\n        onClick={() => {\r\n          core.getOfficeEditor().updateParagraphStyle({\r\n            justification: 'right'\r\n          });\r\n          core.getOfficeEditor().setCursorStyle({\r\n            justification: 'right'\r\n          });\r\n\r\n          focusContent();\r\n          core.getDocumentViewer().clearSelection();\r\n        }}\r\n      />\r\n      <ActionButton\r\n        isActive={justification === JUSTIFICATION_OPTIONS.Both}\r\n        dataElement='office-editor-justify'\r\n        title='officeEditor.justify'\r\n        img='icon-menu-both-align'\r\n        onClick={() => {\r\n          core.getOfficeEditor().updateParagraphStyle({\r\n            justification: 'both'\r\n          });\r\n          core.getOfficeEditor().setCursorStyle({\r\n            justification: 'both'\r\n          });\r\n\r\n          focusContent();\r\n          core.getDocumentViewer().clearSelection();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst ListOptions = ({ listType }) => {\r\n  return (\r\n    <>\r\n      <ActionButton\r\n        isActive={listType === LIST_OPTIONS.Unordered}\r\n        dataElement='office-editor-bullet-list'\r\n        title='officeEditor.bulletList'\r\n        img='icon-office-editor-bullet-list'\r\n        onClick={() => {\r\n          core.getOfficeEditor().toggleListSelection(LIST_OPTIONS.Unordered);\r\n\r\n          focusContent();\r\n        }}\r\n      />\r\n      <ActionButton\r\n        isActive={listType === LIST_OPTIONS.Ordered}\r\n        dataElement='office-editor-number-list'\r\n        title='officeEditor.numberList'\r\n        img='icon-office-number-list'\r\n        onClick={() => {\r\n          core.getOfficeEditor().toggleListSelection(LIST_OPTIONS.Ordered);\r\n\r\n          focusContent();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst OfficeEditorToolsHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const [\r\n    isOpen,\r\n    cursorProperties,\r\n    selectionProperties,\r\n    availableFontFaces,\r\n    activeTheme,\r\n    cssFontValues,\r\n    isInsertImageDisabled,\r\n  ] = useSelector(\r\n    (state) => [\r\n      selectors.isElementOpen(state, DataElement.OFFICE_EDITOR_TOOLS_HEADER),\r\n      selectors.getOfficeEditorCursorProperties(state),\r\n      selectors.getOfficeEditorSelectionProperties(state),\r\n      selectors.getAvailableFontFaces(state),\r\n      selectors.getActiveTheme(state),\r\n      selectors.getCSSFontValues(state),\r\n      selectors.isElementDisabled(state, DataElement.OFFICE_EDITOR_TOOLS_HEADER_INSERT_IMAGE),\r\n    ],\r\n    shallowEqual\r\n  );\r\n\r\n  const [containerWidth, setContainerWidth] = useState(0);\r\n  const [initialHeaderWidth, setInitialHeaderWidth] = useState(0);\r\n  const [visibleGroupCount, setVisibleGroupCount] = useState(6);\r\n  const [showMoreTools, setShowMoreTools] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onCursorPropertiesUpdated = (cursorProperties) => {\r\n      dispatch(actions.setOfficeEditorCursorProperties(cursorProperties));\r\n    };\r\n    const onSelectionPropertiesUpdated = (selectionProperties) => {\r\n      dispatch(actions.setOfficeEditorSelectionProperties(selectionProperties));\r\n    };\r\n\r\n    core.getDocument()?.addEventListener('cursorPropertiesUpdated', onCursorPropertiesUpdated);\r\n    core.getDocument()?.addEventListener('selectionPropertiesUpdated', onSelectionPropertiesUpdated);\r\n\r\n    return () => {\r\n      core.getDocument()?.removeEventListener('selectionPropertiesUpdated', onSelectionPropertiesUpdated);\r\n      core.getDocument()?.removeEventListener('cursorPropertiesUpdated', onCursorPropertiesUpdated);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cursorProperties.fontFace && !availableFontFaces.includes(cursorProperties.fontFace)) {\r\n      dispatch(actions.addOfficeEditorAvailableFontFace(cursorProperties.fontFace));\r\n    }\r\n  }, [availableFontFaces, cursorProperties]);\r\n\r\n  useEffect(() => {\r\n    if (containerWidth === 0 || initialHeaderWidth === 0) {\r\n      return;\r\n    }\r\n\r\n    const actualContainerWidth = containerWidth - 16;\r\n    if (\r\n      actualContainerWidth >= initialHeaderWidth\r\n    ) {\r\n      setVisibleGroupCount(6);\r\n    } else if (\r\n      actualContainerWidth < initialHeaderWidth &&\r\n      actualContainerWidth >= (initialHeaderWidth - listOptionsWidth + moreButtonWidth)\r\n    ) {\r\n      setVisibleGroupCount(5);\r\n    } else if (\r\n      actualContainerWidth < (initialHeaderWidth - listOptionsWidth + moreButtonWidth) &&\r\n      actualContainerWidth >= (initialHeaderWidth - listOptionsWidth - justificationOptionsWidth + moreButtonWidth) &&\r\n      actualContainerWidth >= 858 // HeaderItems's width when on small devices (screen width < 900px)\r\n    ) {\r\n      setVisibleGroupCount(4);\r\n    } else {\r\n      setVisibleGroupCount(3);\r\n    }\r\n  }, [containerWidth, initialHeaderWidth]);\r\n\r\n  const calculateLineSpacing = (lineHeightMultiplier, lineHeight, fontSize) => {\r\n    // if lineHeight is provided, it takes precedence, because the rule sets the line height in points (either exact or at least)\r\n    const lineSpacing = lineHeight ? lineHeight / fontSize : lineHeightMultiplier;\r\n\r\n    // Sometimes we get floating points so we locate the closest line spacing option\r\n    const roundedLineSpacing = Object.values(LINE_SPACING_OPTIONS).reduce((a, b) => {\r\n      const aDiff = Math.abs(a - lineSpacing);\r\n      const bDiff = Math.abs(b - lineSpacing);\r\n\r\n      if (aDiff === bDiff) {\r\n        return a < b ? a : b;\r\n      }\r\n      return bDiff < aDiff ? b : a;\r\n    });\r\n\r\n    switch (roundedLineSpacing) {\r\n      case 1:\r\n        return 'Single';\r\n      case 1.15:\r\n        return '1.15';\r\n      case 1.5:\r\n        return '1.5';\r\n      case 2:\r\n        return 'Double';\r\n      default:\r\n        return 'Single';\r\n    }\r\n  };\r\n\r\n  const isTextSelected = core.getOfficeEditor().isTextSelected();\r\n  const isBold = isTextSelected ? selectionProperties.bold : cursorProperties.bold;\r\n  const isItalic = isTextSelected ? selectionProperties.italic : cursorProperties.italic;\r\n  const isUnderline = isTextSelected ? selectionProperties.underlineStyle === 'single' : cursorProperties.underlineStyle === 'single';\r\n  const fontFace = isTextSelected ? selectionProperties.fontFace : cursorProperties.fontFace;\r\n  const pointSize = isTextSelected ? selectionProperties.pointSize : cursorProperties.pointSize;\r\n  const pointSizeSelectionKey = pointSize === undefined ? undefined : pointSize.toString();\r\n  const justification = isTextSelected ? selectionProperties.justification : cursorProperties.justification;\r\n  const lineHeight = calculateLineSpacing(\r\n    isTextSelected ? selectionProperties.lineHeightMultiplier : cursorProperties.lineHeightMultiplier,\r\n    isTextSelected ? selectionProperties.lineHeight : cursorProperties.lineHeight,\r\n    cursorProperties.fontPointSize || DEFAULT_POINT_SIZE,\r\n  );\r\n  const listType = isTextSelected ? selectionProperties.listType : cursorProperties.listType;\r\n\r\n  const isLightMode = activeTheme === Theme.LIGHT;\r\n  const wvFontColor = convertCoreColorToWebViewerColor(cursorProperties.color);\r\n  const useColorIconBorder = isLightMode ? wvFontColor.toString() === 'rgba(255,255,255,1)' : wvFontColor.toString() === 'rgba(0,0,0,1)';\r\n\r\n  const convertCursorToStylePreset = (cursorProperties) => {\r\n    const {\r\n      pointSize,\r\n      color: currentColor\r\n    } = cursorProperties.paragraphTextStyle || cursorProperties;\r\n\r\n    let stylePreset = 'Normal Text';\r\n    if (!pointSize || !currentColor) {\r\n      return stylePreset;\r\n    }\r\n\r\n    const fontSize = `${pointSize}pt`;\r\n    let color = '#000000';\r\n    if (color) {\r\n      color = rgbaToHex(\r\n        currentColor.r,\r\n        currentColor.g,\r\n        currentColor.b\r\n      ).slice(0, -2);\r\n    }\r\n\r\n    Object.keys(availableStylePresetMap).forEach((style) => {\r\n      if (\r\n        availableStylePresetMap[style].fontSize === fontSize &&\r\n        availableStylePresetMap[style].color === color\r\n      ) {\r\n        stylePreset = style;\r\n      }\r\n    });\r\n\r\n    return stylePreset;\r\n  };\r\n\r\n  return isOpen ? (\r\n    <DataElementWrapper\r\n      dataElement={DataElement.OFFICE_EDITOR_TOOLS_HEADER}\r\n      className='HeaderToolsContainer'\r\n    >\r\n      <Measure\r\n        bounds\r\n        onResize={({ bounds }) => {\r\n          setContainerWidth(bounds.width);\r\n        }}\r\n      >\r\n        {({ measureRef }) => (\r\n          <div\r\n            className='MainHeader Tools OfficeEditorTools'\r\n            ref={measureRef}\r\n          >\r\n            <Measure\r\n              bounds\r\n              onResize={({ bounds }) => {\r\n                (initialHeaderWidth === 0) && setInitialHeaderWidth(bounds.width);\r\n              }}\r\n            >\r\n              {({ measureRef }) => (\r\n                <div\r\n                  className=\"HeaderItems\"\r\n                  ref={measureRef}\r\n                >\r\n                  <Dropdown\r\n                    items={Object.keys(availableStylePresetMap)}\r\n                    onOpened={() => setShowMoreTools(false)}\r\n                    onClickItem={(item) => {\r\n                      const stylePreset = availableStylePresetMap[item];\r\n                      const fontPointSize = parseInt(stylePreset.fontSize, 10);\r\n                      const fontColor = new window.Core.Annotations.Color(stylePreset.color);\r\n                      const parsedFontColor = {\r\n                        r: fontColor.R,\r\n                        g: fontColor.G,\r\n                        b: fontColor.B,\r\n                        a: 255,\r\n                      };\r\n\r\n                      const newTextStyle = {\r\n                        bold: false,\r\n                        italic: false,\r\n                        underline: false,\r\n                        pointSize: fontPointSize,\r\n                        color: parsedFontColor\r\n                      };\r\n\r\n                      core.getOfficeEditor().updateParagraphStyle({\r\n                        textStyle: newTextStyle,\r\n                      });\r\n                      core.getOfficeEditor().setCursorStyle(newTextStyle);\r\n\r\n                      // setTimeout hack needed because dropdown closing from click is async?\r\n                      setTimeout(() => {\r\n                        // focus so that after clicking you can still input text\r\n                        core.getViewerElement().focus();\r\n                      });\r\n                      core.getDocumentViewer().clearSelection();\r\n                    }}\r\n                    getCustomItemStyle={(item) => ({ ...availableStylePresetMap[item], padding: '20px 10px', color: 'var(--gray-12)' })}\r\n                    applyCustomStyleToButton={false}\r\n                    currentSelectionKey={convertCursorToStylePreset(cursorProperties)}\r\n                    className=\"large-dropdown\"\r\n                    dataElement=\"office-editor-text-format\"\r\n                  />\r\n                  <Dropdown\r\n                    items={availableFontFaces}\r\n                    onOpened={() => setShowMoreTools(false)}\r\n                    onClickItem={(fontFace) => {\r\n                      core.getOfficeEditor().isTextSelected() && core.getOfficeEditor().updateSelectionStyle({ fontFace });\r\n\r\n                      core.getOfficeEditor().setCursorStyle({ fontFace });\r\n\r\n                      // setTimeout hack needed because dropdown closing from click is async?\r\n                      setTimeout(() => {\r\n                        // focus so that after clicking you can still input text\r\n                        core.getViewerElement().focus();\r\n                      });\r\n                    }}\r\n                    getCustomItemStyle={(item) => ({ ...cssFontValues[item] })}\r\n                    maxHeight={500}\r\n                    customDataValidator={(font) => availableFontFaces.includes(font)}\r\n                    className=\"large-dropdown\"\r\n                    dataElement=\"office-editor-font\"\r\n                    currentSelectionKey={fontFace}\r\n                    hasInput\r\n                  />\r\n                  <Dropdown\r\n                    items={availablePointSizes}\r\n                    onOpened={() => setShowMoreTools(false)}\r\n                    onClickItem={(pointSize) => {\r\n                      let fontPointSize = parseInt(pointSize, 10);\r\n\r\n                      if (isNaN(fontPointSize)) {\r\n                        fontPointSize = DEFAULT_POINT_SIZE;\r\n                      }\r\n\r\n                      // TODO: Setting a pointsize of 96 or higher will cause cursor positions array\r\n                      // to be empty for the span\r\n                      // Actually, every large point size seems to break something.\r\n                      if (fontPointSize > 72) {\r\n                        fontPointSize = 72;\r\n                      }\r\n\r\n                      if (core.getOfficeEditor().isTextSelected()) {\r\n                        core.getOfficeEditor().updateSelectionStyle({\r\n                          pointSize: fontPointSize\r\n                        });\r\n                      }\r\n\r\n                      core.getOfficeEditor().setCursorStyle({\r\n                        pointSize: fontPointSize\r\n                      });\r\n\r\n                      // setTimeout hack needed because dropdown closing from click is async?\r\n                      setTimeout(() => {\r\n                        // focus so that after clicking you can still input text\r\n                        core.getViewerElement().focus();\r\n                      });\r\n                    }}\r\n                    currentSelectionKey={pointSizeSelectionKey}\r\n                    className=\"small-dropdown\"\r\n                    dataElement=\"office-editor-font-size\"\r\n                    hasInput\r\n                    isSearchEnabled={false}\r\n                  />\r\n                  {(visibleGroupCount >= 4) && (\r\n                    <>\r\n                      <div className=\"divider\" />\r\n                      <TextStyles\r\n                        cursorProperties={cursorProperties}\r\n                        isBold={isBold}\r\n                        isItalic={isItalic}\r\n                        isUnderline={isUnderline}\r\n                      />\r\n                    </>\r\n                  )}\r\n                  <div className=\"divider\" />\r\n                  <ToggleElementButton\r\n                    onClick={() => setShowMoreTools(false)}\r\n                    dataElement='textColorButton'\r\n                    title='officeEditor.textColor'\r\n                    img='icon-office-editor-circle'\r\n                    element='colorPickerOverlay'\r\n                    color={wvFontColor.toString()}\r\n                    iconClassName={useColorIconBorder ? 'icon-border' : ''}\r\n                  />\r\n                  <ColorPickerOverlay\r\n                    onStyleChange={(_, color) => {\r\n                      const fontColor = {\r\n                        r: color.R,\r\n                        g: color.G,\r\n                        b: color.B,\r\n                        a: 255,\r\n                      };\r\n\r\n                      core.getOfficeEditor().isTextSelected() && core.getOfficeEditor().updateSelectionStyle({ fontColor });\r\n\r\n                      core.getOfficeEditor().setCursorStyle({ fontColor });\r\n\r\n                      dispatch(actions.closeElements(['colorPickerOverlay']));\r\n\r\n                      // focus so that after clicking you can still input text\r\n                      core.getViewerElement().focus();\r\n                    }}\r\n                    color={wvFontColor}\r\n                  />\r\n                  {(visibleGroupCount >= 5) && (\r\n                    <>\r\n                      <div className=\"divider\" />\r\n                      <JustificationOptions justification={justification} />\r\n                    </>\r\n                  )}\r\n                  <div className=\"divider\" />\r\n                  <Dropdown\r\n                    items={Object.keys(LINE_SPACING_OPTIONS)}\r\n                    onClickItem={(lineSpacingOption) => {\r\n                      const lineSpacing = LINE_SPACING_OPTIONS[lineSpacingOption];\r\n                      core.getOfficeEditor().updateParagraphStyle({\r\n                        'lineHeightMultiplier': lineSpacing\r\n                      });\r\n                      core.getOfficeEditor().setCursorStyle({\r\n                        lineHeight,\r\n                      });\r\n\r\n                      // focus so that after clicking you can still input text\r\n                      core.getViewerElement().focus();\r\n                      core.getDocumentViewer().clearSelection();\r\n                    }}\r\n                    currentSelectionKey={lineHeight}\r\n                    className=\"small-dropdown line-spacing-dropdown\"\r\n                    dataElement=\"office-editor-line-spacing\"\r\n                    displayButton={(isOpen) => (\r\n                      <ActionButton\r\n                        title='officeEditor.lineSpacing'\r\n                        img='icon-office-editor-line-spacing'\r\n                        isActive={isOpen}\r\n                        onClick={() => setShowMoreTools(false)}\r\n                      />\r\n                    )}\r\n                  />\r\n                  {!isInsertImageDisabled && (\r\n                    <>\r\n                      <div className=\"divider\" />\r\n                      <ActionButton\r\n                        className=\"tool-group-button\"\r\n                        dataElement={DataElement.OFFICE_EDITOR_TOOLS_HEADER_INSERT_IMAGE}\r\n                        title='officeEditor.insertImage'\r\n                        img='icon-tool-image-line'\r\n                        onClick={openOfficeEditorFilePicker}\r\n                      />\r\n                    </>\r\n                  )}\r\n                  {(visibleGroupCount === 6) && (\r\n                    <>\r\n                      <div className=\"divider\" />\r\n                      <ListOptions listType={listType} />\r\n                    </>\r\n                  )}\r\n                  {(visibleGroupCount < 6) && (\r\n                    <>\r\n                      <div className=\"divider\" />\r\n                      <div className=\"action-button-wrapper\">\r\n                        <ActionButton\r\n                          className=\"tool-group-button\"\r\n                          isActive={showMoreTools}\r\n                          dataElement='office-editor-more-tools'\r\n                          title='action.more'\r\n                          img='icon-tools-more-vertical'\r\n                          onClick={() => setShowMoreTools(!showMoreTools)}\r\n                        />\r\n                        {showMoreTools && (\r\n                          <div className=\"more-tools MainHeader Tools OfficeEditorTools\">\r\n                            <div className=\"HeaderItems\">\r\n                              {(visibleGroupCount < 4) && (\r\n                                <>\r\n                                  <TextStyles\r\n                                    cursorProperties={cursorProperties}\r\n                                    isBold={isBold}\r\n                                    isItalic={isItalic}\r\n                                    isUnderline={isUnderline}\r\n                                  />\r\n                                  <div className=\"divider\" />\r\n                                </>\r\n                              )}\r\n                              {(visibleGroupCount < 5) && (\r\n                                <>\r\n                                  <JustificationOptions justification={justification} />\r\n                                  <div className=\"divider\" />\r\n                                </>\r\n                              )}\r\n                              {(visibleGroupCount < 6) && (\r\n                                <ListOptions listType={listType} />\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Measure>\r\n          </div>\r\n        )}\r\n      </Measure>\r\n    </DataElementWrapper>\r\n  ) : null;\r\n};\r\n\r\nexport default OfficeEditorToolsHeader;\r\n"],"sourceRoot":""}