{"version":3,"sources":["webpack:///./src/ui/src/components/AnnotationContentOverlay/AnnotationContentOverlay.scss?cfde","webpack:///./src/ui/src/components/AnnotationContentOverlay/AnnotationContentOverlay.scss","webpack:///./src/ui/src/components/AnnotationContentOverlay/FormFieldPlaceHolderOverlay.js","webpack:///./src/ui/src/components/AnnotationContentOverlay/AnnotationContentOverlay.js","webpack:///./src/ui/src/components/AnnotationContentOverlay/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","FormFieldPlaceHolderOverlay","annotation","overlayPosition","overlayRef","t","useTranslation","formFieldPlaceHolderName","core","getFormFieldCreationManager","getFieldName","formFieldPlaceHolderType","getFormFieldPlaceholderType","className","data-element","DataElements","ANNOTATION_CONTENT_OVERLAY","style","ref","mapPlaceHolderTypeToTranslation","propTypes","PropTypes","object","clientXY","AnnotationContentOverlay","useSelector","state","selectors","isElementDisabled","isElementOpen","getAnnotationContentOverlayHandler","shallowEqual","isDisabled","isOverlayOpen","customHandler","useState","left","top","setOverlayPosition","isUsingCustomHandler","useRef","contents","getContents","useEffect","current","clientX","clientY","overlayRect","getBoundingClientRect","width","window","innerWidth","height","innerHeight","fitWindowSize","numberOfReplies","getReplies","preRenderedElements","customRender","useCallback","isMobileDevice","undefined","CustomElement","render","isFormFieldPlaceholder","getDisplayAuthor","slice","count"],"mappings":"+EAAA,IAAIA,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,SAAUC,GACX,MAAMC,EAAgBC,SAASC,qBAAqB,oBACpD,GAAIF,EAAcG,OAAS,EAAG,CAC5B,MAAMC,EAAkB,GACxB,IAAK,IAAIP,EAAI,EAAGA,EAAIG,EAAcG,OAAQN,IAAK,CAC7C,MAAMQ,EAAeL,EAAcH,GACnC,GAAU,IAANA,EACFQ,EAAaC,WAAWC,YAAYR,GACpCA,EAASS,OAAS,WACZJ,EAAgBD,OAAS,GAC3BC,EAAgBK,QAASC,IAEvBA,EAAUC,UAAYZ,EAASY,iBAIhC,CACL,MAAMD,EAAYX,EAASa,WAAU,GACrCP,EAAaC,WAAWC,YAAYG,GACpCN,EAAgBS,KAAKH,UAIzBT,SAASa,KAAKP,YAAYR,IAG5C,WAAoB,GAEPP,EAAIC,EAASK,GAI1BF,EAAOmB,QAAUtB,EAAQuB,QAAU,I,sBC3CnCD,EAAUnB,EAAOmB,QAAU,EAAQ,GAAR,EAAkE,IAKrFF,KAAK,CAACjB,EAAOC,EAAI,6hDAA8hD,KAGvjDkB,EAAQC,OAAS,CAChB,kBAAqB,OACrB,mBAAsB,S,4gFCJvB,IA2CeC,EA3CqB,SAAH,GAAoD,IAA9CC,EAAU,EAAVA,WAAYC,EAAe,EAAfA,gBAAiBC,EAAU,EAAVA,WAC3DC,EAAqB,EAAhBC,cAAgB,GAApB,GAGFC,EAD2BC,IAAKC,8BACoBC,aAAaR,GACjES,EAA2BT,EAAWU,8BAmB5C,OACE,yBACEC,UAAU,mCACVC,eAAcC,IAAaC,2BAC3BC,MAAK,KAAOd,GACZe,IAAKd,GAEL,6BACE,0BAAMa,MAAO,CAAE,WAAc,SAAWZ,EAAE,kBAAkB,MAC3DA,EA1BiC,SAACM,GACvC,OAAQA,GACN,IAAK,gBACH,MAAO,uBACT,IAAK,qBACH,MAAO,4BACT,IAAK,oBACH,MAAO,2BACT,IAAK,mBACH,MAAO,0BACT,IAAK,oBACH,MAAO,2BACT,IAAK,uBACH,MAAO,yBAaJQ,CAAgCR,KAErC,6BACE,0BAAMM,MAAO,CAAE,WAAc,SAAWZ,EAAE,sCAAsC,MAC/EE,K,0wEC9BT,IAEMa,EAAY,CAChBlB,WAAYmB,IAAUC,OACtBC,SAAUF,IAAUC,QAGhBE,EAA2B,SAAH,GAAiC,IAA3BtB,EAAU,EAAVA,WAAYqB,EAAQ,EAARA,SAU9B,IAJZE,aAAY,SAACC,GAAK,MAAK,CACzBC,IAAUC,kBAAkBF,EAAOX,IAAaC,4BAChDW,IAAUE,cAAcH,EAAOX,IAAaC,4BAC5CW,IAAUG,mCAAmCJ,MAC5CK,KAAa,GARdC,EAAU,KACVC,EAAa,KAEbC,EAAa,KAOR7B,EAAqB,EAAhBC,cAAgB,GAApB,GAIN,IAH4C6B,mBAAS,CACrDC,KAAM,EACNC,IAAK,IACL,GAHKlC,EAAe,KAAEmC,EAAkB,KAKpCC,EAAyC,OAAlBL,EACvB9B,EAAaoC,iBAAO,MACpBC,EAAWvC,aAAU,EAAVA,EAAYwC,cAK7BC,qBAAU,WAmBR,GAAIvC,EAAWwC,SAAW1C,EAAY,CACpC,IAAQ2C,EAAqBtB,EAArBsB,QAASC,EAAYvB,EAAZuB,QACjB,EApBoB,SAACD,EAASC,EAASV,EAAMC,GAC7C,IAAMU,EAAc3C,EAAWwC,QAAQI,wBAcvC,OAZIZ,EAAOW,EAAYE,MAAQC,OAAOC,aACpCf,EAAOS,EAAUE,EAAYE,MAPvB,IAUJZ,EAAMU,EAAYK,OAASF,OAAOG,cACpChB,EAAMS,EAAUC,EAAYK,OAXtB,IAcJf,GAAO,IACTA,EAAM,GAGD,CAAED,OAAMC,OAKOiB,CAAcT,EAASC,EAASD,EAvB9C,GAuB6DC,EAvB7D,IAuBAV,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IACdC,EAAmB,CAAEF,OAAMC,WAE5B,CAACnC,EAAYqB,IAEhB,IAAMgC,EAAkBrD,aAAU,EAAVA,EAAYsD,aAAarE,OAE3CsE,EAAsBlB,GAAwBrC,EAAagC,EAAchC,GAAc,KAEvFwD,EAAeC,uBAAY,kBAAMF,IAAqB,CAACA,IAuB7D,OAAIzB,GAAc4B,MAAmB1D,EAC5B,KAGLqC,GAAwBN,QAAyC4B,IAAxBJ,EACvCA,EAEA,yBACE5C,UAAU,mCACVC,eAAcC,IAAaC,2BAC3BC,MAAK,KAAOd,GACZe,IAAKd,GAEL,kBAAC0D,EAAA,EAAa,CAACC,OAAQL,KAItB,KAGLxD,EAAW8D,0BAA4B/B,EAEvC,kBAAC,EAA2B,CAC1B/B,WAAYA,EACZC,gBAAiBA,EACjBC,WAAYA,IAKdqC,GAAYR,EAlDd,yBACEpB,UAAU,mCACVC,eAAcC,IAAaC,2BAC3BC,MAAK,KAAOd,GACZe,IAAKd,GAEL,yBAAKS,UAAU,UAAUL,IAAKyD,iBAAiB/D,EAAmB,SAClE,yBAAKW,UAAU,YACZ4B,EAAStD,OAzEK,IAyEkB,UAC1BsD,EAASyB,MAAM,EA1EP,KA0EyB,OACpCzB,GAELc,EAAkB,GACjB,yBAAK1C,UAAU,WACZR,EAAE,+BAAgC,CAAE8D,MAAOZ,MAwC7C,MAGT/B,EAAyBJ,UAAYA,EAEtBI,QCvIAA","file":"chunks/30.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./AnnotationContentOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                if (webComponents.length > 0) {\r\n                  const clonedStyleTags = [];\r\n                  for (let i = 0; i < webComponents.length; i++) {\r\n                    const webComponent = webComponents[i];\r\n                    if (i === 0) {\r\n                      webComponent.shadowRoot.appendChild(styleTag);\r\n                      styleTag.onload = function () {\r\n                        if (clonedStyleTags.length > 0) {\r\n                          clonedStyleTags.forEach((styleNode) => {\r\n                            // eslint-disable-next-line no-unsanitized/property\r\n                            styleNode.innerHTML = styleTag.innerHTML;\r\n                          });\r\n                        }\r\n                      };\r\n                    } else {\r\n                      const styleNode = styleTag.cloneNode(true);\r\n                      webComponent.shadowRoot.appendChild(styleNode);\r\n                      clonedStyleTags.push(styleNode);\r\n                    }\r\n                  }\r\n                } else {\r\n                  document.head.appendChild(styleTag);\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.AnnotationContentOverlay{visibility:visible}.closed.AnnotationContentOverlay{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.AnnotationContentOverlay{word-wrap:break-word;-ms-word-break:break-all;word-break:break-all;word-break:break-word;-ms-hyphens:auto;-webkit-hyphens:auto;hyphens:auto}.always-hide{display:none}.AnnotationContentOverlay{position:absolute;z-index:95;border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background);display:flex;flex-direction:column;max-width:215px;padding:8px}.AnnotationContentOverlay .author{font-weight:700}.AnnotationContentOverlay .contents,.AnnotationContentOverlay .replies{margin-top:5px;white-space:pre-wrap}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport core from 'core';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nconst FormFieldPlaceHolderOverlay = ({ annotation, overlayPosition, overlayRef }) => {\r\n  const [t] = useTranslation();\r\n\r\n  const formFieldCreationManager = core.getFormFieldCreationManager();\r\n  const formFieldPlaceHolderName = formFieldCreationManager.getFieldName(annotation);\r\n  const formFieldPlaceHolderType = annotation.getFormFieldPlaceholderType();\r\n\r\n  const mapPlaceHolderTypeToTranslation = (formFieldPlaceHolderType) => {\r\n    switch (formFieldPlaceHolderType) {\r\n      case 'TextFormField':\r\n        return 'formField.types.text';\r\n      case 'SignatureFormField':\r\n        return 'formField.types.signature';\r\n      case 'CheckBoxFormField':\r\n        return 'formField.types.checkbox';\r\n      case 'ListBoxFormField':\r\n        return 'formField.types.listbox';\r\n      case 'ComboBoxFormField':\r\n        return 'formField.types.combobox';\r\n      case 'RadioButtonFormField':\r\n        return 'formField.types.radio';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Overlay AnnotationContentOverlay\"\r\n      data-element={DataElements.ANNOTATION_CONTENT_OVERLAY}\r\n      style={{ ...overlayPosition }}\r\n      ref={overlayRef}\r\n    >\r\n      <div>\r\n        <span style={{ 'fontWeight': 'bold' }}>{t('formField.type')}: </span>\r\n        {t(mapPlaceHolderTypeToTranslation(formFieldPlaceHolderType))}\r\n      </div>\r\n      <div>\r\n        <span style={{ 'fontWeight': 'bold' }}>{t('formField.formFieldPopup.fieldName')}: </span>\r\n        {formFieldPlaceHolderName}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormFieldPlaceHolderOverlay;","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport core from 'core';\r\nimport selectors from 'selectors';\r\n\r\nimport { isMobileDevice } from 'helpers/device';\r\nimport DataElements from 'constants/dataElement';\r\nimport CustomElement from '../CustomElement';\r\nimport FormFieldPlaceHolderOverlay from './FormFieldPlaceHolderOverlay';\r\nimport './AnnotationContentOverlay.scss';\r\n\r\nconst MAX_CHARACTERS = 100;\r\n\r\nconst propTypes = {\r\n  annotation: PropTypes.object,\r\n  clientXY: PropTypes.object,\r\n};\r\n\r\nconst AnnotationContentOverlay = ({ annotation, clientXY }) => {\r\n  const [\r\n    isDisabled,\r\n    isOverlayOpen,\r\n    // Clients have the option to customize how the tooltip is rendered by passing a handler\r\n    customHandler,\r\n  ] = useSelector((state) => [\r\n    selectors.isElementDisabled(state, DataElements.ANNOTATION_CONTENT_OVERLAY),\r\n    selectors.isElementOpen(state, DataElements.ANNOTATION_CONTENT_OVERLAY),\r\n    selectors.getAnnotationContentOverlayHandler(state),\r\n  ], shallowEqual);\r\n\r\n  const [t] = useTranslation();\r\n  const [overlayPosition, setOverlayPosition] = useState({\r\n    left: 0,\r\n    top: 0,\r\n  });\r\n\r\n  const isUsingCustomHandler = customHandler !== null;\r\n  const overlayRef = useRef(null);\r\n  const contents = annotation?.getContents();\r\n  // the gap between the component and the mouse, to make sure that the mouse won't be on component element\r\n  // so that the underlying annotation will always be hovered\r\n  const gap = 20;\r\n\r\n  useEffect(() => {\r\n    const fitWindowSize = (clientX, clientY, left, top) => {\r\n      const overlayRect = overlayRef.current.getBoundingClientRect();\r\n\r\n      if (left + overlayRect.width > window.innerWidth) {\r\n        left = clientX - overlayRect.width - gap;\r\n      }\r\n\r\n      if (top + overlayRect.height > window.innerHeight) {\r\n        top = clientY - overlayRect.height - gap;\r\n      }\r\n\r\n      if (top <= 0) {\r\n        top = 0;\r\n      }\r\n\r\n      return { left, top };\r\n    };\r\n\r\n    if (overlayRef.current && annotation) {\r\n      const { clientX, clientY } = clientXY;\r\n      const { left, top } = fitWindowSize(clientX, clientY, clientX + gap, clientY + gap);\r\n      setOverlayPosition({ left, top });\r\n    }\r\n  }, [annotation, clientXY]);\r\n\r\n  const numberOfReplies = annotation?.getReplies().length;\r\n\r\n  const preRenderedElements = isUsingCustomHandler && annotation ? customHandler(annotation) : null;\r\n\r\n  const customRender = useCallback(() => preRenderedElements, [preRenderedElements]);\r\n\r\n  const renderContents = () => (\r\n    <div\r\n      className=\"Overlay AnnotationContentOverlay\"\r\n      data-element={DataElements.ANNOTATION_CONTENT_OVERLAY}\r\n      style={{ ...overlayPosition }}\r\n      ref={overlayRef}\r\n    >\r\n      <div className=\"author\">{core.getDisplayAuthor(annotation['Author'])}</div>\r\n      <div className=\"contents\">\r\n        {contents.length > MAX_CHARACTERS\r\n          ? `${contents.slice(0, MAX_CHARACTERS)}...`\r\n          : contents}\r\n      </div>\r\n      {numberOfReplies > 0 && (\r\n        <div className=\"replies\">\r\n          {t('message.annotationReplyCount', { count: numberOfReplies })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (isDisabled || isMobileDevice || !annotation) {\r\n    return null;\r\n  }\r\n\r\n  if (isUsingCustomHandler && isOverlayOpen && preRenderedElements !== undefined) {\r\n    if (preRenderedElements) {\r\n      return (\r\n        <div\r\n          className=\"Overlay AnnotationContentOverlay\"\r\n          data-element={DataElements.ANNOTATION_CONTENT_OVERLAY}\r\n          style={{ ...overlayPosition }}\r\n          ref={overlayRef}\r\n        >\r\n          <CustomElement render={customRender} />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  if (annotation.isFormFieldPlaceholder() && isOverlayOpen) {\r\n    return (\r\n      <FormFieldPlaceHolderOverlay\r\n        annotation={annotation}\r\n        overlayPosition={overlayPosition}\r\n        overlayRef={overlayRef}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (contents && isOverlayOpen) {\r\n    return renderContents();\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nAnnotationContentOverlay.propTypes = propTypes;\r\n\r\nexport default AnnotationContentOverlay;\r\n","import AnnotationContentOverlay from './AnnotationContentOverlay';\r\n\r\nexport default AnnotationContentOverlay;"],"sourceRoot":""}