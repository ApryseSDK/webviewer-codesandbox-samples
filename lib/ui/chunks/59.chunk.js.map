{"version":3,"sources":["webpack:///./src/ui/src/components/ZoomOverlay/ZoomOverlayContainer.js","webpack:///./src/ui/src/components/ZoomOverlay/index.js"],"names":["ZoomOverlayContainer","dispatch","useDispatch","t","useTranslation","activeDocumentViewerKey","useSelector","state","selectors","getActiveDocumentViewerKey","FlyoutMenu","menu","DataElements","ZOOM_OVERLAY","trigger","ZOOM_OVERLAY_BUTTON","ariaLabel","ZoomOverlay","zoomList","getZoomList","currentZoomLevel","getZoom","isReaderMode","isMarqueeZoomActive","getActiveToolName","isMarqueeToolButtonDisabled","isElementDisabled","fitToWidth","fitToPage","onClickZoomLevelOption","zoomLevel","zoomTo","actions","closeElements","onClickMarqueeZoom"],"mappings":"0xCA+CeA,MArCf,WACE,IAAMC,EAAWC,cACVC,EAAqB,EAAhBC,cAAgB,GAApB,GACDC,EAEL,EAFgCC,aAAY,SAACC,GAAK,MAAK,CACvDC,IAAUC,2BAA2BF,OACrC,GAF4B,GAa9B,OACE,kBAACG,EAAA,EAAU,CACTC,KAAMC,IAAaC,aACnBC,QAASF,IAAaG,oBACtBC,UAAWb,EAAE,0BAEb,kBAACc,EAAA,EAAW,CACVC,SAAUZ,YAAYE,IAAUW,aAChCC,iBAAkBd,YAAYE,IAAUa,SACxCC,aAAchB,YAAYE,IAAUc,cACpCC,oBAAkE,oBAA7CjB,YAAYE,IAAUgB,mBAC3CC,4BAA6BnB,aAAY,SAACC,GAAK,OAAKC,IAAUkB,kBAAkBnB,EAAO,wBACvFoB,WAAY,kBAAMA,YAAWtB,IAC7BuB,UAAW,kBAAMA,YAAUvB,IAC3BwB,uBAvBN,SAAgCC,GAC9BC,YAAOD,GACP7B,EAAS+B,IAAQC,cAAc,CAACrB,IAAaC,iBAsBzCqB,mBAnBN,WACEjC,EAAS+B,IAAQC,cAAc,CAACrB,IAAaC,qBCrBlCI","file":"chunks/59.chunk.js","sourcesContent":["import React from 'react';\r\nimport actions from 'actions';\r\nimport selectors from 'selectors';\r\nimport { zoomTo, fitToPage, fitToWidth } from 'helpers/zoom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FlyoutMenu from 'components/FlyoutMenu/FlyoutMenu';\r\nimport ZoomOverlay from './ZoomOverlay';\r\nimport DataElements from 'src/constants/dataElement';\r\n\r\nfunction ZoomOverlayContainer() {\r\n  const dispatch = useDispatch();\r\n  const [t] = useTranslation();\r\n  const [activeDocumentViewerKey] = useSelector((state) => [\r\n    selectors.getActiveDocumentViewerKey(state),\r\n  ]);\r\n\r\n  function onClickZoomLevelOption(zoomLevel) {\r\n    zoomTo(zoomLevel);\r\n    dispatch(actions.closeElements([DataElements.ZOOM_OVERLAY]));\r\n  }\r\n\r\n  function onClickMarqueeZoom() {\r\n    dispatch(actions.closeElements([DataElements.ZOOM_OVERLAY]));\r\n  }\r\n\r\n  return (\r\n    <FlyoutMenu\r\n      menu={DataElements.ZOOM_OVERLAY}\r\n      trigger={DataElements.ZOOM_OVERLAY_BUTTON}\r\n      ariaLabel={t('component.zoomOverlay')}\r\n    >\r\n      <ZoomOverlay\r\n        zoomList={useSelector(selectors.getZoomList)}\r\n        currentZoomLevel={useSelector(selectors.getZoom)}\r\n        isReaderMode={useSelector(selectors.isReaderMode)}\r\n        isMarqueeZoomActive={useSelector(selectors.getActiveToolName) === 'MarqueeZoomTool'}\r\n        isMarqueeToolButtonDisabled={useSelector((state) => selectors.isElementDisabled(state, 'marqueeToolButton'))}\r\n        fitToWidth={() => fitToWidth(activeDocumentViewerKey)}\r\n        fitToPage={() => fitToPage(activeDocumentViewerKey)}\r\n        onClickZoomLevelOption={onClickZoomLevelOption}\r\n        onClickMarqueeZoom={onClickMarqueeZoom}\r\n      />\r\n    </FlyoutMenu>\r\n  );\r\n}\r\n\r\nexport default ZoomOverlayContainer;\r\n","import ZoomOverlay from './ZoomOverlayContainer';\r\n\r\nexport default ZoomOverlay;\r\n"],"sourceRoot":""}