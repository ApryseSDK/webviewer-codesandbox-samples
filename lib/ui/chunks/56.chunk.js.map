{"version":3,"sources":["webpack:///./src/ui/src/components/LinkModal/LinkModal.js","webpack:///./src/ui/src/components/LinkModal/index.js"],"names":["i","LinkModal","rightClickedAnnotation","setRightClickedAnnotation","useSelector","state","selectors","isElementDisabled","DataElements","LINK_MODAL","isElementOpen","getTotalPages","getCurrentPage","getSelectedTab","getPageLabels","isRightClickAnnotationPopupEnabled","isDisabled","isOpen","totalPages","currentPage","tabSelected","pageLabels","t","useTranslation","dispatch","useDispatch","urlInput","React","createRef","pageLabelInput","useState","url","setURL","pageLabel","setPageLabel","isRightClickedAnnotationSelected","core","isAnnotationSelected","selectedAnnotations","getSelectedAnnotations","annotManager","getAnnotationManager","closeModal","actions","closeElement","setToolMode","defaultTool","newLink","x","y","width","height","linkPageNumber","link","window","Core","Annotations","Link","PageNumber","StrokeColor","Color","StrokeStyle","StrokeThickness","Author","getCurrentUser","Subject","X","Y","Width","Height","createLink","action","linksResults","quads","getSelectedTextQuads","selectedText","getSelectedText","currPageLinks","currPageNumber","forEach","quad","push","Math","min","x1","x3","y1","y3","abs","parseInt","createHighlightAnnot","annot","groupedAnnots","getGroupAnnotations","length","linksToDelete","filter","ungroupAnnotations","deleteAnnotations","addAction","addAnnotations","groupAnnotations","linkAnnotArray","text","linkAnnot","highlight","TextHighlightAnnotation","Opacity","Quads","setContents","index","addURLLink","e","preventDefault","urlWithProtocol","isValidURI","Actions","URI","uri","pageNumbersToDraw","map","Set","pageNumberToDraw","drawAnnotations","addPageLink","options","dest","Dest","GoTo","page","indexOf","useEffect","urls","match","current","focus","addEventListener","removeEventListener","modalClass","classNames","Modal","open","closed","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","className","data-element","onMouseDown","stopPropagation","Tabs","id","dataElement","onSubmit","ref","value","onChange","target","Button","label","onClick","disabled","includes"],"mappings":"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","file":"chunks/56.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport defaultTool from 'constants/defaultTool';\r\nimport core from 'core';\r\nimport { Tabs, Tab, TabPanel } from 'components/Tabs';\r\nimport Button from 'components/Button';\r\nimport actions from 'actions';\r\nimport selectors from 'selectors';\r\nimport { Swipeable } from 'react-swipeable';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nimport './LinkModal.scss';\r\n\r\nconst LinkModal = ({ rightClickedAnnotation, setRightClickedAnnotation }) => {\r\n  const [\r\n    isDisabled,\r\n    isOpen,\r\n    totalPages,\r\n    currentPage,\r\n    tabSelected,\r\n    pageLabels,\r\n    isRightClickAnnotationPopupEnabled,\r\n  ] = useSelector((state) => [\r\n    selectors.isElementDisabled(state, DataElements.LINK_MODAL),\r\n    selectors.isElementOpen(state, DataElements.LINK_MODAL),\r\n    selectors.getTotalPages(state),\r\n    selectors.getCurrentPage(state),\r\n    selectors.getSelectedTab(state, DataElements.LINK_MODAL),\r\n    selectors.getPageLabels(state),\r\n    selectors.isRightClickAnnotationPopupEnabled(state),\r\n  ]);\r\n  const [t] = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const urlInput = React.createRef();\r\n  const pageLabelInput = React.createRef();\r\n\r\n  const [url, setURL] = useState('');\r\n  const [pageLabel, setPageLabel] = useState('');\r\n  const isRightClickedAnnotationSelected = core.isAnnotationSelected(rightClickedAnnotation);\r\n  const selectedAnnotations = core.getSelectedAnnotations();\r\n  const annotManager = core.getAnnotationManager();\r\n\r\n  const closeModal = () => {\r\n    dispatch(actions.closeElement(DataElements.LINK_MODAL));\r\n    setURL('');\r\n    core.setToolMode(defaultTool);\r\n    setRightClickedAnnotation(null);\r\n  };\r\n\r\n  const newLink = (x, y, width, height, linkPageNumber = currentPage) => {\r\n    const link = new window.Core.Annotations.Link();\r\n    link.PageNumber = linkPageNumber;\r\n    link.StrokeColor = new window.Core.Annotations.Color(0, 165, 228);\r\n    link.StrokeStyle = 'underline';\r\n    link.StrokeThickness = 2;\r\n    link.Author = core.getCurrentUser();\r\n    link.Subject = 'Link';\r\n    link.X = x;\r\n    link.Y = y;\r\n    link.Width = width;\r\n    link.Height = height;\r\n    return link;\r\n  };\r\n\r\n  const createLink = (action) => {\r\n    const linksResults = [];\r\n\r\n    const quads = core.getSelectedTextQuads();\r\n\r\n    // If annotation popup is on right click, this won't clear selected text if there's any, adding links will add links for both right-clicked annotation and selected text\r\n    if (quads) {\r\n      const selectedText = core.getSelectedText();\r\n      for (const currPageNumber in quads) {\r\n        const currPageLinks = [];\r\n        quads[currPageNumber].forEach((quad) => {\r\n          currPageLinks.push(\r\n            newLink(\r\n              Math.min(quad.x1, quad.x3),\r\n              Math.min(quad.y1, quad.y3),\r\n              Math.abs(quad.x1 - quad.x3),\r\n              Math.abs(quad.y1 - quad.y3),\r\n              parseInt(currPageNumber)\r\n            )\r\n          );\r\n        });\r\n        createHighlightAnnot(\r\n          currPageLinks,\r\n          quads[currPageNumber],\r\n          selectedText,\r\n          action\r\n        );\r\n        linksResults.push(...currPageLinks);\r\n      }\r\n    }\r\n\r\n    const annotationsToAddLink = (!isRightClickAnnotationPopupEnabled || isRightClickedAnnotationSelected) ? selectedAnnotations : [rightClickedAnnotation];\r\n\r\n    annotationsToAddLink.forEach((annot) => {\r\n      if (!annot) {\r\n        return;\r\n      }\r\n      const groupedAnnots = annotManager.getGroupAnnotations(annot);\r\n      // ungroup and delete any previously created links\r\n      if (groupedAnnots.length > 1) {\r\n        const linksToDelete = groupedAnnots.filter((annot) => annot instanceof window.Core.Annotations.Link);\r\n        if (linksToDelete.length > 0) {\r\n          annotManager.ungroupAnnotations(groupedAnnots);\r\n          core.deleteAnnotations(linksToDelete);\r\n        }\r\n      }\r\n\r\n      // if multi-select an annotation with no link option with an annotation with link option and right click on the latter, link button will show up and will add links for all annotations\r\n      const link = newLink(annot.X, annot.Y, annot.Width, annot.Height);\r\n      link.addAction('U', action);\r\n      core.addAnnotations([link]);\r\n      linksResults.push(link);\r\n      annotManager.groupAnnotations(annot, [link]);\r\n    });\r\n\r\n    return linksResults;\r\n  };\r\n\r\n  const createHighlightAnnot = async (linkAnnotArray, quads, text, action) => {\r\n    const annotManager = core.getAnnotationManager();\r\n    const linkAnnot = linkAnnotArray[0];\r\n    const highlight = new window.Core.Annotations.TextHighlightAnnotation();\r\n    highlight.PageNumber = linkAnnot.PageNumber;\r\n    highlight.X = linkAnnot.X;\r\n    highlight.Y = linkAnnot.Y;\r\n    highlight.Width = linkAnnot.Width;\r\n    highlight.Height = linkAnnot.Height;\r\n    highlight.StrokeColor = new window.Core.Annotations.Color(0, 0, 0, 0);\r\n    highlight.Opacity = 0;\r\n    highlight.Quads = quads;\r\n    highlight.Author = core.getCurrentUser();\r\n    highlight.setContents(text);\r\n\r\n    linkAnnotArray.forEach((link, index) => {\r\n      link.addAction('U', action);\r\n      index === 0 ? core.addAnnotations([link, highlight]) : core.addAnnotations([link]);\r\n    });\r\n    annotManager.groupAnnotations(highlight, linkAnnotArray);\r\n  };\r\n\r\n  const addURLLink = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!url.length) {\r\n      return;\r\n    }\r\n\r\n    let urlWithProtocol;\r\n    if (!core.isValidURI(url)) {\r\n      urlWithProtocol = `https://${url}`;\r\n    } else {\r\n      urlWithProtocol = url;\r\n    }\r\n\r\n    const action = new window.Core.Actions.URI({ uri: urlWithProtocol });\r\n    const links = createLink(action);\r\n\r\n    let pageNumbersToDraw = links.map((link) => link.PageNumber);\r\n    pageNumbersToDraw = [...new Set(pageNumbersToDraw)];\r\n    pageNumbersToDraw.forEach((pageNumberToDraw) => {\r\n      core.drawAnnotations(pageNumberToDraw, null, true);\r\n    });\r\n\r\n    closeModal();\r\n  };\r\n\r\n  const isValidPageLabel = () => {\r\n    return pageLabels?.includes(pageLabel);\r\n  };\r\n\r\n  const addPageLink = (e) => {\r\n    e.preventDefault();\r\n\r\n    const Dest = window.Core.Actions.GoTo.Dest;\r\n\r\n    const options = { dest: new Dest({ page: pageLabels.indexOf(pageLabel) + 1 }) };\r\n    const action = new window.Core.Actions.GoTo(options);\r\n\r\n    const links = createLink(action);\r\n\r\n    let pageNumbersToDraw = links.map((link) => link.PageNumber);\r\n    pageNumbersToDraw = [...new Set(pageNumbersToDraw)];\r\n    pageNumbersToDraw.forEach((pageNumberToDraw) => {\r\n      core.drawAnnotations(pageNumberToDraw, null, true);\r\n    });\r\n\r\n    closeModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      //  prepopulate URL if URL is selected\r\n      const selectedText = core.getSelectedText();\r\n      if (selectedText) {\r\n        const urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\r\n        const urls = selectedText.match(urlRegex);\r\n        if (urls && urls.length > 0) {\r\n          setURL(urls[0]);\r\n        }\r\n      }\r\n\r\n      setPageLabel(pageLabels.length > 0 ? pageLabels[0] : '1');\r\n    }\r\n  }, [totalPages, isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (tabSelected === 'PageNumberPanelButton' && isOpen) {\r\n      pageLabelInput.current.focus();\r\n    } else if (tabSelected === 'URLPanelButton' && isOpen) {\r\n      urlInput.current.focus();\r\n    }\r\n  }, [tabSelected, isOpen, pageLabelInput, urlInput]);\r\n\r\n  useEffect(() => {\r\n    core.addEventListener('documentUnloaded', closeModal);\r\n    return () => {\r\n      core.removeEventListener('documentUnloaded', closeModal);\r\n    };\r\n  }, []);\r\n\r\n  const modalClass = classNames({\r\n    Modal: true,\r\n    LinkModal: true,\r\n    open: isOpen,\r\n    closed: !isOpen,\r\n  });\r\n\r\n  return isDisabled ? null : (\r\n    <Swipeable\r\n      onSwipedUp={closeModal}\r\n      onSwipedDown={closeModal}\r\n      preventDefaultTouchmoveEvent\r\n    >\r\n      <div\r\n        className={modalClass}\r\n        data-element={DataElements.LINK_MODAL}\r\n        onMouseDown={closeModal}\r\n      >\r\n        <div className=\"container\" onMouseDown={(e) => e.stopPropagation()}>\r\n          <div className=\"swipe-indicator\" />\r\n          <Tabs id=\"linkModal\">\r\n            <div className=\"tab-list\">\r\n              <Tab dataElement=\"URLPanelButton\">\r\n                <div className=\"tab-options-button\">{t('link.url')}</div>\r\n              </Tab>\r\n              <div className=\"tab-options-divider\" />\r\n              <Tab dataElement=\"PageNumberPanelButton\">\r\n                <div className=\"tab-options-button\">{t('link.page')}</div>\r\n              </Tab>\r\n            </div>\r\n\r\n            <TabPanel dataElement=\"URLPanel\">\r\n              <form onSubmit={addURLLink}>\r\n                <div>{t('link.enterurl')}</div>\r\n                <div className=\"linkInput\">\r\n                  <input\r\n                    className=\"urlInput\"\r\n                    ref={urlInput}\r\n                    value={url}\r\n                    onChange={(e) => setURL(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    dataElement=\"linkSubmitButton\"\r\n                    label={t('action.link')}\r\n                    onClick={addURLLink}\r\n                    disabled={!url.length}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </TabPanel>\r\n            <TabPanel dataElement=\"PageNumberPanel\">\r\n              <form onSubmit={addPageLink}>\r\n                <div>{t('link.enterpage')}</div>\r\n                <div className=\"linkInput\">\r\n                  <input\r\n                    ref={pageLabelInput}\r\n                    value={pageLabel}\r\n                    onChange={(e) => setPageLabel(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    dataElement=\"linkSubmitButton\"\r\n                    label={t('action.link')}\r\n                    onClick={addPageLink}\r\n                    disabled={!isValidPageLabel()}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </TabPanel>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </Swipeable>\r\n  );\r\n};\r\n\r\nexport default LinkModal;\r\n","import LinkModal from './LinkModal';\r\n\r\nexport default LinkModal;"],"sourceRoot":""}