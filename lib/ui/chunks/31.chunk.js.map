{"version":3,"sources":["webpack:///./src/ui/src/components/CalibrationModal/CalibrationModal.scss?721e","webpack:///./src/ui/src/components/CalibrationModal/CalibrationModal.scss","webpack:///./src/ui/src/helpers/evalFraction.js","webpack:///./src/ui/src/components/CalibrationModal/CalibrationModal.js","webpack:///./src/ui/src/components/CalibrationModal/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","fraction","split","numerator","denominator","Number","parseMeasurementContentsByAnnotation","annotation","factor","Measure","axis","Scale","getLineLength","numberRegex","fractionRegex","pureFractionRegex","CalibrationModal","useSelector","state","selectors","isElementOpen","DataElements","CALIBRATION_MODAL","isElementDisabled","getMeasurementUnits","shallowEqual","isOpen","isDisabled","units","dispatch","useDispatch","useState","setAnnotation","value","setValue","newDistance","setNewDistance","unitTo","setUnitTo","showError","setShowError","t","useTranslation","inputRef","useRef","useEffect","current","focus","handleAnnotationsSelected","core","getSelectedAnnotations","onAnnotationSelected","annotations","action","addEventListener","removeEventListener","onAnnotationChanged","toFixed","mapAnnotationToKey","annot","parseFloat","handleLossOfPrecision","scale","getNewScale","currentDistance","ratio","currentScale","closeModal","actions","closeElements","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","className","classNames","Modal","open","closed","onMouseDown","e","stopPropagation","ref","type","onChange","target","onBlur","inputValue","trim","test","whole","isFinite","evalFraction","number","to","map","unit","key","Button","dataElement","label","onClick","newScale","accurateNewScale","setAnnotationStyles","setToolStyles","disabled"],"mappings":"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","file":"chunks/31.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./CalibrationModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                if (webComponents.length > 0) {\r\n                  const clonedStyleTags = [];\r\n                  for (let i = 0; i < webComponents.length; i++) {\r\n                    const webComponent = webComponents[i];\r\n                    if (i === 0) {\r\n                      webComponent.shadowRoot.appendChild(styleTag);\r\n                      styleTag.onload = function () {\r\n                        if (clonedStyleTags.length > 0) {\r\n                          clonedStyleTags.forEach((styleNode) => {\r\n                            // eslint-disable-next-line no-unsanitized/property\r\n                            styleNode.innerHTML = styleTag.innerHTML;\r\n                          });\r\n                        }\r\n                      };\r\n                    } else {\r\n                      const styleNode = styleTag.cloneNode(true);\r\n                      webComponent.shadowRoot.appendChild(styleNode);\r\n                      clonedStyleTags.push(styleNode);\r\n                    }\r\n                  }\r\n                } else {\r\n                  document.head.appendChild(styleTag);\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.CalibrationModal{visibility:visible}.closed.CalibrationModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.CalibrationModal{position:fixed;left:0;bottom:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.CalibrationModal .modal-container .wrapper .modal-content{padding:10px}.CalibrationModal .footer{display:flex;flex-direction:row;justify-content:flex-end;width:100%;margin-top:13px}.CalibrationModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.CalibrationModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.CalibrationModal .footer .modal-button.cancel{color:var(--secondary-button-text);border:1px solid var(--secondary-button-text)}.CalibrationModal .footer .modal-button.cancel:hover{background-color:var(--document-background-color);color:var(--secondary-button-hover);border:1px solid var(--secondary-button-hover)}.CalibrationModal .footer .modal-button.confirm{margin-left:4px;color:var(--primary-button-text);font-weight:600;background:var(--primary-button)}.CalibrationModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover)}.CalibrationModal .footer .modal-button.confirm.disabled{background:var(--primary-button)!important;opacity:.5}.CalibrationModal .footer .modal-button.secondary-btn-custom{border-radius:4px;border:1px solid var(--primary-button);color:var(--primary-button);padding:2px 20px 4px;cursor:pointer;background-color:#fff}.CalibrationModal .footer .modal-button.secondary-btn-custom:hover{color:var(--secondary-button-hover)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .footer .modal-button{padding:23px 8px}}.CalibrationModal .swipe-indicator{background:var(--divider);border-radius:2px;height:4px;width:38px;position:absolute;top:12px;margin-left:auto;margin-right:auto;left:0;right:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .swipe-indicator{display:none}}.CalibrationModal .container{border-radius:4px;overflow-y:auto;max-height:100%}@media(max-height:500px){.App:not(.is-web-component) .CalibrationModal .container,.CalibrationModal .App:not(.is-web-component) .container{overflow:auto;max-height:100%}}@container (max-height: 500px){.App.is-web-component .CalibrationModal .container,.CalibrationModal .App.is-web-component .container{overflow:auto;max-height:100%}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .container,.CalibrationModal .App:not(.is-in-desktop-only-mode):not(.is-web-component) .container{width:100%;position:fixed;left:0;bottom:0;padding-top:4px;min-width:100px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .container,.CalibrationModal .App.is-web-component:not(.is-in-desktop-only-mode) .container{width:100%;position:fixed;left:0;bottom:0;padding-top:4px;min-width:100px}}.CalibrationModal .container{display:flex;flex-direction:column;min-width:400px;box-shadow:0 0 3px 0 var(--document-box-shadow);padding:8px;background:var(--component-background)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .container{padding:24px 24px 16px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .container{padding:24px 24px 16px}}.CalibrationModal .container .calibration__header{font-size:16px;margin-top:8px;margin-bottom:8px}.CalibrationModal .container .calibration__body{padding-top:8px}.CalibrationModal .container .calibration__body .calibration__input{margin-top:8px;display:flex;flex-direction:row;justify-content:space-between}.CalibrationModal .container .calibration__body input{width:100%;height:30px;font-size:13px;border:1px solid var(--border);border-radius:4px;color:var(--text-color);padding:4px 42px 6px 8px;margin-right:8px}.CalibrationModal .container .calibration__body input:focus{outline:none;border:1px solid var(--focus-border)}.CalibrationModal .container .calibration__body input::-moz-placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body input:-ms-input-placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body input::placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body .error{border:1px solid var(--error-border-color)}.CalibrationModal .container .calibration__body .unitToInput{height:29px;width:45px;border-radius:5px;border:1px solid var(--border);font-size:13px}.CalibrationModal .container .calibration__body .unitToInput:focus{outline:none;border:1px solid var(--focus-border)}.CalibrationModal .container .calibration__body .unitToInput::-moz-placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body .unitToInput:-ms-input-placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body .unitToInput::placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body .errorMeasurement{font-size:13px;margin-top:8px;margin-bottom:8px;color:var(--error-text-color);max-width:400px}.CalibrationModal .container .calibration__footer{display:flex;justify-content:flex-end;margin-top:8px}.CalibrationModal .container .calibration__footer .Button{display:flex;justify-content:center;align-items:center;color:var(--primary-button-text);font-weight:600;padding:6px 18px;margin-top:8px;margin-left:5px;width:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;background:var(--primary-button);border-radius:4px;height:30px;cursor:pointer}.CalibrationModal .container .calibration__footer .Button:hover{background:var(--primary-button-hover)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","export default (fraction) => {\r\n  const [numerator, denominator] = fraction.split('/');\r\n  return Number(numerator) / Number(denominator);\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Button from 'components/Button';\r\nimport core from 'core';\r\nimport { mapAnnotationToKey } from 'constants/map';\r\nimport setToolStyles from 'helpers/setToolStyles';\r\nimport evalFraction from 'helpers/evalFraction';\r\nimport actions from 'actions';\r\nimport selectors from 'selectors';\r\nimport { Swipeable } from 'react-swipeable';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nimport './CalibrationModal.scss';\r\n\r\nconst parseMeasurementContentsByAnnotation = (annotation) => {\r\n  const factor = annotation.Measure.axis[0].factor;\r\n  const unit = annotation.Scale[1][1];\r\n\r\n  switch (unit) {\r\n    case 'ft-in':\r\n      return (annotation.getLineLength() * factor / 12);\r\n    case 'in':\r\n    default:\r\n      return (annotation.getLineLength() * factor);\r\n  }\r\n};\r\n\r\nconst numberRegex = /^\\d*(\\.\\d*)?$/;\r\nconst fractionRegex = /^\\d*(\\s\\d\\/\\d*)$/;\r\nconst pureFractionRegex = /^(\\d\\/\\d*)*$/;\r\n\r\nconst CalibrationModal = () => {\r\n  const [isOpen, isDisabled, units] = useSelector(\r\n    (state) => [\r\n      selectors.isElementOpen(state, DataElements.CALIBRATION_MODAL),\r\n      selectors.isElementDisabled(state, DataElements.CALIBRATION_MODAL),\r\n      selectors.getMeasurementUnits(state),\r\n    ],\r\n    shallowEqual\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [annotation, setAnnotation] = useState(null);\r\n  const [value, setValue] = useState('');\r\n  const [newDistance, setNewDistance] = useState(0);\r\n  const [unitTo, setUnitTo] = useState('');\r\n  const [showError, setShowError] = useState(false);\r\n  const [t] = useTranslation();\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    isOpen && inputRef?.current?.focus();\r\n    handleAnnotationsSelected(core.getSelectedAnnotations());\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    const onAnnotationSelected = (annotations, action) => {\r\n      if (action === 'selected') {\r\n        handleAnnotationsSelected(annotations);\r\n      } else if (action === 'deselected') {\r\n        setAnnotation(null);\r\n        setValue('');\r\n        setUnitTo('');\r\n        setNewDistance(0);\r\n      }\r\n    };\r\n\r\n    core.addEventListener('annotationSelected', onAnnotationSelected);\r\n\r\n    return () => core.removeEventListener('annotationSelected', onAnnotationSelected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const onAnnotationChanged = (annotations, action) => {\r\n      if (\r\n        action === 'modify' &&\r\n        annotations.length === 1 &&\r\n        annotations[0] === annotation\r\n      ) {\r\n        setValue(parseMeasurementContentsByAnnotation(annotation).toFixed(2));\r\n        setUnitTo(annotation.Scale[1][1]);\r\n      }\r\n    };\r\n\r\n    core.addEventListener('annotationChanged', onAnnotationChanged);\r\n    return () => core.removeEventListener('annotationChanged', onAnnotationChanged);\r\n  }, [annotation]);\r\n\r\n  const handleAnnotationsSelected = (annotations) => {\r\n    if (\r\n      annotations?.length === 1 &&\r\n      mapAnnotationToKey(annotations[0]) === 'distanceMeasurement'\r\n    ) {\r\n      const annot = annotations[0];\r\n      setAnnotation(annot);\r\n      const value = parseMeasurementContentsByAnnotation(annot).toFixed(2);\r\n      setValue(value);\r\n      setUnitTo(annot.Scale[1][1]);\r\n      // initial new distance should be the same as the value\r\n      // in case the user doesn't change the input value\r\n      setNewDistance(parseFloat(value));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setShowError(false);\r\n    setValue(e.target.value);\r\n  };\r\n  const validateInput = (e) => {\r\n    const inputValue = e.target.value.trim();\r\n    if (inputValue === '') {\r\n      setShowError(true);\r\n    }\r\n    if (numberRegex.test(inputValue)) {\r\n      const newDistance = parseFloat(inputValue);\r\n      if (newDistance !== 0) {\r\n        setNewDistance(parseFloat(inputValue));\r\n        setValue(inputValue);\r\n      } else {\r\n        setShowError(true);\r\n      }\r\n    } else if (fractionRegex.test(inputValue)) {\r\n      const [whole, fraction] = inputValue.split(' ');\r\n      if (Number.isFinite(evalFraction(fraction))) {\r\n        const number = Number(whole) + evalFraction(fraction);\r\n        setNewDistance(parseFloat(number));\r\n        setValue(number);\r\n      } else {\r\n        setShowError(true);\r\n      }\r\n    } else if (pureFractionRegex.test(inputValue)) {\r\n      if (Number.isFinite(evalFraction(inputValue))) {\r\n        const number = evalFraction(inputValue);\r\n        setNewDistance(parseFloat(number));\r\n        setValue(number);\r\n      } else {\r\n        setShowError(true);\r\n      }\r\n    } else {\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setUnitTo(e.target.value);\r\n  };\r\n  const handleApply = () => {\r\n    const newScale = getNewScale();\r\n    const accurateNewScale = handleLossOfPrecision(newScale);\r\n\r\n    core.setAnnotationStyles(annotation, {\r\n      Scale: accurateNewScale,\r\n    });\r\n\r\n    // this will also set the Scale for the other two measurement tools\r\n    setToolStyles(\r\n      'AnnotationCreateDistanceMeasurement',\r\n      'Scale',\r\n      accurateNewScale\r\n    );\r\n\r\n    dispatch(actions.closeElements([DataElements.CALIBRATION_MODAL]));\r\n  };\r\n\r\n  const handleLossOfPrecision = (scale) => {\r\n    // when the new distance that's entered in the modal is much bigger than the current distance, loss of precision can happen\r\n    // because internally WebViewer will do several multiplications and divisions to get the value to store in a measure dictionary\r\n    // in this case, setting 'Scale' again should fix this issue because this time the new distance and the current distance is very close, and we should get the accurate scale\r\n    annotation.Scale = scale;\r\n\r\n    return getNewScale();\r\n  };\r\n\r\n  const getNewScale = () => {\r\n    const currentDistance = parseMeasurementContentsByAnnotation(annotation);\r\n    const ratio = newDistance / currentDistance;\r\n\r\n    const currentScale = annotation.Scale;\r\n    const newScale = [\r\n      [currentScale[0][0], currentScale[0][1]],\r\n      [currentScale[1][0] * ratio, unitTo],\r\n    ];\r\n\r\n    return newScale;\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch(actions.closeElements([DataElements.CALIBRATION_MODAL]));\r\n  };\r\n  return isDisabled || !annotation ? null : (\r\n    <Swipeable\r\n      onSwipedUp={closeModal}\r\n      onSwipedDown={closeModal}\r\n      preventDefaultTouchmoveEvent\r\n    >\r\n      <div\r\n        className={classNames({\r\n          Modal: true,\r\n          CalibrationModal: true,\r\n          open: isOpen,\r\n          closed: !isOpen,\r\n        })}\r\n        onMouseDown={closeModal}\r\n      > <div className=\"container\" onMouseDown={(e) => e.stopPropagation()}>\r\n          <div className=\"swipe-indicator\" />\r\n          <div className=\"calibration__header\">\r\n            {t('component.calibration')}\r\n          </div>\r\n          <div className=\"calibration__body\">\r\n            <div>{t('message.enterMeasurement')}</div>\r\n            <div className=\"calibration__input\">\r\n              <input\r\n                className={showError ? 'error' : ''}\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                onBlur={validateInput}\r\n              />\r\n              <select\r\n                className=\"unitToInput\"\r\n                value={unitTo}\r\n                onChange={handleSelectChange}\r\n              >\r\n                {units.to.map((unit) => (\r\n                  <option key={unit} value={unit}>\r\n                    {unit}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            {showError ? <div className=\"errorMeasurement\">{t('message.errorEnterMeasurement')}</div> : null}\r\n          </div>\r\n          <div className=\"calibration__footer\">\r\n            <Button\r\n              dataElement=\"passwordSubmitButton\"\r\n              label={t('action.apply')}\r\n              onClick={handleApply}\r\n              disabled={showError}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Swipeable>\r\n  );\r\n};\r\n\r\nexport default CalibrationModal;\r\n","import CalibrationModal from './CalibrationModal';\r\n\r\nexport default CalibrationModal;"],"sourceRoot":""}