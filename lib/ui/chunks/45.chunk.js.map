{"version":3,"sources":["webpack:///./src/ui/src/components/ScaleOverlay/ScaleOverlay.scss?5805","webpack:///./src/ui/src/components/ScaleOverlay/ScaleOverlay.scss","webpack:///./src/ui/src/components/ScaleOverlay/ScaleSelector.js","webpack:///./src/ui/src/components/ScaleOverlay/ScaleHeader.js","webpack:///./src/ui/src/constants/measurementTypes.js","webpack:///./src/ui/src/helpers/getNumberOfDecimalPlaces.js","webpack:///./src/ui/src/helpers/getAngleInRadians.js","webpack:///./src/ui/src/components/MeasurementOverlay/LineMeasurementInput.js","webpack:///./src/ui/src/helpers/getFormattedUnit.js","webpack:///./src/ui/src/components/MeasurementOverlay/EllipseMeasurementOverlay.js","webpack:///./src/ui/src/components/ScaleOverlay/MeasurementDetail.js","webpack:///./src/ui/src/components/ScaleOverlay/CalibrationOverlay.js","webpack:///./src/ui/src/components/ScaleOverlay/ScaleOverlay.js","webpack:///./src/ui/src/components/ScaleOverlay/ScaleOverlayContainer.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","propTypes","scales","PropTypes","arrayOf","object","isRequired","selectedScales","string","onScaleSelected","func","onAddingNewScale","Scale","window","Core","ScaleSelector","t","useTranslation","dispatch","useDispatch","isMultipleScalesMode","useSelector","state","selectors","getIsMultipleScalesMode","isMultipleScales","openScaleDeletionModal","scale","deleteScale","scaleInfo","core","getScales","measurements","relatedPages","Set","toString","measurementItem","Annotations","Annotation","add","measurementsNum","pages","getScaleInfo","warning","message","join","title","confirmBtnText","onConfirm","actions","showWarningMessage","renderScale","precision","getScalePrecision","pageScaleStr","getFormattedValue","pageScale","value","unit","worldScaleStr","worldScale","scaleDisplay","selectedScale","useState","isDropDownOpen","setOpenDropDown","selectorRef","useRef","useOnClickOutside","DataElementWrapper","className","dataElement","tabIndex","onClick","prevValue","ref","Icon","glyph","classNames","map","key","onMouseDown","e","preventDefault","stopPropagation","disabled","includes","ScaleHeader","data-element","measurementTypeTranslationMap","distanceMeasurement","perimeterMeasurement","areaMeasurement","rectangularAreaMeasurement","cloudyRectangularAreaMeasurement","ellipseMeasurement","arcMeasurement","split","pt1","pt2","pt3","angle","AB","Math","sqrt","pow","x","y","BC","AC","acos","atan2","abs","PI","unitMap","LineMeasurementInput","annotation","isOpen","bool","selectedTool","isReadOnly","isDocumentReadOnly","factor","Measure","axis","DisplayUnits","getLineLength","toFixed","setLength","toggleDistanceInput","setDistanceInputToggle","toggleAngleInput","setAngleToggle","useEffect","onAnnotationChanged","setAngle","computeAngle","addEventListener","removeEventListener","onInputChanged","event","target","validateLineLength","finishAnnotation","getTool","finish","selectAnnotation","getAnnotationManager","deselectAnnotation","Precision","ensureLineIsWithinBounds","useCallback","lengthInPts","value1","value2","maxLengthInPts","getMaxLineLengthInPts","setLineLength","min","forceLineRedraw","getAnnotationUnit","annotUnit","annotationManager","drawAnnotations","PageNumber","trigger","maxX","maxY","currentPageNumber","getCurrentPage","documentWidth","getPageWidth","documentHeight","getPageHeight","angleInDegrees","getAngle","startPoint","getStartPoint","startX","startY","maxLenX","cos","maxLenY","sin","onAngleChange","angleInRadians","start","Start","endX","endY","setEndPoint","adjustRect","setLineAngle","type","autoFocus","isMobileDevice","onChange","onBlur","onKeyDown","getContents","max","getAngleInRadians","End","deltaX","deltaY","renderDeltas","props","propName","componentName","checkPropTypes","shape","number","Error","defaults","EllipseMeasurementOverlay","data","getFormattedUnit","area","refreshRadius","setRadius","computeRadius","onAnnotationDeselected","annotations","action","ensureDiameterIsWithinBounds","getWidth","decimalPlaces","getNumberOfDecimalPlaces","Width","onChangeRadiusLength","radius","diameterInPts","rect","getRect","newRect","x1","y1","x2","y2","setHeight","setWidth","resize","forceEllipseRedraw","redrawAnnotation","getMaxDiameterInPts","boundingRect","width","height","Height","precisionFractions","validateDiameter","MeasurementDetail","icon","color","translationKey","useMemo","mapAnnotationToKey","mapToolNameToKey","name","getDataWithKey","Color","toHexString","StrokeColor","contents","keyDisplayNameMap","renderValue","Length","Radius","getIPathAnnotationPts","path","getPath","pts","filter","pt","Angle","undefined","renderAngle","renderDetails","CalibrationOverlayPropTypes","tempScale","onCancelCalibrationMode","onApplyCalibration","CalibrationOverlay","isCalibrationPopupOpen","isElementOpen","canApplyCalibration","updateIsCalibration","enableOrDisableToolElements","ScaleOverlay","getCalibrationInfo","getActiveToolName","shallowEqual","isCalibration","previousToolName","isFractionalUnit","activeToolName","setScales","shouldShowMeasurementDetail","Object","keys","onScaleUpdated","newScales","updateScales","onCreateAnnotationWithNoScale","has","totalScales","memo","measurementDataElements","ScaleOverlayContainer","offset","bounds","isElementDisabled","DataElements","SCALE_OVERLAY_CONTAINER","isDisabled","position","setPosition","getDocumentContainerWidth","getDocumentContainerHeight","documentContainerWidth","documentContainerHeight","containerRef","documentElement","getViewerElement","style","left","top","offsetTop","current","offsetLeft","offsetWidth","getBoundingClientRect","syncDraggablePosition","updateCalibrationInfo","setCustomElementOverrides","openScaleModal","setSelectedScale","openElements","SCALE_MODAL","setIsAddingNewScale","newScale","applyTo","scaleToDelete","getDocumentViewer","getMeasurementManager","getOldScalesToDeleteAfterApplying","createAndApplyScale","confirmScaleToDelete","setToolMode","setIsElementHidden","deleteAnnotations","bottom","right","onDrag","onStop","cancel","Overlay","open","closed"],"mappings":"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","file":"chunks/45.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./ScaleOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                if (webComponents.length > 0) {\r\n                  const clonedStyleTags = [];\r\n                  for (let i = 0; i < webComponents.length; i++) {\r\n                    const webComponent = webComponents[i];\r\n                    if (i === 0) {\r\n                      webComponent.shadowRoot.appendChild(styleTag);\r\n                      styleTag.onload = function () {\r\n                        if (clonedStyleTags.length > 0) {\r\n                          clonedStyleTags.forEach((styleNode) => {\r\n                            // eslint-disable-next-line no-unsanitized/property\r\n                            styleNode.innerHTML = styleTag.innerHTML;\r\n                          });\r\n                        }\r\n                      };\r\n                    } else {\r\n                      const styleNode = styleTag.cloneNode(true);\r\n                      webComponent.shadowRoot.appendChild(styleNode);\r\n                      clonedStyleTags.push(styleNode);\r\n                    }\r\n                  }\r\n                } else {\r\n                  document.head.appendChild(styleTag);\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ScaleOverlay{position:absolute;z-index:95;border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background)}.open.ScaleOverlay{visibility:visible}.closed.ScaleOverlay{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ScaleOverlay{flex-direction:column;font-size:.81rem;padding:.375rem .375rem .375rem 1rem}.ScaleOverlay .divider{width:calc(100% + 1.375rem);height:1px;margin-left:-1rem;background:#cfd4da;margin-top:12px}.ScaleOverlay .scale-overlay-header{position:relative;display:flex;flex-direction:row;justify-content:left;font-weight:400;align-items:center;padding-right:.75rem}.ScaleOverlay .scale-overlay-header .scale-overlay-title{margin-left:.8rem;color:var(--text-color);font-weight:700;line-height:1rem}.ScaleOverlay .scale-overlay-header .add-new-scale{margin-left:1.3rem;min-height:2rem;background-color:transparent;color:#3183c8;font-weight:400;font-size:.8rem;line-height:1rem;border-radius:.3rem;border:1px solid #3183c8;cursor:pointer!important}.ScaleOverlay .scale-overlay-header .scale-overlay-icon{width:1rem;height:1.3rem}.ScaleOverlay .scale-overlay-header .scale-overlay-selector{margin-left:1.3rem;position:relative}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-selection{height:2rem;min-width:9rem;position:relative;background-color:transparent;border:1px solid var(--border);border-radius:.3rem;line-height:2rem;padding:0 32px 0 .5rem;color:var(--text-color);font-weight:400;font-size:.8rem;text-align:left;text-overflow:ellipsis;white-space:nowrap}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-arrow{position:absolute;top:50%;right:8px;transform:translateY(-50%);display:flex;justify-content:center;width:16px;height:16px;padding:2px;color:var(--text-color)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector ul{margin:0;list-style-type:none;position:absolute;min-width:10rem;left:0;top:0;text-align:left;letter-spacing:0;display:none;border-radius:4px;pointer-events:all;z-index:1000;background-color:var(--component-background);box-shadow:0 0 4px #868e96;padding-left:0}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li{display:block;line-height:2rem;height:2rem;position:relative;font-weight:400;font-size:.8rem;padding-left:.5rem;padding-right:32px;max-width:100%}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li :hover{cursor:pointer}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:not(:last-child):not(:first-child) .options:hover{background-color:var(--scale-overlay-item-hover)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:last-child{padding-top:.5rem;padding-bottom:.5rem;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:last-child :hover{cursor:default}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .option-selected{color:#3183c8}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .delete{position:absolute;top:50%;right:8px;width:16px;height:16px;transform:translateY(-50%);border:none;background-color:transparent;padding:0;border-radius:2px;display:flex;align-items:center;justify-content:center}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .delete .Icon{width:11px;height:11px;display:flex}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .delete:hover{background-color:var(--scale-overlay-item-hover)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .delete:disabled{background-color:transparent;cursor:not-allowed}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .add-new-scale{margin-left:0;width:100%}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .add-new-scale :hover{cursor:pointer}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .options{border:none;background-color:transparent;padding:0;text-align:left;display:flex;align-items:center;justify-content:space-between;height:100%;z-index:1}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-value{margin-right:1px}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-list{display:block;pointer-events:all;transform:translateY(0)}.ScaleOverlay .scale-overlay-content{width:192px;min-height:32px;font-weight:400;font-size:13px;line-height:16px;margin-top:16px}.ScaleOverlay .scale-overlay-calibrate{padding-top:20px}.ScaleOverlay .scale-overlay-footer{display:flex;flex-direction:row;justify-content:space-between;width:220px;height:49px;align-items:center}.ScaleOverlay .scale-overlay-footer .calibration-cancel{padding:0;background-color:transparent;color:var(--secondary-button-text);display:flex;align-items:center;justify-content:center;cursor:pointer;border:none;font-size:13px}:host(:not([data-tabbing=true])) .ScaleOverlay .scale-overlay-footer .calibration-cancel,html:not([data-tabbing=true]) .ScaleOverlay .scale-overlay-footer .calibration-cancel{outline:none}.ScaleOverlay .scale-overlay-footer .calibration-cancel:enabled:hover{color:var(--secondary-button-hover)}.ScaleOverlay .scale-overlay-footer .calibration-cancel:disabled{opacity:.5}.ScaleOverlay .scale-overlay-footer .calibration-apply{border:none;background-color:transparent;background:var(--primary-button);border-radius:4px;padding:0 8px;height:32px;width:72px;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}:host(:not([data-tabbing=true])) .ScaleOverlay .scale-overlay-footer .calibration-apply,html:not([data-tabbing=true]) .ScaleOverlay .scale-overlay-footer .calibration-apply{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleOverlay .scale-overlay-footer .calibration-apply{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleOverlay .scale-overlay-footer .calibration-apply{font-size:13px}}.ScaleOverlay .scale-overlay-footer .calibration-apply:enabled:hover{background:var(--primary-button-hover)}.ScaleOverlay .scale-overlay-footer .calibration-apply:disabled{opacity:.5}.ScaleOverlay .MeasurementDetail{word-wrap:break-word;flex-wrap:wrap;font-weight:400;font-size:.81rem;line-height:1rem;margin-bottom:1rem}.ScaleOverlay .MeasurementDetail .header{display:flex;justify-content:left;align-items:center;width:100%;margin-top:.75rem;margin-bottom:.75rem;font-weight:700;font-size:.81rem}.ScaleOverlay .MeasurementDetail .header .icon{width:1.5rem;height:1.5rem;margin-right:.67rem}.ScaleOverlay .MeasurementDetail .scale-input{width:45px}.ScaleOverlay .MeasurementDetail .measurement__detail-container{margin-left:2.17rem}.ScaleOverlay .MeasurementDetail .measurement__detail-container .measurement__detail-item{display:flex;height:1.5rem;align-items:center}.ScaleOverlay .MeasurementDetail .distance_input{display:flex;margin-top:.5rem}.ScaleOverlay .MeasurementDetail .distance_input .distance-show{margin-right:.5rem}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleOverlay .MeasurementDetail .distance_input .distance-show{width:79px;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleOverlay .MeasurementDetail .distance_input .distance-show{width:79px;height:32px}}.ScaleOverlay .MeasurementDetail .angle_input,.ScaleOverlay .MeasurementDetail .measurement__deltas--X,.ScaleOverlay .MeasurementDetail .measurement__deltas--Y{display:flex;margin-top:.5rem}.ScaleOverlay .MeasurementDetail .measurement_list{width:5rem;margin-right:.5rem}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import classNames from 'classnames';\r\nimport Icon from 'components/Icon';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport actions from 'actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport core from 'core';\r\nimport useOnClickOutside from 'hooks/useOnClickOutside';\r\n\r\nconst propTypes = {\r\n  scales: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedScales: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onScaleSelected: PropTypes.func.isRequired,\r\n  onAddingNewScale: PropTypes.func.isRequired\r\n};\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst ScaleSelector = ({ scales = [], selectedScales = [], onScaleSelected, onAddingNewScale }) => {\r\n  const [t] = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const isMultipleScalesMode = useSelector((state) => selectors.getIsMultipleScalesMode(state));\r\n\r\n  const isMultipleScales = selectedScales.length > 1;\r\n\r\n  const getScaleInfo = (deleteScale) => {\r\n    const scales = core.getScales();\r\n    const measurements = [];\r\n    const relatedPages = new Set();\r\n    scales[deleteScale.toString()].forEach((measurementItem) => {\r\n      if (measurementItem instanceof window.Core.Annotations.Annotation) {\r\n        relatedPages.add(measurementItem['PageNumber']);\r\n        measurements.push(measurementItem);\r\n      }\r\n    });\r\n    return {\r\n      measurementsNum: measurements.length,\r\n      pages: [...relatedPages]\r\n    };\r\n  };\r\n\r\n  const openScaleDeletionModal = (scale) => {\r\n    if (!scale) {\r\n      return;\r\n    }\r\n    const deleteScale = new Scale(scale);\r\n    const scaleInfo = getScaleInfo(deleteScale);\r\n    const hasAssociatedMeasurements = !!scaleInfo.pages.length;\r\n    const message = hasAssociatedMeasurements ? (\r\n      <div>\r\n        <p>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.scaleIsOn-delete-info')}\r\n            <b>{` ${t('option.measurement.deleteScaleModal.page-delete-info')} ${scaleInfo.pages.join(', ')} `}</b>\r\n            {t('option.measurement.deleteScaleModal.appliedTo-delete-info')}\r\n            <b>{` ${scaleInfo.measurementsNum} ${scaleInfo.measurementsNum > 1 ? t('option.measurement.deleteScaleModal.measurements') : t('option.measurement.deleteScaleModal.measurement')}.`}</b>\r\n          </span>\r\n          <span> </span>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.deletionIs')}\r\n            <b>{` ${t('option.measurement.deleteScaleModal.irreversible')} `}</b>\r\n            {t('option.measurement.deleteScaleModal.willDeleteMeasurement')}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          {t('option.measurement.deleteScaleModal.confirmDelete')}\r\n        </p>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <p>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.deletionIs')}\r\n            <b>{` ${t('option.measurement.deleteScaleModal.irreversible')}. `}</b>\r\n            {t('option.measurement.deleteScaleModal.confirmDelete')}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n    const title = `${t('option.measurement.deleteScaleModal.deleteScale')} ${deleteScale.toString()}`;\r\n    const confirmBtnText = t('action.confirm');\r\n\r\n    const warning = {\r\n      message,\r\n      title,\r\n      confirmBtnText,\r\n      onConfirm: () => core.deleteScale(deleteScale)\r\n    };\r\n    dispatch(actions.showWarningMessage(warning));\r\n  };\r\n\r\n  const renderScale = (scale) => {\r\n    const precision = core.getScalePrecision(scale);\r\n    const pageScaleStr = Scale.getFormattedValue(scale.pageScale.value, scale.pageScale.unit, precision, false);\r\n    const worldScaleStr = Scale.getFormattedValue(scale.worldScale.value, scale.worldScale.unit, precision, false);\r\n    const scaleDisplay = `${pageScaleStr} = ${worldScaleStr}`;\r\n\r\n    return <div><span>{scaleDisplay}</span></div>;\r\n  };\r\n\r\n  let title = t('option.measurement.scaleOverlay.multipleScales');\r\n\r\n  if (selectedScales.length && !isMultipleScales) {\r\n    const selectedScale = new Scale(selectedScales[0]);\r\n    title = renderScale(selectedScale);\r\n  }\r\n\r\n  // TODO: This is a bandaid solution to fix a Safari bug. This dropdown should be refactored to use a react-select component\r\n  // instead of hiding and displaying based on focus pseudoclasses,\r\n  // otherwise it is hard to debug as the open/close logic is in a CSS stylesheet and not super evident\r\n  const [isDropDownOpen, setOpenDropDown] = useState(false);\r\n  const toggleDropdown = () => {\r\n    setOpenDropDown((prevValue) => !prevValue);\r\n  };\r\n\r\n  const selectorRef = useRef(null);\r\n\r\n  useOnClickOutside(selectorRef, () => {\r\n    setOpenDropDown(false);\r\n  });\r\n\r\n  return (\r\n    <DataElementWrapper\r\n      className=\"scale-overlay-selector\"\r\n      dataElement=\"scaleSelector\"\r\n      tabIndex={0}\r\n      onClick={toggleDropdown}\r\n      ref={selectorRef}\r\n    >\r\n      <button className=\"scale-overlay-selection\">\r\n        {title}\r\n        <Icon className=\"scale-overlay-arrow\" glyph=\"icon-chevron-down\" />\r\n      </button>\r\n      {isDropDownOpen && (\r\n        <ul className={classNames('scale-overlay-list')} >\r\n          <li>\r\n            <div>{title}</div>\r\n            <Icon className=\"scale-overlay-arrow\" glyph=\"icon-chevron-up\" />\r\n          </li>\r\n          {scales.map((value) => (\r\n            <li key={value.toString()}>\r\n              <button\r\n                className=\"delete\"\r\n                onMouseDown={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  openScaleDeletionModal(value.toString());\r\n                }}\r\n                disabled={scales.length <= 1}\r\n              >\r\n                <Icon glyph=\"icon-delete-line\" />\r\n              </button>\r\n              <button\r\n                className={classNames({\r\n                  options: true,\r\n                  'option-selected': selectedScales.includes(value.toString()),\r\n                })}\r\n                onMouseDown={() => onScaleSelected(selectedScales, value.toString())}\r\n              >\r\n                {renderScale(value)}\r\n              </button>\r\n            </li>\r\n          ))}\r\n          {isMultipleScalesMode && (\r\n            <li>\r\n              <button onMouseDown={onAddingNewScale} className=\"add-new-scale\">\r\n                {t('option.measurement.scaleOverlay.addNewScale')}\r\n              </button>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </DataElementWrapper>\r\n  );\r\n};\r\n\r\nScaleSelector.propTypes = propTypes;\r\n\r\nexport default ScaleSelector;\r\n","import React from 'react';\r\nimport Icon from 'components/Icon';\r\nimport ScaleSelector from './ScaleSelector';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst propTypes = {\r\n  scales: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedScales: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onScaleSelected: PropTypes.func.isRequired,\r\n  onAddingNewScale: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ScaleHeader = ({ scales, selectedScales, onScaleSelected, onAddingNewScale }) => {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <div className=\"scale-overlay-header\">\r\n      <Icon glyph=\"ic-calibrate\" className=\"scale-overlay-icon\" />\r\n      <div className=\"scale-overlay-title\">{t('option.measurementOption.scale')}</div>\r\n      {scales.length ? (\r\n        <ScaleSelector\r\n          scales={scales}\r\n          selectedScales={selectedScales}\r\n          onScaleSelected={onScaleSelected}\r\n          onAddingNewScale={onAddingNewScale}\r\n        />\r\n      ) : (\r\n        <button className=\"add-new-scale\" onClick={onAddingNewScale} data-element=\"addNewScale\">{t('option.measurement.scaleOverlay.addNewScale')}</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nScaleHeader.propTypes = propTypes;\r\nexport default ScaleHeader;\r\n","export const measurementTypeTranslationMap = {\r\n  distanceMeasurement: 'option.measurementOverlay.distanceMeasurement',\r\n  perimeterMeasurement: 'option.measurementOverlay.perimeterMeasurement',\r\n  areaMeasurement: 'option.measurementOverlay.areaMeasurement',\r\n  rectangularAreaMeasurement: 'option.measurementOverlay.areaMeasurement',\r\n  cloudyRectangularAreaMeasurement: 'option.measurementOverlay.areaMeasurement',\r\n  ellipseMeasurement: 'option.measurementOverlay.areaMeasurement',\r\n  arcMeasurement: 'option.measurementOverlay.arcMeasurement',\r\n};","export default (precision) => (precision === 1 ? 0 : precision?.toString().split('.')[1].length);\r\n","export default (pt1, pt2, pt3) => {\r\n  let angle;\r\n\r\n  if (pt1 && pt2) {\r\n    if (pt3) {\r\n      // calculate the angle using Law of cosines\r\n      const AB = Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n      const BC = Math.sqrt(Math.pow(pt2.x - pt3.x, 2) + Math.pow(pt2.y - pt3.y, 2));\r\n      const AC = Math.sqrt(Math.pow(pt3.x - pt1.x, 2) + Math.pow(pt3.y - pt1.y, 2));\r\n      angle = Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB));\r\n    } else {\r\n      // if there are only two points returns the angle in the plane (in radians) between the positive x-axis and the ray from (0,0) to the point (x,y)\r\n      angle = Math.atan2(pt2.y - pt1.y, pt2.x - pt1.x);\r\n      // keep the angle range between 0 and Math.PI / 2\r\n      angle = Math.abs(angle);\r\n      angle = angle > Math.PI / 2 ? Math.PI - angle : angle;\r\n    }\r\n  }\r\n\r\n  return angle;\r\n};\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport core from 'core';\r\nimport { isMobileDevice } from 'helpers/device';\r\nimport selectors from 'selectors';\r\nimport getAngleInRadians from 'helpers/getAngleInRadians';\r\n\r\nconst unitMap = {\r\n  'in\\\"': 'in',\r\n  'ft\\'': 'ft'\r\n};\r\n\r\nLineMeasurementInput.propTypes = {\r\n  annotation: PropTypes.object,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  selectedTool: PropTypes.object,\r\n};\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nfunction LineMeasurementInput({ annotation, isOpen, selectedTool }) {\r\n  const [t] = useTranslation();\r\n  const isReadOnly = useSelector((state) => selectors.isDocumentReadOnly(state));\r\n  const factor = annotation?.Measure.axis[0].factor;\r\n  const unit = annotation?.DisplayUnits[0] || selectedTool?.Measure?.unit;\r\n  const [length, setLength] = useState((annotation?.getLineLength() * factor || 0).toFixed(2));\r\n  const [toggleDistanceInput, setDistanceInputToggle] = useState(false);\r\n  const [toggleAngleInput, setAngleToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!annotation) {\r\n      setAngle(computeAngle());\r\n      return;\r\n    }\r\n    const onAnnotationChanged = () => {\r\n      setLength((annotation.getLineLength() * factor).toFixed(2));\r\n      setAngle(computeAngle());\r\n    };\r\n    core.addEventListener('mouseMove', onAnnotationChanged);\r\n\r\n    return () => {\r\n      core.removeEventListener('mouseMove', onAnnotationChanged);\r\n    };\r\n  }, [annotation, computeAngle, factor, selectedTool]);\r\n\r\n  const onInputChanged = (event) => {\r\n    setLength(event.target.value);\r\n    validateLineLength(event);\r\n    finishAnnotation();\r\n  };\r\n\r\n  const finishAnnotation = () => {\r\n    const tool = core.getTool('AnnotationCreateDistanceMeasurement');\r\n    tool.finish();\r\n  };\r\n\r\n  const selectAnnotation = () => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.selectAnnotation(annotation);\r\n  };\r\n\r\n  const deselectAnnotation = () => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.deselectAnnotation(annotation);\r\n  };\r\n\r\n  const validateLineLength = (event) => {\r\n    if (!annotation) {\r\n      return;\r\n    }\r\n    let length = Math.abs(event.target.value);\r\n    if (length < annotation.Precision) {\r\n      length = annotation.Precision;\r\n      setLength(length);\r\n    }\r\n    const factor = annotation.Measure.axis[0].factor;\r\n    const lengthInPts = length / factor;\r\n    ensureLineIsWithinBounds(lengthInPts);\r\n  };\r\n\r\n  const isApproximatelyEqual = (value1, value2) => {\r\n    return Math.abs(value1 - value2) < 0.1;\r\n  };\r\n\r\n  const ensureLineIsWithinBounds = useCallback(\r\n    (lengthInPts) => {\r\n      if (!isApproximatelyEqual(annotation.getLineLength(), lengthInPts)) {\r\n        const maxLengthInPts = getMaxLineLengthInPts();\r\n        annotation.setLineLength(Math.min(maxLengthInPts, lengthInPts));\r\n        forceLineRedraw();\r\n      }\r\n    },\r\n    [annotation, forceLineRedraw, getMaxLineLengthInPts],\r\n  );\r\n\r\n  const getAnnotationUnit = (annotation) => {\r\n    let annotUnit;\r\n    if (annotation?.DisplayUnits?.length) {\r\n      if (annotation.DisplayUnits.length === 2 && annotation.DisplayUnits[0] === \"ft'\" && annotation.DisplayUnits[1] === 'in\"') {\r\n        annotUnit = 'in';\r\n      } else {\r\n        annotUnit = annotation.DisplayUnits[0];\r\n      }\r\n    }\r\n    return unitMap[annotUnit] || annotUnit || unitMap[unit] || unit;\r\n  };\r\n\r\n  const renderDeltas = () => {\r\n    const angle = (annotation && getAngleInRadians(annotation.Start, annotation.End)) || 0;\r\n    const unit = getAnnotationUnit(annotation);\r\n    const deltaX = Scale.getFormattedValue(annotation && Math.abs(length * Math.cos(angle)), unit, annotation?.Precision);\r\n    const deltaY = Scale.getFormattedValue(annotation && Math.abs(length * Math.sin(angle)), unit, annotation?.Precision);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">X:</div>\r\n          <div>\r\n            {deltaX}\r\n          </div>\r\n        </div>\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">Y:</div>\r\n          <div>\r\n            {deltaY}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const forceLineRedraw = useCallback(() => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.drawAnnotations(annotation.PageNumber);\r\n    annotationManager.trigger('annotationChanged', [[annotation], 'modify', {}]);\r\n  }, [annotation]);\r\n\r\n  const getMaxLineLengthInPts = useCallback(() => {\r\n    const currentPageNumber = core.getCurrentPage();\r\n    const documentWidth = core.getPageWidth(currentPageNumber);\r\n    const documentHeight = core.getPageHeight(currentPageNumber);\r\n    const angleInDegrees = annotation.getAngle() * (180 / Math.PI).toFixed(2);\r\n    const startPoint = annotation.getStartPoint();\r\n    const startX = startPoint.x;\r\n    const startY = startPoint.y;\r\n\r\n    let maxX;\r\n    let maxY;\r\n    if (Math.abs(angleInDegrees) < 90) {\r\n      maxX = documentWidth;\r\n    } else {\r\n      maxX = 0;\r\n    }\r\n\r\n    if (angleInDegrees > 0) {\r\n      maxY = documentHeight;\r\n    } else {\r\n      maxY = 0;\r\n    }\r\n\r\n    const maxLenX = Math.abs((maxX - startX) / Math.cos(annotation.getAngle()));\r\n    const maxLenY = Math.abs((maxY - startY) / Math.sin(annotation.getAngle()));\r\n\r\n    return Math.min(maxLenX, maxLenY);\r\n  }, [annotation]);\r\n\r\n  const setLineAngle = (event) => {\r\n    const angle = event.target.value;\r\n    const angleInRadians = angle * (Math.PI / 180) * -1;\r\n    const lengthInPts = annotation.getLineLength();\r\n    const start = annotation.Start;\r\n    const endX = Math.cos(angleInRadians) * lengthInPts + start.x;\r\n    const endY = Math.sin(angleInRadians) * lengthInPts + start.y;\r\n    annotation.setEndPoint(endX, endY);\r\n    annotation.adjustRect();\r\n    forceLineRedraw();\r\n  };\r\n\r\n  const onAngleChange = (event) => {\r\n    setAngle(event.target.value);\r\n    setLineAngle(event);\r\n    finishAnnotation();\r\n  };\r\n\r\n  const computeAngle = useCallback(() => {\r\n    if (!annotation) {\r\n      return 0;\r\n    }\r\n    let angleInRadians = annotation.getAngle();\r\n    // Multiply by -1 to achieve 0-360 degrees counterclockwise\r\n    angleInRadians *= -1;\r\n    angleInRadians = angleInRadians < 0 ? angleInRadians + 2 * Math.PI : angleInRadians;\r\n    return ((angleInRadians / Math.PI) * 180).toFixed(2);\r\n  }, [annotation]);\r\n\r\n  const [angle, setAngle] = useState(computeAngle());\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      ensureLineIsWithinBounds(annotation.getLineLength());\r\n    }\r\n  }, [annotation, ensureLineIsWithinBounds, isOpen]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">\r\n          {t('option.measurementOverlay.distance')}:\r\n        </div>\r\n        {(!annotation || !toggleDistanceInput) ? (\r\n          <div onClick={() => setDistanceInputToggle(true)} className=\"distance-show\">\r\n            {annotation?.getContents() || 0}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <input\r\n              className=\"scale-input\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              disabled={isReadOnly}\r\n              value={length}\r\n              autoFocus={!isMobileDevice}\r\n              onChange={(event) => {\r\n                onInputChanged(event);\r\n                selectAnnotation();\r\n              }}\r\n              onBlur={(event) => {\r\n                validateLineLength(event);\r\n                setDistanceInputToggle(false);\r\n              }}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  onInputChanged(event);\r\n                  deselectAnnotation();\r\n                }\r\n              }}\r\n            />\r\n            {unit}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div>\r\n        {(!annotation || !toggleAngleInput) ? (\r\n          <div onClick={() => setAngleToggle(true)} className=\"distance-show\">\r\n            {angle}&deg;\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <input\r\n              className=\"scale-input\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"360\"\r\n              disabled={isReadOnly}\r\n              value={angle}\r\n              autoFocus={!isMobileDevice}\r\n              onChange={(event) => {\r\n                onAngleChange(event);\r\n                selectAnnotation();\r\n              }}\r\n              onBlur={() => setAngleToggle(false)}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  onAngleChange(event);\r\n                  deselectAnnotation();\r\n                }\r\n              }}\r\n            />\r\n            &deg;\r\n          </>\r\n        )}\r\n      </div>\r\n      {renderDeltas()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineMeasurementInput;\r\n","export default (unit) => {\r\n  switch (unit) {\r\n    case 'ft\\'':\r\n      return 'ft';\r\n    case 'in\"':\r\n      return 'in';\r\n    case 'ft-in':\r\n      return 'ft';\r\n    default:\r\n      return unit;\r\n  }\r\n};\r\n","import core from 'core';\r\nimport getNumberOfDecimalPlaces from 'helpers/getNumberOfDecimalPlaces';\r\nimport { isMobileDevice } from 'src/helpers/device';\r\nimport { precisionFractions } from 'constants/measurementScale';\r\nimport PropTypes from 'prop-types';\r\nimport selectors from 'selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport getFormattedUnit from 'src/helpers/getFormattedUnit';\r\n\r\nconst propTypes = {\r\n  annotation: (props, propName, componentName) => {\r\n    if (!props.annotation && !props.selectedTool) {\r\n      return new Error(`One of props 'annotation' or 'selectedTool' was not specified in '${componentName}'.`);\r\n    }\r\n    if (props.annotation) {\r\n      PropTypes.checkPropTypes(\r\n        {\r\n          annotation: PropTypes.shape({\r\n            Precision: PropTypes.number,\r\n            DisplayUnits: PropTypes.arrayOf(PropTypes.string),\r\n            getContents: PropTypes.func,\r\n          }),\r\n        },\r\n        { annotation: props.annotation },\r\n        'prop',\r\n        'EllipseMeasurementOverlay',\r\n      );\r\n    }\r\n    return null;\r\n  },\r\n  selectedTool: (props, propName, componentName) => {\r\n    if (!props.annotation && !props.selectedTool) {\r\n      return new Error(`One of props 'annotation' or 'selectedTool' was not specified in '${componentName}'.`);\r\n    }\r\n    if (props.selectedTool) {\r\n      PropTypes.checkPropTypes(\r\n        {\r\n          selectedTool: PropTypes.shape({\r\n            defaults: PropTypes.shape({\r\n              Precision: PropTypes.number,\r\n            }),\r\n            Measure: PropTypes.shape({\r\n              unit: PropTypes.string,\r\n            }),\r\n          }),\r\n        },\r\n        { selectedTool: props.selectedTool },\r\n        'prop',\r\n        'EllipseMeasurementOverlay',\r\n      );\r\n    }\r\n    return null;\r\n  },\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction EllipseMeasurementOverlay({ annotation, isOpen, selectedTool }) {\r\n  const { t } = useTranslation();\r\n\r\n  const isReadOnly = useSelector((state) => selectors.isDocumentReadOnly(state));\r\n  const data = {\r\n    precision: !annotation ? selectedTool?.defaults?.Precision : annotation.Precision,\r\n    unit: getFormattedUnit((annotation?.Scale || selectedTool?.defaults?.Scale)[1][1]),\r\n    area: annotation?.getContents() || 0,\r\n  };\r\n\r\n  const refreshRadius = () => {\r\n    setRadius(computeRadius());\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshRadius();\r\n    core.addEventListener('mouseMove', refreshRadius);\r\n\r\n    return () => {\r\n      core.removeEventListener('mouseMove', refreshRadius);\r\n    };\r\n  }, [annotation]);\r\n\r\n  useEffect(() => {\r\n    const onAnnotationDeselected = (annotations, action) => {\r\n      if (action === 'deselected') {\r\n        const annotation = annotations[0];\r\n        ensureDiameterIsWithinBounds(annotation.getWidth(), annotation);\r\n      }\r\n    };\r\n\r\n    core.addEventListener('annotationSelected', onAnnotationDeselected);\r\n\r\n    return () => {\r\n      core.removeEventListener('annotationSelected', onAnnotationDeselected);\r\n    };\r\n  }, []);\r\n\r\n  const computeRadius = () => {\r\n    if (!annotation) {\r\n      return 0;\r\n    }\r\n    const decimalPlaces = annotation && getNumberOfDecimalPlaces(annotation.Precision) || 0;\r\n    const factor = annotation.Measure.axis[0].factor;\r\n    const radiusInPts = (annotation.Width / 2).toFixed(decimalPlaces);\r\n    return (radiusInPts * factor).toFixed(decimalPlaces);\r\n  };\r\n\r\n  const finishAnnotation = () => {\r\n    const tool = core.getTool('AnnotationCreateEllipseMeasurement');\r\n    tool.finish();\r\n  };\r\n\r\n  const selectAnnotation = () => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.selectAnnotation(annotation);\r\n  };\r\n\r\n  const deselectAnnot = () => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.deselectAnnotation(annotation);\r\n  };\r\n\r\n  const onChangeRadiusLength = (event) => {\r\n    const radius = Math.abs(event.target.value);\r\n    const factor = annotation.Measure.axis[0].factor;\r\n    const radiusInPts = radius / factor;\r\n    const diameterInPts = radiusInPts * 2;\r\n    const rect = annotation.getRect();\r\n    let { X1, X2, Y1, Y2 } = 0;\r\n    X1 = rect['x1'];\r\n    Y1 = rect['y1'];\r\n    X2 = rect['x1'] + diameterInPts;\r\n    Y2 = rect['y1'] + diameterInPts;\r\n    const newRect = { x1: X1, y1: Y1, x2: X2, y2: Y2 };\r\n\r\n    annotation.setHeight(diameterInPts);\r\n    annotation.setWidth(diameterInPts);\r\n    annotation.resize(newRect);\r\n    setRadius(radius);\r\n    forceEllipseRedraw(annotation);\r\n    finishAnnotation();\r\n  };\r\n\r\n  const forceEllipseRedraw = (annotation) => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.redrawAnnotation(annotation);\r\n    annotationManager.trigger('annotationChanged', [[annotation], 'modify', []]);\r\n  };\r\n\r\n  const getMaxDiameterInPts = useCallback((annotation) => {\r\n    const currentPageNumber = core.getCurrentPage();\r\n    const documentWidth = core.getPageWidth(currentPageNumber);\r\n    const documentHeight = core.getPageHeight(currentPageNumber);\r\n    const startX = annotation['X'];\r\n    const startY = annotation['Y'];\r\n\r\n    const maxX = documentWidth - startX;\r\n    const maxY = documentHeight - startY;\r\n\r\n    return Math.min(maxX, maxY);\r\n  });\r\n\r\n  const validateDiameter = (event) => {\r\n    const radius = Math.abs(event.target.value);\r\n    const factor = annotation.Measure.axis[0].factor;\r\n    const radiusInPts = radius / factor;\r\n    const diameterInPts = radiusInPts * 2;\r\n    ensureDiameterIsWithinBounds(diameterInPts, annotation);\r\n    refreshRadius();\r\n  };\r\n\r\n  const ensureDiameterIsWithinBounds = useCallback((diameterInPts, annotation) => {\r\n    const maxDiameterInPts = getMaxDiameterInPts(annotation);\r\n\r\n    if (diameterInPts > maxDiameterInPts) {\r\n      const boundingRect = annotation.getRect();\r\n      const { x1, x2, y1, y2 } = boundingRect;\r\n      let width = annotation.Width;\r\n      let height = annotation.Height;\r\n      const currentPageNumber = core.getCurrentPage();\r\n      const documentWidth = core.getPageWidth(currentPageNumber);\r\n      const documentHeight = core.getPageHeight(currentPageNumber);\r\n\r\n      if (x2 > documentWidth) {\r\n        boundingRect['x2'] = documentWidth;\r\n        width = documentWidth - x1;\r\n      }\r\n      if (y2 > documentHeight) {\r\n        boundingRect['y2'] = documentHeight;\r\n        height = documentHeight - y1;\r\n      }\r\n\r\n      if (width < documentWidth) {\r\n        annotation.setWidth(width);\r\n      } else {\r\n        annotation.setWidth(documentWidth);\r\n      }\r\n      if (height < documentHeight) {\r\n        annotation.setHeight(height);\r\n      } else {\r\n        annotation.setHeight(documentHeight);\r\n      }\r\n      annotation.resize(boundingRect);\r\n      forceEllipseRedraw(annotation);\r\n    }\r\n  }, [getMaxDiameterInPts]);\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      ensureDiameterIsWithinBounds(annotation.getWidth(), annotation);\r\n    }\r\n  }, [annotation, ensureDiameterIsWithinBounds, isOpen]);\r\n\r\n  const [radius, setRadius] = useState(computeRadius());\r\n\r\n  return (\r\n    <div className=\"measurement__detail-container\">\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.shared.precision')}:</div>\r\n        {precisionFractions[data.precision] || data.precision}\r\n      </div>\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.area')}:</div>\r\n        <div className=\"distance-show\">{data.area}</div>\r\n      </div>\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.radius')}:</div>\r\n        {annotation ? (\r\n          <>\r\n            <input\r\n              autoFocus={!isMobileDevice}\r\n              className=\"scale-input\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              disabled={isReadOnly}\r\n              value={radius}\r\n              onChange={(event) => {\r\n                onChangeRadiusLength(event);\r\n                selectAnnotation();\r\n              }}\r\n              onBlur={(event) => validateDiameter(event)}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  onChangeRadiusLength(event);\r\n                  deselectAnnot();\r\n                }\r\n              }}\r\n            />\r\n            {data.unit}\r\n          </>\r\n        ) : (\r\n          <div>0</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEllipseMeasurementOverlay.propTypes = propTypes;\r\n\r\nexport default EllipseMeasurementOverlay;\r\n","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { mapAnnotationToKey, mapToolNameToKey, getDataWithKey } from 'constants/map';\r\nimport { measurementTypeTranslationMap } from 'constants/measurementTypes';\r\nimport { precisionFractions } from 'constants/measurementScale';\r\nimport getNumberOfDecimalPlaces from 'helpers/getNumberOfDecimalPlaces';\r\nimport Icon from 'components/Icon';\r\nimport LineMeasurementInput from 'components/MeasurementOverlay/LineMeasurementInput';\r\nimport EllipseMeasurementOverlay from 'components/MeasurementOverlay/EllipseMeasurementOverlay';\r\nimport getAngleInRadians from 'helpers/getAngleInRadians';\r\n\r\nimport './ScaleOverlay.scss';\r\n\r\nconst propTypes = {\r\n  annotation: PropTypes.object,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  selectedTool: PropTypes.object,\r\n};\r\n\r\nconst MeasurementDetail = ({ annotation, isOpen, selectedTool }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const data = useMemo(() => {\r\n    const key = annotation ? mapAnnotationToKey(annotation) : mapToolNameToKey(selectedTool.name);\r\n    return {\r\n      key,\r\n      icon: getDataWithKey(key).icon,\r\n      color: annotation ? annotation.Color.toHexString() : selectedTool?.defaults?.StrokeColor?.toHexString(),\r\n      contents: annotation ? annotation.getContents() : 0,\r\n      precision: !annotation ? selectedTool?.defaults?.Precision : annotation.Precision,\r\n    };\r\n  });\r\n\r\n  const renderTitle = () => {\r\n    const { key, icon, color } = data;\r\n    const translationKey = measurementTypeTranslationMap[key];\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <Icon glyph={icon} color={color} className=\"icon\" />\r\n        <div>{t(translationKey)}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderValue = () => {\r\n    const { key, contents } = data;\r\n\r\n    const keyDisplayNameMap = {\r\n      distanceMeasurement: t('option.measurementOverlay.distance'),\r\n      perimeterMeasurement: t('option.measurementOverlay.perimeter'),\r\n      areaMeasurement: t('option.measurementOverlay.area'),\r\n      rectangularAreaMeasurement: t('option.measurementOverlay.area'),\r\n      cloudyRectangularAreaMeasurement: t('option.measurementOverlay.area'),\r\n    };\r\n\r\n    return (\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{keyDisplayNameMap[key]}:</div>\r\n        {contents}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderAngle = () => {\r\n    if (!annotation) {\r\n      return (\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div> 0&deg;\r\n        </div>\r\n      );\r\n    }\r\n    const { key } = data;\r\n    const getIPathAnnotationPts = (annotation) => {\r\n      const path = annotation.getPath();\r\n      const length = path.length;\r\n      return [path[length - 3], path[length - 2], path[length - 1]];\r\n    };\r\n    const keyPtMap = {\r\n      distanceMeasurement: ({ Start, End }) => [Start, End],\r\n      perimeterMeasurement: getIPathAnnotationPts,\r\n      areaMeasurement: getIPathAnnotationPts,\r\n      rectangularAreaMeasurement: getIPathAnnotationPts,\r\n      cloudyRectangularAreaMeasurement: getIPathAnnotationPts,\r\n      arcMeasurement: getIPathAnnotationPts,\r\n    };\r\n    const pts = keyPtMap[key](annotation).filter((pt) => !!pt);\r\n\r\n    let angle = getAngleInRadians(...pts);\r\n    if (angle) {\r\n      const decimalPlaces = getNumberOfDecimalPlaces(annotation.Precision);\r\n      angle = ((angle / Math.PI) * 180).toFixed(decimalPlaces);\r\n    }\r\n\r\n    if (key === 'arcMeasurement') {\r\n      angle = annotation.Angle.toFixed(2);\r\n    }\r\n\r\n    return (\r\n      angle !== undefined && (\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div>\r\n          {angle}&deg;\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const renderLength = () => {\r\n    const length = annotation?.Length || 0;\r\n    return (\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.length')}</div> {length}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderRadius = () => {\r\n    const radius = annotation?.Radius || 0;\r\n    return (\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.radius')}</div> {radius}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDetails = () => {\r\n    const { key, precision } = data;\r\n    if (key === 'ellipseMeasurement') {\r\n      return <EllipseMeasurementOverlay annotation={annotation} selectedTool={selectedTool} isOpen={isOpen} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"measurement__detail-container\">\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">{t('option.shared.precision')}:</div>\r\n          {precisionFractions[precision] || precision}\r\n        </div>\r\n        {key === 'distanceMeasurement' && (\r\n          <LineMeasurementInput annotation={annotation} isOpen={isOpen} selectedTool={selectedTool} />\r\n        )}\r\n        {[\r\n          'rectangularAreaMeasurement',\r\n          'cloudyRectangularAreaMeasurement',\r\n          'perimeterMeasurement',\r\n          'areaMeasurement',\r\n        ].includes(key) && renderValue()}\r\n        {key === 'arcMeasurement' && renderLength()}\r\n        {key === 'arcMeasurement' && renderRadius()}\r\n        {!['rectangularAreaMeasurement', 'distanceMeasurement', 'cloudyRectangularAreaMeasurement'].includes(key) &&\r\n          renderAngle()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"MeasurementDetail\">\r\n      {renderTitle()}\r\n      {renderDetails()}\r\n    </div>\r\n  );\r\n};\r\n\r\nMeasurementDetail.propTypes = propTypes;\r\n\r\nexport default MeasurementDetail;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport Icon from 'components/Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst CalibrationOverlayPropTypes = {\r\n  tempScale: PropTypes.string,\r\n  onCancelCalibrationMode: PropTypes.func,\r\n  onApplyCalibration: PropTypes.func\r\n};\r\n\r\nconst CalibrationOverlay = ({ tempScale, onCancelCalibrationMode, onApplyCalibration }) => {\r\n  const [t] = useTranslation();\r\n\r\n  const isCalibrationPopupOpen = useSelector((state) => selectors.isElementOpen(state, 'annotationPopup'));\r\n\r\n  const canApplyCalibration = isCalibrationPopupOpen && tempScale;\r\n\r\n  return (\r\n    <div className=\"scale-overlay-calibrate\">\r\n      <div className=\"scale-overlay-header\">\r\n        <Icon glyph=\"ic-calibrate\" className=\"scale-overlay-icon\" />\r\n        <div className=\"scale-overlay-title\">{t('option.measurement.scaleModal.calibrate')}</div>\r\n      </div>\r\n      <div className=\"scale-overlay-content\">\r\n        {!canApplyCalibration\r\n          ? t('option.measurement.scaleOverlay.selectTwoPoints')\r\n          : t('option.measurement.scaleOverlay.inputKnowDimension')}\r\n      </div>\r\n      <div className=\"divider\" />\r\n      <div className=\"scale-overlay-footer\">\r\n        <button\r\n          className=\"calibration-cancel\"\r\n          onMouseDown={onCancelCalibrationMode}\r\n        >\r\n          {t('action.cancel')}\r\n        </button>\r\n        <button\r\n          className=\"calibration-apply\"\r\n          disabled={!(isCalibrationPopupOpen && tempScale && (new Scale(tempScale).worldScale?.value > 0))}\r\n          data-element=\"calibrationApply\"\r\n          onMouseDown={onApplyCalibration}\r\n        >\r\n          {t('action.apply')}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCalibrationOverlay.propTypes = CalibrationOverlayPropTypes;\r\n\r\nexport default CalibrationOverlay;","import ScaleHeader from './ScaleHeader';\r\nimport core from 'core';\r\nimport MeasurementDetail from './MeasurementDetail';\r\nimport PropTypes from 'prop-types';\r\nimport selectors from 'selectors';\r\nimport React, { useEffect, useState, useMemo, memo } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport CalibrationOverlay from './CalibrationOverlay';\r\n\r\nimport './ScaleOverlay.scss';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst propTypes = {\r\n  annotations: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedTool: PropTypes.object,\r\n  updateIsCalibration: PropTypes.func.isRequired,\r\n  enableOrDisableToolElements: PropTypes.func.isRequired,\r\n  onScaleSelected: PropTypes.func.isRequired,\r\n  onCancelCalibrationMode: PropTypes.func.isRequired,\r\n  onApplyCalibration: PropTypes.func.isRequired,\r\n  onAddingNewScale: PropTypes.func.isRequired\r\n};\r\n\r\nconst ScaleOverlay = ({\r\n  annotations,\r\n  selectedTool,\r\n  updateIsCalibration,\r\n  enableOrDisableToolElements,\r\n  onScaleSelected,\r\n  onCancelCalibrationMode,\r\n  onApplyCalibration,\r\n  onAddingNewScale\r\n}) => {\r\n  const [\r\n    { isCalibration, tempScale, previousToolName = 'AnnotationCreateDistanceMeasurement', isFractionalUnit },\r\n    activeToolName\r\n  ] = useSelector((state) => [\r\n    selectors.getCalibrationInfo(state),\r\n    selectors.getActiveToolName(state)\r\n  ], shallowEqual);\r\n  const [scales, setScales] = useState(core.getScales());\r\n  const shouldShowMeasurementDetail = !!Object.keys(scales).length && !(!selectedTool && (!annotations.length || annotations.length > 1));\r\n\r\n  useEffect(() => {\r\n    const onScaleUpdated = (newScales) => {\r\n      setScales(newScales);\r\n    };\r\n    const updateScales = () => {\r\n      setScales(core.getScales());\r\n    };\r\n\r\n    const onCreateAnnotationWithNoScale = () => {\r\n      onAddingNewScale();\r\n    };\r\n    core.addEventListener('scaleUpdated', onScaleUpdated);\r\n    core.addEventListener('createAnnotationWithNoScale', onCreateAnnotationWithNoScale);\r\n    core.addEventListener('annotationsLoaded', updateScales);\r\n    core.addEventListener('annotationChanged', updateScales);\r\n\r\n    return () => {\r\n      core.removeEventListener('scaleUpdated', onScaleUpdated);\r\n      core.removeEventListener('createAnnotationWithNoScale', onCreateAnnotationWithNoScale);\r\n      core.removeEventListener('annotationsLoaded', updateScales);\r\n      core.removeEventListener('annotationChanged', updateScales);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeToolName === 'AnnotationCreateCalibrationMeasurement') {\r\n      !isCalibration && updateIsCalibration(true);\r\n      enableOrDisableToolElements(true);\r\n    } else {\r\n      updateIsCalibration(false);\r\n      enableOrDisableToolElements(false);\r\n    }\r\n  }, [activeToolName, updateIsCalibration, enableOrDisableToolElements]);\r\n\r\n  const selectedScales = useMemo(() => {\r\n    const scales = new Set();\r\n    [...annotations, selectedTool].forEach((measurementItem) => {\r\n      const scale = measurementItem?.Measure?.scale;\r\n      if (scale && !scales.has(scale)) {\r\n        scales.add(scale);\r\n      }\r\n    });\r\n    return [...scales];\r\n  }, [annotations, selectedTool, scales]);\r\n\r\n  const totalScales = Object.keys(scales).map((scale) => new Scale(scale));\r\n\r\n  return isCalibration ? (\r\n    <CalibrationOverlay\r\n      tempScale={tempScale}\r\n      onCancelCalibrationMode={() => onCancelCalibrationMode(previousToolName)}\r\n      onApplyCalibration={() => onApplyCalibration(previousToolName, tempScale, isFractionalUnit)}\r\n      previousToolName={previousToolName}\r\n    />\r\n  ) : (\r\n    <>\r\n      <ScaleHeader\r\n        scales={totalScales}\r\n        selectedScales={selectedScales}\r\n        onScaleSelected={onScaleSelected}\r\n        onAddingNewScale={onAddingNewScale}\r\n      />\r\n      {shouldShowMeasurementDetail && (\r\n        <MeasurementDetail\r\n          annotation={annotations.length > 1 ? null : annotations[0] || null}\r\n          selectedTool={selectedTool}\r\n          isOpen\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nScaleOverlay.propTypes = propTypes;\r\n\r\nexport default memo(ScaleOverlay);\r\n","import actions from 'actions';\r\nimport ScaleOverlay from './ScaleOverlay';\r\nimport classNames from 'classnames';\r\nimport core from 'core';\r\nimport Draggable from 'react-draggable';\r\nimport selectors from 'selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport React, { useState, useRef, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nimport './ScaleOverlay.scss';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst measurementDataElements = [\r\n  'distanceToolGroupButton',\r\n  'arcMeasurementToolGroupButton',\r\n  'perimeterToolGroupButton',\r\n  'areaToolGroupButton',\r\n  'rectangleAreaToolGroupButton',\r\n  'ellipseAreaToolGroupButton',\r\n  'countToolGroupButton',\r\n  'cloudyRectangleAreaToolGroupButton',\r\n  'arcToolGroupButton'\r\n];\r\n\r\nconst DEFAULT_CONTAINER_TOP_OFFSET = 85;\r\nconst DEFAULT_CONTAINER_RIGHT_OFFSET = 35;\r\nconst DEFAULT_WIDTH_RATIO = 0.666;\r\nconst DEFAULT_DISTANCE = 10;\r\n\r\nconst ScaleOverlayContainer = ({ annotations, selectedTool }) => {\r\n  const dispatch = useDispatch();\r\n  const [t] = useTranslation();\r\n  const [\r\n    isDisabled,\r\n    isOpen,\r\n  ] = useSelector(\r\n    (state) => [\r\n      selectors.isElementDisabled(state, DataElements.SCALE_OVERLAY_CONTAINER),\r\n      selectors.isElementOpen(state, DataElements.SCALE_OVERLAY_CONTAINER),\r\n    ],\r\n  );\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n  const [\r\n    documentContainerWidth,\r\n    documentContainerHeight\r\n  ] = useSelector((state) => [\r\n    selectors.getDocumentContainerWidth(state),\r\n    selectors.getDocumentContainerHeight(state)\r\n  ]);\r\n\r\n  const containerRef = useRef(null);\r\n\r\n  const documentElement = core.getViewerElement();\r\n\r\n  const calculateStyle = () => {\r\n    const offset = {\r\n      left: documentContainerWidth * DEFAULT_WIDTH_RATIO,\r\n      top: documentElement?.offsetTop + DEFAULT_DISTANCE || DEFAULT_CONTAINER_TOP_OFFSET,\r\n    };\r\n\r\n    if (documentElement && containerRef?.current) {\r\n      offset.left = Math.min(\r\n        documentElement?.offsetLeft + documentElement?.offsetWidth + DEFAULT_DISTANCE || offset.left,\r\n        documentContainerWidth - containerRef.current.getBoundingClientRect().width,\r\n      );\r\n    }\r\n    return offset;\r\n  };\r\n  const style = calculateStyle();\r\n\r\n  const containerBounds = () => {\r\n    const bounds = {\r\n      top: 0,\r\n      bottom: documentContainerHeight - DEFAULT_CONTAINER_TOP_OFFSET,\r\n      left: 0 - documentContainerWidth,\r\n      right: documentContainerWidth / 3,\r\n    };\r\n    if (style) {\r\n      bounds.right = documentContainerWidth - style['left'] - DEFAULT_CONTAINER_RIGHT_OFFSET;\r\n    }\r\n    return bounds;\r\n  };\r\n\r\n  const syncDraggablePosition = (e, { x, y }) => {\r\n    setPosition({\r\n      x,\r\n      y,\r\n    });\r\n  };\r\n\r\n  const updateIsCalibration = useCallback((isCalibration) => {\r\n    dispatch(actions.updateCalibrationInfo({ isCalibration }));\r\n  }, []);\r\n\r\n  const enableOrDisableToolElements = useCallback((disabled) => {\r\n    measurementDataElements.forEach((dataElement) => {\r\n      dispatch(\r\n        actions.setCustomElementOverrides(dataElement, {\r\n          disabled,\r\n        }),\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const setSelectedScale = (scale) => dispatch(actions.setSelectedScale(scale));\r\n\r\n  const openScaleModal = useCallback((scale) => {\r\n    scale && setSelectedScale(new Scale(scale));\r\n    dispatch(actions.openElements([DataElements.SCALE_MODAL]));\r\n    dispatch(actions.setIsAddingNewScale());\r\n  }, []);\r\n\r\n  const onScaleSelected = useCallback((selectedScales, scale) => {\r\n    const newScale = new Scale(scale);\r\n    if (selectedScales.length === 1 && selectedScales.includes(scale)) {\r\n      openScaleModal(scale);\r\n    } else {\r\n      const applyTo = [...annotations, selectedTool];\r\n      const scaleToDelete = core.getDocumentViewer().getMeasurementManager().getOldScalesToDeleteAfterApplying({ scale: newScale, applyTo })[0];\r\n      const createAndApplyScale = () => {\r\n        core.createAndApplyScale(\r\n          newScale,\r\n          [...annotations, selectedTool]\r\n        );\r\n      };\r\n      if (scaleToDelete) {\r\n        confirmScaleToDelete(scaleToDelete, createAndApplyScale);\r\n      } else {\r\n        createAndApplyScale();\r\n      }\r\n    }\r\n  }, [annotations, selectedTool]);\r\n\r\n  const confirmScaleToDelete = (scaleToDelete, createAndApplyScale) => {\r\n    const message = (\r\n      <div>\r\n        <p>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.ifChangeScale')}\r\n            <b>{scaleToDelete}</b>\r\n            {t('option.measurement.deleteScaleModal.notUsedWillDelete')}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.ifToContinue')}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n    const title = `${t('option.measurement.deleteScaleModal.deleteScale')} ${scaleToDelete}`;\r\n    const confirmBtnText = t('action.confirm');\r\n\r\n    const warning = {\r\n      message,\r\n      title,\r\n      confirmBtnText,\r\n      onConfirm: () => createAndApplyScale()\r\n    };\r\n    dispatch(actions.showWarningMessage(warning));\r\n  };\r\n\r\n  const onCancelCalibrationMode = useCallback((previousToolName) => {\r\n    core.setToolMode(previousToolName);\r\n    updateIsCalibration(false);\r\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, false));\r\n  }, []);\r\n\r\n  const onApplyCalibration = useCallback((previousToolName, tempScale, isFractionalUnit) => {\r\n    dispatch(actions.updateCalibrationInfo({ isCalibration: false, tempScale, isFractionalUnit }));\r\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, false));\r\n    core.setToolMode(previousToolName);\r\n    core.deleteAnnotations([annotations[0]]);\r\n  }, [annotations]);\r\n\r\n  const onAddingNewScale = useCallback(() => {\r\n    openScaleModal();\r\n    dispatch(actions.setIsAddingNewScale(true));\r\n  }, []);\r\n\r\n  return !isDisabled && (\r\n    <Draggable\r\n      position={position}\r\n      bounds={containerBounds()}\r\n      onDrag={syncDraggablePosition}\r\n      onStop={syncDraggablePosition}\r\n      cancel={'.scale-overlay-selector, .add-new-scale'}\r\n    >\r\n      <div\r\n        className={classNames({\r\n          Overlay: true,\r\n          ScaleOverlay: true,\r\n          open: isOpen,\r\n          closed: !isOpen,\r\n        })}\r\n        data-element={DataElements.SCALE_OVERLAY_CONTAINER}\r\n        style={style}\r\n        ref={containerRef}\r\n      >\r\n        <ScaleOverlay\r\n          annotations={annotations}\r\n          selectedTool={selectedTool}\r\n          updateIsCalibration={updateIsCalibration}\r\n          enableOrDisableToolElements={enableOrDisableToolElements}\r\n          onScaleSelected={onScaleSelected}\r\n          onCancelCalibrationMode={onCancelCalibrationMode}\r\n          onApplyCalibration={onApplyCalibration}\r\n          onAddingNewScale={onAddingNewScale}\r\n        />\r\n      </div>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default ScaleOverlayContainer;\r\n"],"sourceRoot":""}